- binary_sensor:
  - name: Next Alarm Imminent
    unique_id: binary_sensor.next_alarm_imminent
    state: "{{ not states('sensor.next_alarm_timings')[:4] == 'AAAA' }}"
    attributes:
      Daniel: "{{ states('input_datetime.daniels_next_alarm') }}"
      Grace: "{{ states('input_datetime.graces_next_alarm') }}"
      Eli: "{{ states('input_datetime.elis_next_alarm') }}"
      Elena: "{{ states('input_datetime.elenas_next_alarm') }}"
      parents_room_next_alarm_time: "{{ ([states('input_datetime.daniels_next_alarm') | as_datetime, states('input_datetime.graces_next_alarm') | as_datetime] | min).strftime('%H:%M') }}"
      elis_room_next_alarm_time: "{{ (states('input_datetime.elis_next_alarm') | as_datetime).strftime('%H:%M') }}"
      elenas_room_next_alarm_time: "{{ (states('input_datetime.elenas_next_alarm') | as_datetime).strftime('%H:%M') }}"

  - name: Yard Window
    unique_id: binary_sensor.yard_window
    device_class: window
    state: >
      {{ is_state('binary_sensor.yard_window_1', 'on') or 
         is_state('binary_sensor.yard_window_2','on') }}
    attributes:
      total_panes_open: "{{ is_state('binary_sensor.yard_window_1','on') + is_state('binary_sensor.yard_window_2','on') }}/2"
      total_panes: 2
      yard_window_1: "{{ states('binary_sensor.yard_window_1') }}"
      yard_window_2: "{{ states('binary_sensor.yard_window_2') }}"

  - name: Kitchen Window
    unique_id: binary_sensor.kitchen_window
    device_class: window
    state: >
      {{ not is_state('cover.kitchen_blind', 'closed') }}
    attributes:
      kitchen_blind: "{{ states('cover.kitchen_blind') }}"

  - name: Dining Room Presence
    unique_id: binary_sensor.dining_room_presence
    device_class: occupancy
    state: "{{ is_state('binary_sensor.dining_room_radar_occupancy', 'on') or is_state('binary_sensor.dining_room_motion', 'on') }}"
    attributes:
      dining_room_radar_occupancy: "{{ states('binary_sensor.dining_room_radar_occupancy') }}"
      dining_room_motion: "{{ states('binary_sensor.dining_room_motion') }}"

  - name: Living Room Presence
    unique_id: binary_sensor.living_room_presence
    device_class: occupancy
    state: "{{ is_state('binary_sensor.living_room_radar_occupancy', 'on') or is_state('binary_sensor.living_room_motion', 'on') }}"
    attributes:
      living_room_radar_occupancy: "{{ states('binary_sensor.living_room_radar_occupancy') }}"
      living_room_motion: "{{ states('binary_sensor.living_room_motion') }}"

  - name: Study Room Motion
    unique_id: binary_sensor.study_room_motion
    device_class: motion
    state: >
      {{ is_state('binary_sensor.study_walkway_motion', 'on') or
         is_state('binary_sensor.study_room_presence', 'on') }}
    attributes:
      study_walkway_motion: "{{ states('binary_sensor.study_walkway_motion') }}"
      study_room_presence: "{{ states('binary_sensor.study_room_presence') }}"

  - name: Hallway Doors
    unique_id: binary_sensor.hallway_doors
    device_class: door
    state: >
      {{ is_state('binary_sensor.powder_room_door', 'on') or
        is_state('binary_sensor.junior_bathroom_door', 'on') or
        is_state('binary_sensor.elis_room_door', 'on') or
        is_state('binary_sensor.elenas_room_door', 'on')
      }}
    attributes:
      powder_room_door: "{{ states('binary_sensor.powder_room_door') }}"
      junior_bathroom_door: "{{ states('binary_sensor.junior_bathroom_door') }}"
      elis_room_door: "{{ states('binary_sensor.elis_room_door') }}"
      elenas_room_door: "{{ states('binary_sensor.elenas_room_door') }}"
      total_doors_open: "{{ is_state('binary_sensor.powder_room_door', 'on') + is_state('binary_sensor.junior_bathroom_door', 'on') + is_state('binary_sensor.elenas_room_door', 'on') + is_state('binary_sensor.elis_room_door', 'on') }}/4"
      total_doors: "4"

  - name: Parents' Room Doors
    unique_id: binary_sensor.parents_room_doors
    device_class: door
    state: >
      {{ is_state('binary_sensor.parents_room_door', 'on') or
        is_state('binary_sensor.master_bathroom_door', 'on')
      }}
    attributes:
      parents_room_door: "{{ states('binary_sensor.parents_room_door') }}"
      master_bathroom_door: "{{ states('binary_sensor.master_bathroom_door') }}"
      total_doors_open: "{{ is_state('binary_sensor.parents_room_door', 'on') + is_state('binary_sensor.master_bathroom_door', 'on') }}/2"
      total_doors: "2"

  - name: AC On With Door Open at Dining Room
    unique_id: binary_sensor.ac_on_with_door_open_at_dining_room
    state: >
      {% from 'ac.jinja' import ac_on_with_opening_open %}
      {{ ac_on_with_opening_open('binary_sensor.main_door', ['climate.dining_room_ac']) }}
    attributes:
      main_door: "{{ states('binary_sensor.main_door') }}"
      dining_room_ac: " {{ states('climate.dining_room_ac') }}"

  - name: AC On With Window Open at Yard
    unique_id: binary_sensor.ac_on_with_window_open_at_yard
    state: >
      {% from 'ac.jinja' import ac_on_with_opening_open %}
      {{ ac_on_with_opening_open('binary_sensor.yard_window', ['climate.dining_room_ac']) }}
    attributes:
      yard_window: "{{ states('binary_sensor.yard_window') }}"
      dining_room_ac: " {{ states('climate.dining_room_ac') }}"

  - name: AC On With Door Open at Powder Room
    unique_id: binary_sensor.ac_on_with_door_open_at_powder_room
    state: >
      {% from 'ac.jinja' import ac_on_with_opening_open %}
      {{ ac_on_with_opening_open('binary_sensor.powder_room_door', ['climate.dining_room_ac']) }}
    attributes:
      powder_room_door: "{{ states('binary_sensor.powder_room_door') }}"
      dining_room_ac: " {{ states('climate.dining_room_ac') }}"

  - name: AC On With Door Open at Junior Bathroom
    unique_id: binary_sensor.ac_on_with_door_open_at_junior_bathroom
    state: >
      {% from 'ac.jinja' import ac_on_with_opening_open %}
      {{ ac_on_with_opening_open('binary_sensor.junior_bathroom_door', ['climate.dining_room_ac']) }}
    attributes:
      junior_bathroom_door: "{{ states('binary_sensor.junior_bathroom_door') }}"
      dining_room_ac: " {{ states('climate.dining_room_ac') }}"

  - name: AC On With Door Open at Elena's Room
    unique_id: binary_sensor.ac_on_with_door_open_at_elenas_room
    state: >
      {% from 'ac.jinja' import ac_on_with_opening_open %}
      {{ ac_on_with_opening_open('binary_sensor.elenas_room_door', ['climate.dining_room_ac', 'climate.elenas_room_ac']) }}
    attributes:
      elenas_room_door: "{{ states('binary_sensor.elenas_room_door') }}"
      elenas_room_ac: "{{ states('climate.elenas_room_ac') }}"
      dining_room_ac: "{{ states('climate.dining_room_ac') }}"

  - name: AC On With Windows Open at Elena's Room
    unique_id: binary_sensor.ac_on_with_windows_open_at_elenas_room
    state: >
      {% from 'ac.jinja' import ac_on_with_opening_open %}
      {{ ac_on_with_opening_open('binary_sensor.elenas_room_left_window', ['climate.elenas_room_ac']) }}
    attributes:
      elenas_room_left_window: "{{ states('binary_sensor.elenas_room_left_window') }}"
      elenas_room_ac: " {{ states('climate.elenas_room_ac') }}"

  - name: AC On With Door Open at Eli's Room
    unique_id: binary_sensor.ac_on_with_door_open_at_elis_room
    state: >
      {% from 'ac.jinja' import ac_on_with_opening_open %}
      {{ ac_on_with_opening_open('binary_sensor.elis_room_door', ['climate.dining_room_ac', 'climate.elis_room_ac']) }}
    attributes:
      elis_room_door: "{{ states('binary_sensor.elis_room_door') }}"
      elis_room_ac: "{{ states('climate.elis_room_ac') }}"
      dining_room_ac: "{{ states('climate.dining_room_ac') }}"

  - name: AC On With Windows Open at Eli's Room
    unique_id: binary_sensor.ac_on_with_windows_open_at_elis_room
    state: >
      {% from 'ac.jinja' import ac_on_with_opening_open %}
      {{ ac_on_with_opening_open('binary_sensor.elis_room_right_window', ['climate.elis_room_ac']) }}
    attributes:
      elis_room_right_window: "{{ states('binary_sensor.elis_room_right_window') }}"
      elis_room_ac: " {{ states('climate.elis_room_ac') }}"

  - name: AC On With Doors Open at Hallway
    unique_id: binary_sensor.ac_on_with_doors_open_at_hallway
    state: >
      {{ is_state('binary_sensor.ac_on_with_door_open_at_elenas_room', 'on')
        or is_state('binary_sensor.ac_on_with_door_open_at_elis_room', 'on')
        or is_state('binary_sensor.ac_on_with_door_open_at_powder_room', 'on')
        or is_state('binary_sensor.ac_on_with_door_open_at_junior_bathroom', 'on')
      }}
    attributes:
      elenas_room_door: "{{ states('binary_sensor.elenas_room_door') }}"
      elis_room_door: "{{ states('binary_sensor.elis_room_door') }}"
      powder_room_door: "{{ states('binary_sensor.powder_room_door') }}"
      junior_bathroom_door: "{{ states('binary_sensor.junior_bathroom_door') }}"
      elenas_room_ac: "{{ states('climate.elenas_room_ac') }}"
      elis_room_ac: "{{ states('climate.elis_room_ac') }}"
      dining_room_ac: "{{ states('climate.dining_room_ac') }}"

  - name: AC On With Door Open at Study Room
    unique_id: binary_sensor.ac_on_with_door_open_at_study_room
    state: >
      {% from 'ac.jinja' import ac_on_with_opening_open %}
      {{ ac_on_with_opening_open('binary_sensor.parents_room_door', ['climate.study_room_ac', 'climate.parents_room_ac']) }}
    attributes:
      parents_room_door: "{{ states('binary_sensor.parents_room_door') }}"
      parents_room_ac: "{{ states('climate.parents_room_ac') }}"
      study_room_ac: "{{ states('climate.study_room_ac') }}"

  - name: AC On With Door Open at Master Bathroom
    unique_id: binary_sensor.ac_on_with_door_open_at_master_bathroom
    state: >
      {% from 'ac.jinja' import ac_on_with_opening_open %}
      {{ ac_on_with_opening_open('binary_sensor.master_bathroom_door', ['climate.parents_room_ac']) }}
    attributes:
      powder_room_door: "{{ states('binary_sensor.master_bathroom_door') }}"
      parents_room_ac: " {{ states('climate.parents_room_ac') }}"

  - name: AC On With Doors Open at Parents' Room
    unique_id: binary_sensor.ac_on_with_doors_open_at_parents_room
    state: >
      {{ is_state('binary_sensor.ac_on_with_door_open_at_study_room', 'on')
        or is_state('binary_sensor.ac_on_with_door_open_at_master_bathroom', 'on')
      }}
    attributes:
      parents_room_door: "{{ states('binary_sensor.parents_room_door') }}"
      master_bathroom_door: "{{ states('binary_sensor.master_bathroom_door') }}"
      parents_room_ac: "{{ states('climate.parents_room_ac') }}"
      study_room_ac: "{{ states('climate.study_room_ac') }}"

  - name: AC On With Windows Open at Parents' Room
    unique_id: binary_sensor.ac_on_with_windows_open_at_parents_room
    state: >
      {% from 'ac.jinja' import ac_on_with_opening_open %}
      {{ ac_on_with_opening_open('binary_sensor.parents_room_left_window', ['climate.parents_room_ac']) }}
    attributes:
      parents_room_left_window: "{{ states('binary_sensor.parents_room_left_window') }}"
      parents_room_ac: " {{ states('climate.parents_room_ac') }}"

  - name: AC On With Window Open at Kitchen
    unique_id: binary_sensor.ac_on_with_window_open_at_kitchen
    state: >
      {% from 'ac.jinja' import ac_on_with_opening_open %}
      {{ ac_on_with_opening_open('binary_sensor.kitchen_window', ['climate.living_room_ac']) }}
    attributes:
      kitchen_window: "{{ states('binary_sensor.kitchen_window') }}"
      living_room_ac: " {{ states('climate.living_room_ac') }}"

  - name: AC On With Doors Open
    unique_id: binary_sensor.ac_on_with_doors_open
    state: >
      {{ is_state('binary_sensor.ac_on_with_door_open_at_elenas_room', 'on') 
         or is_state('binary_sensor.ac_on_with_door_open_at_elis_room', 'on') 
         or is_state('binary_sensor.ac_on_with_door_open_at_powder_room', 'on')
         or is_state('binary_sensor.ac_on_with_door_open_at_junior_bathroom', 'on')
         or is_state('binary_sensor.ac_on_with_door_open_at_dining_room', 'on')
         or is_state('binary_sensor.ac_on_with_window_open_at_yard', 'on') 
         or is_state('binary_sensor.ac_on_with_doors_open_at_parents_room', 'on') 
         or is_state('binary_sensor.ac_on_with_windows_open_at_parents_room', 'on') 
         or is_state('binary_sensor.ac_on_with_door_open_at_master_bathroom', 'on') 
         or is_state('binary_sensor.ac_on_with_window_open_at_kitchen', 'on') }}
    attributes:
      elenas_room_door: "{{ states('binary_sensor.elenas_room_door') }}"
      elis_room_door: "{{ states('binary_sensor.elis_room_door') }}"
      powder_room_door: "{{ states('binary_sensor.powder_room_door') }}"
      junior_bathroom_door: "{{ states('binary_sensor.junior_bathroom_door') }}"
      main_door: "{{ states('binary_sensor.main_door') }}"
      yard_window: "{{ states('binary_sensor.yard_window') }}"
      parents_room_door: "{{ states('binary_sensor.parents_room_door') }}"
      parents_room_left_window: "{{ states('binary_sensor.parents_room_left_window') }}"
      master_bathroom_door: "{{ states('binary_sensor.master_bathroom_door') }}"
      kitchen_window: "{{ states('binary_sensor.kitchen_window') }}"
      elenas_room_ac: "{{ states('climate.elenas_room_ac') }}"
      elis_room_ac: "{{ states('climate.elis_room_ac') }}"
      dining_room_ac: "{{ states('climate.dining_room_ac') }}"
      living_room_ac: "{{ states('climate.living_room_ac') }}"
      study_room_ac: "{{ states('climate.study_room_ac') }}"
      parents_room_ac: "{{ states('climate.parents_room_ac') }}"

  - name: Junior Bathroom Occupancy
    unique_id: binary_sensor.junior_bathroom_occupancy
    state: "{{ states('input_boolean.junior_bathroom_occupancy') }}"
    device_class: occupancy

  - name: Powder Room Occupancy
    unique_id: binary_sensor.powder_room_occupancy
    state: "{{ states('input_boolean.powder_room_occupancy') }}"
    device_class: occupancy

  - name: Master Bathroom Occupancy
    unique_id: binary_sensor.master_bathroom_occupancy
    state: "{{ states('input_boolean.master_bathroom_occupancy') }}"
    device_class: occupancy

  - name: Rice Cooker
    unique_id: binary_sensor.rice_cooker
    state: "{{ states('sensor.rice_cooker_watts') | int(0) > 0 }}"
    attributes:
      dishwasher_status: "{{ states('input_select.rice_cooker_status') }}"
    availability: "{{ states('switch.rice_cooker') not in ['unavailable','unknown'] }}"

  - name: Washer Tub Dirty
    unique_id: binary_sensor.washer_tub_dirty
    state: "{{ states('sensor.washer_tub_clean_counter') | int(0) > 30 }}"

  - name: Study Room Ethernet Connection
    unique_id: binary_sensor.study_room_ethernet_connection
    state: "{{ 'home' in states.device_tracker | selectattr('entity_id', 'search', '._ethernet') | map(attribute = 'state') | list }}"
    device_class: motion

  - name: Sims Drive Market Bus Stop
    unique_id: binary_sensor.sims_drive_market_bus_stop
    state: "{{ states('sensor.sims_drive_market_bus_134') | int(100) < 5 or states('sensor.sims_drive_market_bus_137') | int(100) < 5 or states('sensor.sims_drive_market_bus_64') | int(100) < 5 }}"
    attributes:
      services: "{{ ['64','134','137'] }}"
      comfortable_walk_time: 5
      min_walk_time: 2
      next_buses: >
        {% set next_buses = namespace(output = []) %}
        {% for service_no in this.attributes.services %}
          {% for nextbus in ['NextBus','NextBus2','NextBus3'] %}
            {% if state_attr('sensor.sims_drive_market_bus_' + service_no, nextbus).EstimatedArrival is defined %}
              {% if state_attr('sensor.sims_drive_market_bus_' + service_no, nextbus).EstimatedArrival | length > 0 %}
                {% set next_buses.output = next_buses.output + [dict(state_attr('sensor.sims_drive_market_bus_' + service_no, nextbus), **{'ServiceNo': service_no})] %}
              {% endif %}
            {% endif %}
          {% endfor %}
        {% endfor %}
        {{ next_buses.output | sort(attribute = 'EstimatedArrival') }}
    availability: "{{ is_state('binary_sensor.sims_drive_market_bus_64_operating', 'on') or is_state('binary_sensor.sims_drive_market_bus_134_operating', 'on') or is_state('binary_sensor.sims_drive_market_bus_137_operating', 'on') }}"

  - name: Opposite Aljunied Station Bus Stop
    unique_id: binary_sensor.opposite_aljunied_station_bus_stop
    state: "{{ states('sensor.opposite_aljunied_station_bus_40') | int(100) < 10 or states('sensor.opposite_aljunied_station_bus_125') | int(100) < 10 or states('sensor.sims_drive_market_bus_64') | int(100) < 5 }}"
    attributes:
      services: "{{ ['40','125'] }}"
      comfortable_walk_time: 10
      min_walk_time: 5
      next_buses: >
        {% set next_buses = namespace(output = []) %}
        {% for service_no in this.attributes.services %}
          {% for nextbus in ['NextBus','NextBus2','NextBus3'] %}
            {% if state_attr('sensor.opposite_aljunied_station_bus_' + service_no, nextbus).EstimatedArrival is defined %}
              {% if state_attr('sensor.opposite_aljunied_station_bus_' + service_no, nextbus).EstimatedArrival | length > 0 %}
                {% set next_buses.output = next_buses.output + [dict(state_attr('sensor.opposite_aljunied_station_bus_' + service_no, nextbus), **{'ServiceNo': service_no})] %}
              {% endif %}
            {% endif %}
          {% endfor %}
        {% endfor %}
        {{ next_buses.output | sort(attribute = 'EstimatedArrival') }}
    availability: "{{ is_state('binary_sensor.opposite_aljunied_station_bus_40_operating', 'on') or is_state('binary_sensor.opposite_aljunied_station_bus_125_operating', 'on') }}"

  - name: Aljunied Station Bus Stop
    unique_id: binary_sensor.aljunied_station_bus_stop
    state: "{{ states('sensor.aljunied_station_bus_40') | int(100) < 12 or states('sensor.aljunied_station_bus_80') | int(100) < 12 or states('sensor.aljunied_station_bus_100') | int(100) < 12 }}"
    attributes:
      services: "{{ ['40','80','100'] }}"
      comfortable_walk_time: 12
      min_walk_time: 7
      next_buses: >
        {% set next_buses = namespace(output = []) %}
        {% for service_no in this.attributes.services %}
          {% for nextbus in ['NextBus','NextBus2','NextBus3'] %}
            {% if state_attr('sensor.aljunied_station_bus_' + service_no, nextbus).EstimatedArrival is defined %}
              {% if state_attr('sensor.aljunied_station_bus_' + service_no, nextbus).EstimatedArrival | length > 0 %}
                {% set next_buses.output = next_buses.output + [dict(state_attr('sensor.aljunied_station_bus_' + service_no, nextbus), **{'ServiceNo': service_no})] %}
              {% endif %}
            {% endif %}
          {% endfor %}
        {% endfor %}
        {{ next_buses.output | sort(attribute = 'EstimatedArrival') }}
    availability: "{{ is_state('binary_sensor.aljunied_station_bus_40_operating', 'on') or is_state('binary_sensor.aljunied_station_bus_80_operating', 'on') or is_state('binary_sensor.aljunied_station_bus_100_operating', 'on') }}"

  - name: Before Lorong 23 Geylang Bus Stop
    unique_id: binary_sensor.before_lorong_23_geylang_bus_stop
    state: "{{ states('sensor.before_lorong_23_geylang_bus_2') | int(100) < 10 or states('sensor.before_lorong_23_geylang_bus_13') | int(100) < 10 or states('sensor.before_lorong_23_geylang_bus_26') | int(100) < 10 or states('sensor.before_lorong_23_geylang_bus_67') | int(100) < 10 }}"
    attributes:
      services: "{{ ['2','13','26','67'] }}"
      comfortable_walk_time: 10
      min_walk_time: 5
      next_buses: >
        {% set next_buses = namespace(output = []) %}
        {% for service_no in this.attributes.services %}
          {% for nextbus in ['NextBus','NextBus2','NextBus3'] %}
            {% if state_attr('sensor.before_lorong_23_geylang_bus_' + service_no, nextbus).EstimatedArrival is defined %}
              {% if state_attr('sensor.before_lorong_23_geylang_bus_' + service_no, nextbus).EstimatedArrival | length > 0 %}
                {% set next_buses.output = next_buses.output + [dict(state_attr('sensor.before_lorong_23_geylang_bus_' + service_no, nextbus), **{'ServiceNo': service_no})] %}
              {% endif %}
            {% endif %}
          {% endfor %}
        {% endfor %}
        {{ next_buses.output | sort(attribute = 'EstimatedArrival') }}
    availability: "{{ is_state('binary_sensor.before_lorong_23_geylang_bus_2_operating', 'on') or is_state('binary_sensor.before_lorong_23_geylang_bus_13_operating', 'on') or is_state('binary_sensor.before_lorong_23_geylang_bus_26_operating', 'on') or is_state('binary_sensor.before_lorong_23_geylang_bus_67_operating', 'on') }}"

- sensor:
  - name: Next Alarm Timings
    unique_id: sensor.next_alarm_timings
    state: >
      {% set alarms = namespace({ 'Daniel': as_datetime(states('input_datetime.daniels_next_alarm')).astimezone(now().tzinfo),
                                  'Grace': as_datetime(states('input_datetime.graces_next_alarm')).astimezone(now().tzinfo),
                                  'Eli': as_datetime(states('input_datetime.elis_next_alarm')).astimezone(now().tzinfo),
                                  'Elena': as_datetime(states('input_datetime.elenas_next_alarm')).astimezone(now().tzinfo) }) %}
      {% set alarms_dismissed = namespace({ 'Daniel': alarms['Daniel'] <= alarms['Grace'] and is_state('input_boolean.parents_room_next_alarm_dismissed', 'on'),
                                            'Grace': alarms['Grace'] <= alarms['Daniel'] and is_state('input_boolean.parents_room_next_alarm_dismissed', 'on'),
                                            'Eli': is_state('input_boolean.elis_room_next_alarm_dismissed', 'on'),
                                            'Elena': is_state('input_boolean.elenas_room_next_alarm_dismissed', 'on') }) %}
      {% set alarm_timings = namespace(output = '') %}
      {% for person in ['Daniel','Grace','Eli','Elena'] %}
        {% if alarms[person] - now() > timedelta(hours = 12) %}
          {% set alarm_timings.output = alarm_timings.output + 'A' %}
        {% else %}
          {% if alarms_dismissed[person] %}
            {% set alarm_timings.output = alarm_timings.output + 'E' %}
          {% else %}
            {% if (alarms[person] - alarms['Eli']) <= timedelta(minutes = 10) and (alarms['Eli'] - alarms[person]) <= timedelta(minutes = 10) %}
              {% set alarm_timings.output = alarm_timings.output + 'B' %}
            {% elif (alarms[person] - alarms['Elena']) <= timedelta(minutes = 10) and (alarms['Elena'] - alarms[person]) <= timedelta(minutes = 10) %}
              {% set alarm_timings.output = alarm_timings.output + 'C' %}
            {% else %}
              {% set alarm_timings.output = alarm_timings.output + 'D' %}
            {% endif %}
          {% endif %}
        {% endif %}
      {% endfor %}
      {% for person in ['Daniel','Grace','Eli','Elena'] %}
        {% if alarms[person] - now() <= timedelta(minutes = 15) and alarms[person] - now() > timedelta(seconds = -15) %}
          {% set alarm_timings.output = alarm_timings.output + 'T' %}
        {% else %}
          {% set alarm_timings.output = alarm_timings.output + 'F' %}
        {% endif %}
      {% endfor %}
      {{ alarm_timings.output }}
    attributes:
      Daniel: "{{ states('input_datetime.daniels_next_alarm') }}"
      daniel_next_alarm_imminent: "{{ states('sensor.next_alarm_timings')[0] != 'A' }}"
      daniel_next_alarm_dismissable: "{{ states('sensor.next_alarm_timings')[4] == 'T' }}"
      daniel_next_alarm_dismissed: "{{ states('sensor.next_alarm_timings')[0] == 'E' }}"
      Grace: "{{ states('input_datetime.graces_next_alarm') }}"
      grace_next_alarm_imminent: "{{ states('sensor.next_alarm_timings')[1] != 'A' }}"
      grace_next_alarm_dismissable: "{{ states('sensor.next_alarm_timings')[5] == 'T' }}"
      grace_next_alarm_dismissed: "{{ states('sensor.next_alarm_timings')[1] == 'E' }}"
      parents_room: "{{ [states('input_datetime.daniels_next_alarm') | as_datetime, states('input_datetime.graces_next_alarm') | as_datetime] | min }}"
      parents_room_next_alarm_imminent: "{{ states('sensor.next_alarm_timings')[0] != 'A' or states('sensor.next_alarm_timings')[1] != 'A' }}"
      parents_room_next_alarm_dismissable: "{{ states('sensor.next_alarm_timings')[4] == 'T' or states('sensor.next_alarm_timings')[5] == 'T' }}"
      Eli: "{{ states('input_datetime.elis_next_alarm') }}"
      elis_room_next_alarm_imminent: "{{ states('sensor.next_alarm_timings')[2] != 'A' }}"
      elis_room_next_alarm_dismissable: "{{ states('sensor.next_alarm_timings')[6] == 'T' }}"
      eli_next_alarm_dismissed: "{{ states('sensor.next_alarm_timings')[2] == 'E' }}"
      Elena: "{{ states('input_datetime.elenas_next_alarm') }}"
      elenas_room_next_alarm_imminent: "{{ states('sensor.next_alarm_timings')[3] != 'A' }}"
      elenas_room_next_alarm_dismissable: "{{ states('sensor.next_alarm_timings')[7] == 'T' }}"
      elena_next_alarm_dismissed: "{{ states('sensor.next_alarm_timings')[3] == 'E' }}"

  - name: Washer Status
    unique_id: sensor.washer_status
    state: >
      {% if is_state('sensor.washer','off') %}
        Off
      {% else %}
        {{ state_attr('sensor.washer', 'run_state') }}
      {% endif %}
    attributes:
      washer_power: "{{ states('sensor.washer') }}"
      washer_run_state: "{{ state_attr('sensor.washer', 'run_state') }}"
      washer_remaining_time: "{{ state_attr('sensor.washer', 'remain_time')[:-3] }}"
      washer_reserve_time: "{{ state_attr('sensor.washer', 'reserve_time')[:-3] }}"

  - name: Washer Countdown
    unique_id: sensor.washer_countdown
    state: >
      {% if states('sensor.washer_status') == 'Delay Set' %}
        {{ states('sensor.washer_countdown_time')[:-3] }}
      {% elif states('sensor.washer_status') in ['Washing', 'Rinsing', 'Spinning'] %}
        {{ states('sensor.washer_remaining_time')[:-3] }}
      {% else %}
        -
      {% endif %}

  - name: Elena's Room AC Status
    unique_id: sensor.elenas_room_ac_status
    state: >
      {% if is_state('automation.elenas_room_ac_auto_control', 'on') %}
        auto
      {% else %}
        {{ states('climate.elenas_room_ac') }}
      {% endif %}
    attributes:
      ac_state: "{{ states('climate.elenas_room_ac') }}"
      ac_auto_control: "{{ states('automation.elenas_room_ac_auto_control') }}"

  - name: Eli's Room AC Status
    unique_id: sensor.elis_room_ac_status
    state: >
      {% if is_state('automation.elis_room_ac_auto_control', 'on') %}
        auto
      {% else %}
        {{ states('climate.elis_room_ac') }}
      {% endif %}
    attributes:
      ac_state: "{{ states('climate.elis_room_ac') }}"
      ac_auto_control: "{{ states('automation.elis_room_ac_auto_control') }}"

  - name: Dining Room AC Status
    unique_id: sensor.dining_room_ac_status
    state: >
      {% if is_state('automation.dining_room_ac_auto_control', 'on') %}
        auto
      {% else %}
        {{ states('climate.dining_room_ac') }}
      {% endif %}
    attributes:
      ac_state: "{{ states('climate.dining_room_ac') }}"
      ac_auto_control: "{{ states('automation.dining_room_ac_auto_control') }}"

  - name: Living Room AC Status
    unique_id: sensor.living_room_ac_status
    state: >
      {% if is_state('automation.living_room_ac_auto_control', 'on') %}
        auto
      {% else %}
        {{ states('climate.living_room_ac') }}
      {% endif %}
    attributes:
      ac_state: "{{ states('climate.living_room_ac') }}"
      ac_auto_control: "{{ states('automation.living_room_ac_auto_control') }}"

  - name: Study Room AC Status
    unique_id: sensor.study_room_ac_status
    state: >
      {% if is_state('automation.study_room_ac_auto_control', 'on') %}
        auto
      {% else %}
        {{ states('climate.study_room_ac') }}
      {% endif %}
    attributes:
      ac_state: "{{ states('climate.study_room_ac') }}"
      ac_auto_control: "{{ states('automation.study_room_ac_auto_control') }}"

  - name: Parents' Room AC Status
    unique_id: sensor.parents_room_ac_status
    state: >
      {% if is_state('automation.parents_room_ac_auto_control', 'on') %}
        auto
      {% else %}
        {{ states('climate.parents_room_ac') }}
      {% endif %}
    attributes:
      ac_state: "{{ states('climate.parents_room_ac') }}"
      ac_auto_control: "{{ states('automation.parents_room_ac_auto_control') }}"

  - name: Raining With Yard Windows Open
    unique_id: sensor.raining_with_yard_windows_open
    state: >
      {% from 'weather.jinja' import raining_with_window_open %}
      {{ raining_with_window_open('binary_sensor.yard_window') }}
    attributes:
      yard_window: "{{ states('binary_sensor.yard_window') }}"
      local_rainfall: "{{ states('sensor.local_rainfall') }}"
      local_two_hour_forecast: "{{ states('sensor.local_two_hour_forecast') }}"

  - name: Raining With Kitchen Window Open
    unique_id: sensor.raining_with_kitchen_window_open
    state: >
      {% from 'weather.jinja' import raining_with_window_open %}
      {{ raining_with_window_open('binary_sensor.kitchen_window') }}
    attributes:
      yard_window: "{{ states('binary_sensor.kitchen_window') }}"
      local_rainfall: "{{ states('sensor.local_rainfall') }}"
      local_two_hour_forecast: "{{ states('sensor.local_two_hour_forecast') }}"

  - name: Raining With Elena's Room Windows Open
    unique_id: sensor.raining_with_elenas_room_windows_open
    state: >
      {% from 'weather.jinja' import raining_with_window_open %}
      {{ raining_with_window_open('binary_sensor.elenas_room_left_window') }}
    attributes:
      elenas_room_left_window: "{{ states('binary_sensor.elenas_room_left_window') }}"
      local_rainfall: "{{ states('sensor.local_rainfall') }}"
      local_two_hour_forecast: "{{ states('sensor.local_two_hour_forecast') }}"

  - name: Raining With Eli's Room Windows Open
    unique_id: sensor.raining_with_elis_room_windows_open
    state: >
      {% from 'weather.jinja' import raining_with_window_open %}
      {{ raining_with_window_open('binary_sensor.elis_room_right_window') }}
    attributes:
      elis_room_right_window: "{{ states('binary_sensor.elis_room_right_window') }}"
      local_rainfall: "{{ states('sensor.local_rainfall') }}"
      local_two_hour_forecast: "{{ states('sensor.local_two_hour_forecast') }}"

  - name: Raining With Parents' Room Windows Open
    unique_id: sensor.raining_with_parents_room_windows_open
    state: >
      {% from 'weather.jinja' import raining_with_window_open %}
      {{ raining_with_window_open('binary_sensor.parents_room_left_window') }}
    attributes:
      parents_room_left_window: "{{ states('binary_sensor.parents_room_left_window') }}"
      local_rainfall: "{{ states('sensor.local_rainfall') }}"
      local_two_hour_forecast: "{{ states('sensor.local_two_hour_forecast') }}"

  - name: Raining With Windows Open
    unique_id: sensor.raining_with_windows_open
    state: >
      {% from 'weather.jinja' import raining_with_window_open %}
      {% set status = [raining_with_window_open('binary_sensor.yard_window'), raining_with_window_open('binary_sensor.kitchen_window')] %}
      {% if 'alert' in status %}
        alert
      {% elif 'warning' in status %}
        warning
      {% else %}
        clear
      {% endif %}
    attributes:
      kitchen_window: "{{ states('binary_sensor.kitchen_window') }}"
      yard_window: "{{ states('binary_sensor.yard_window') }}"
      local_rainfall: "{{ states('sensor.local_rainfall') }}"
      local_two_hour_forecast: "{{ states('sensor.local_two_hour_forecast') }}"

  - name: Dishwasher Last Run Duration
    unique_id: sensor.dishwasher_last_run_duration
    state: >
      {% from 'text_formatting.jinja' import run_time %}
      {{ run_time(states('input_datetime.dishwasher_last_run_start') | as_datetime,
                  states('input_datetime.dishwasher_last_run_end') | as_datetime,
                  -3) }}

  - name: Rice Cooker Last Run Duration
    unique_id: sensor.rice_cooker_last_run_duration
    state: >
      {% from 'text_formatting.jinja' import run_time %}
      {{ run_time(states('input_datetime.rice_cooker_last_run_start') | as_datetime,
                  states('input_datetime.rice_cooker_last_run_end') | as_datetime,
                  -3) }}

  - name: Dining Room Fan Direction
    unique_id: sensor.dining_room_fan_direction
    state: "{{ state_attr('fan.dining_room_fan','direction') }}"

  - name: Study Room Fan Direction
    unique_id: sensor.study_room_fan_direction
    state: "{{ state_attr('fan.study_room_fan','direction') }}"

  - name: Living Room Fan Direction
    unique_id: sensor.living_room_fan_direction
    state: "{{ state_attr('fan.living_room_fan','direction') }}"

  - name: Living Room Radar Lux Calibrated
    unique_id: sensor.living_room_radar_lux_calibrated
    state: "{{ e**(-0.143485757 + 1.217946494 * log(states('sensor.living_room_radar_lux') | float(0) + 1)) }}"
    device_class: illuminance
    unit_of_measurement: lx
    availability: "{{ states('sensor.living_room_radar_lux') not in ['unavailable','unknown'] }}"
    attributes:
      raw: "{{ states('sensor.living_room_radar_lux') }}"

  - name: Study Room Radar Lux Calibrated
    unique_id: sensor.study_room_radar_lux_calibrated
    state: "{{ e**(1.049044265 + 1.403927828 * log(states('sensor.study_room_radar_lux') | float(0) + 1)) }}"
    device_class: illuminance
    unit_of_measurement: lx
    availability: "{{ states('sensor.study_room_radar_lux') not in ['unavailable','unknown'] }}"
    attributes:
      raw: "{{ states('sensor.study_room_radar_lux') }}"

  - name: Kitchen Radar Lux Calibrated
    unique_id: sensor.kitchen_radar_lux_calibrated
    state: "{{ e**(0.19167503 + 1.126223229 * log(states('sensor.kitchen_radar_lux') | float(0) + 1)) }}"
    device_class: illuminance
    unit_of_measurement: lx
    availability: "{{ states('sensor.kitchen_radar_lux') not in ['unavailable','unknown'] }}"
    attributes:
      raw: "{{ states('sensor.kitchen_radar_lux') }}"

  - name: Kitchen Blind Position
    unique_id: sensor.kitchen_blind_position
    state: "{{ state_attr('cover.kitchen_blind','current_position') | int(100) }}"

  - name: Master Bathroom Blind Position
    unique_id: sensor.master_bathroom_blind_position
    state: "{{ state_attr('cover.master_bathroom_blind','current_position') | int(100)}}"
    availability: "{{ states('cover.master_bathroom_blind') not in ['unavailable','unknown'] }}"

  - name: Living Room Blinds Position
    unique_id: sensor.living_room_blinds_position
    state: "{{ state_attr('cover.living_room_blinds','current_position') | int(100)}}"
    availability: "{{ states('cover.living_room_blinds') not in ['unavailable','unknown'] }}"

  - name: Dining Room Blinds Position
    unique_id: sensor.dining_room_blinds_position
    state: "{{ state_attr('cover.dining_room_blinds','current_position') | int(100)}}"
    availability: "{{ states('cover.dining_room_blinds') not in ['unavailable','unknown'] }}"

  - name: Study Room Blinds Position
    unique_id: sensor.study_room_blinds_position
    state: "{{ state_attr('cover.study_room_blinds','current_position') | int(100) }}"
    availability: "{{ states('cover.study_room_blinds') not in ['unavailable','unknown'] }}"
    
  - name: ZHA Device Issues
    unique_id: sensor.zha_device_issues
    state: >
      {% set zha_batteries = integration_entities('zha') | select('search', '^sensor.*_battery') | list %}
      {% set batteries_with_low_charge = namespace(batteries = 0) %}
      {% for battery in zha_batteries %}
        {% if states(battery) in ['unavailable','unknown'] %}
          {% set batteries_with_low_charge.batteries = batteries_with_low_charge.batteries + 1 %}
        {% elif states(battery) | int(0) <= states('input_number.battery_threshold_low') | int %}
          {% set batteries_with_low_charge.batteries = batteries_with_low_charge.batteries + 1 %}
        {% endif %}
      {% endfor %}
      {{ batteries_with_low_charge.batteries }}
    unit_of_measurement: count
    attributes:
      disconnected: >
        {% set zha_batteries = integration_entities('zha') | select('search', '^sensor.*_battery') | list %}
        {% set batteries = namespace(names = []) %}
        {% for battery in zha_batteries %}
          {% if states(battery) in ['unavailable','unknown'] %}
            {% set batteries.names = batteries.names + [battery] %}
          {% elif states(battery) | int(0) == 0 %}
            {% set batteries.names = batteries.names + [battery] %}
          {% endif %}
        {% endfor %}
        {{ batteries.names }}
      batteries_low: >
        {% set zha_batteries = integration_entities('zha') | select('search', '^sensor.*_battery') | list %}
        {% set batteries = namespace(names = []) %}
        {% for battery in zha_batteries %}
          {% if  states(battery) | int(0) <= states('input_number.battery_threshold_low') | int(10) and states(battery) | int(0) > 0 %}
            {% set batteries.names = batteries.names + [battery] %}
          {% endif %}
        {% endfor %}
        {{ batteries.names }}
        
  - name: Floorplan Yard Status
    unique_id: sensor.floorplan_yard_status
    state: >
      {% from 'floorplan_data_overlay.jinja' import data_overlay %}
      {{ data_overlay('binary_sensor.yard_motion', ['light.yard_light_entity'], 'sensor.playroom_lux', 'sensor.playroom_temperature', 'sensor.playroom_humidity') }}
    attributes:
      presence: "{{ states('binary_sensor.yard_motion') }}"
      lux: "{{ states('sensor.playroom_lux') }}"
      yard_light: "{{ states('light.yard_light_entity') }}"

  - name: Floorplan Playroom Status
    unique_id: sensor.floorplan_playroom_status
    state: >
      {% from 'floorplan_data_overlay.jinja' import data_overlay %}
      {{ data_overlay('binary_sensor.playroom_motion', ['light.playroom_lights'], 'sensor.playroom_lux', 'sensor.playroom_temperature', 'sensor.playroom_humidity') }}
    attributes:
      presence: "{{ states('binary_sensor.playroom_motion') }}"
      lux: "{{ states('sensor.playroom_lux') }}"
      playroom_lights: "{{ states('light.playroom_lights') }}"

  - name: Floorplan Junior Bathroom Status
    unique_id: sensor.floorplan_junior_bathroom_status
    state: >
      {% from 'floorplan_data_overlay.jinja' import data_overlay %}
      {{ data_overlay('binary_sensor.junior_bathroom_occupancy', ['light.junior_bathroom_lights'], 'sensor.junior_shower_lux', 'none', 'none') }}
    attributes:
      presence: "{{ states('binary_sensor.junior_bathroom_occupancy') }}"
      lux: "{{ states('sensor.junior_shower_lux') }}"
      junior_bathroom_lights: "{{ states('light.junior_bathroom_lights') }}"

  - name: Floorplan Powder Room Status
    unique_id: sensor.floorplan_powder_room_status
    state: >
      {% from 'floorplan_data_overlay.jinja' import data_overlay %}
      {{ data_overlay('binary_sensor.powder_room_occupancy', ['light.powder_room_pendant_light_entity'], 'sensor.powder_room_lux', 'none', 'none') }}
    attributes:
      presence: "{{ states('binary_sensor.powder_room_occupancy') }}"
      lux: "{{ states('sensor.powder_room_lux') }}"
      powder_room_pendant_light: "{{ states('light.powder_room_pendant_light_entity') }}"

  - name: Floorplan Elena's Room Status
    unique_id: sensor.floorplan_elenas_room_status
    state: >
      {% from 'floorplan_data_overlay.jinja' import data_overlay %}
      {{ data_overlay('binary_sensor.elenas_room_motion', 
                      ['light.elenas_room_lights','fan.elenas_room_fan','climate.elenas_room_ac'], 
                      'sensor.elenas_room_lux',
                      'sensor.elenas_room_core_temperature', 
                      'sensor.elenas_room_core_humidity') }}
    attributes:
      presence: "{{ states('binary_sensor.elenas_room_motion') }}"
      lux: "{{ states('sensor.elenas_room_lux') }}"
      temperature: "{{ states('sensor.elenas_room_core_temperature') }}"
      humidity: "{{ states('sensor.elenas_room_core_humidity') }}"
      elenas_room_lights: "{{ states('light.elenas_room_lights') }}"
      elenas_room_fan: "{{ states('fan.elenas_room_fan') }}"
      elenas_room_ac: "{{ states('climate.elenas_room_ac') }}"

  - name: Floorplan Eli's Room Status
    unique_id: sensor.floorplan_elis_room_status
    state: >
      {% from 'floorplan_data_overlay.jinja' import data_overlay %}
      {{ data_overlay('binary_sensor.elis_room_motion', 
                      ['light.elis_room_lights','fan.elis_room_fan','climate.elis_room_ac'], 
                      'sensor.elis_room_lux',
                      'sensor.elis_room_core_temperature', 
                      'sensor.elis_room_core_humidity') }}
    attributes:
      presence: "{{ states('binary_sensor.elis_room_motion') }}"
      lux: "{{ states('sensor.elis_room_lux') }}"
      temperature: "{{ states('sensor.elis_room_core_temperature') }}"
      humidity: "{{ states('sensor.elis_room_core_humidity') }}"
      elis_room_lights: "{{ states('light.elis_room_lights') }}"
      elis_room_fan: "{{ states('fan.elis_room_fan') }}"
      elis_room_ac: "{{ states('climate.elis_room_ac') }}"

  - name: Floorplan Hallway Status
    unique_id: sensor.floorplan_hallway_status
    state: >
      {% from 'floorplan_data_overlay.jinja' import data_overlay %}
      {{ data_overlay('binary_sensor.hallway_motion', ['light.hallway_lights'], 'sensor.hallway_lux', 'none', 'none') }}
    attributes:
      presence: "{{ states('binary_sensor.hallway_motion') }}"
      lux: "{{ states('sensor.hallway_lux') }}"
      hallway_lights: "{{ states('light.hallway_lights') }}"

  - name: Floorplan Dining Room Status
    unique_id: sensor.floorplan_dining_room_status
    state: >
      {% from 'floorplan_data_overlay.jinja' import data_overlay %}
      {{ data_overlay('binary_sensor.dining_room_presence', 
                      ['light.dining_room_lights','light.dining_room_pendant_light_entity','fan.dining_room_fan','climate.dining_room_ac'], 
                      'sensor.dining_room_radar_lux',
                      'sensor.dining_room_temperature', 
                      'sensor.dining_room_humidity') }}
    attributes:
      presence: "{{ states('binary_sensor.dining_room_presence') }}"
      lux: "{{ states('sensor.dining_room_radar_lux') }}"
      temperature: "{{ states('sensor.dining_room_temperature') }}"
      humidity: "{{ states('sensor.dining_room_humidity') }}"
      dining_room_lights: "{{ states('light.dining_room_lights') }}"
      dining_room_pendant_light: "{{ states('light.dining_room_pendant_light_entity') }}"
      dining_room_fan: "{{ states('fan.dining_room_fan') }}"
      dining_room_ac: "{{ states('climate.dining_room_ac') }}"

  - name: Floorplan Living Room Status
    unique_id: sensor.floorplan_living_room_status
    state: >
      {% from 'floorplan_data_overlay.jinja' import data_overlay %}
      {{ data_overlay('binary_sensor.living_room_presence', 
                      ['light.living_room_lights','light.living_room_pendant_light_entity','fan.living_room_fan','climate.living_room_ac'], 
                      'sensor.living_room_radar_lux_calibrated',
                      'sensor.dining_room_temperature', 
                      'sensor.dining_room_humidity') }}
    attributes:
      presence: "{{ states('binary_sensor.living_room_presence') }}"
      lux: "{{ states('sensor.living_room_radar_lux_calibrated') }}"
      temperature: "{{ states('sensor.dining_room_temperature') }}"
      humidity: "{{ states('sensor.dining_room_humidity') }}"
      living_room_lights: "{{ states('light.living_room_lights') }}"
      living_room_pendant_light: "{{ states('light.living_room_pendant_light_entity') }}"
      living_room_fan: "{{ states('fan.living_room_fan') }}"
      living_room_ac: "{{ states('climate.living_room_ac') }}"

  - name: Floorplan Study Room Status
    unique_id: sensor.floorplan_study_room_status
    state: >
      {% from 'floorplan_data_overlay.jinja' import data_overlay %}
      {{ data_overlay('binary_sensor.study_room_motion', 
                      ['light.study_room_lights','fan.study_room_fan','climate.study_room_ac'], 
                      'sensor.study_walkway_lux',
                      'sensor.study_room_temperature', 
                      'sensor.study_room_humidity') }}
    attributes:
      presence: "{{ states('binary_sensor.study_room_motion') }}"
      lux: "{{ states('sensor.study_walkway_lux') }}"
      temperature: "{{ states('sensor.study_room_temperature') }}"
      humidity: "{{ states('sensor.study_room_humidity') }}"
      study_room_lights: "{{ states('light.study_room_lights') }}"
      study_room_fan: "{{ states('fan.study_room_fan') }}"
      study_room_ac: "{{ states('climate.study_room_ac') }}"

  - name: Floorplan Parents' Room Status
    unique_id: sensor.floorplan_parents_room_status
    state: >
      {% from 'floorplan_data_overlay.jinja' import data_overlay %}
      {{ data_overlay('binary_sensor.parents_room_motion', 
                      ['light.parents_room_lights','fan.parents_room_fan','climate.parents_room_ac'], 
                      'sensor.parents_room_lux',
                      'sensor.parents_room_core_temperature', 
                      'sensor.parents_room_core_humidity') }}
    attributes:
      presence: "{{ states('binary_sensor.parents_room_motion') }}"
      lux: "{{ states('sensor.parents_room_lux') }}"
      temperature: "{{ states('sensor.parents_room_core_temperature') }}"
      humidity: "{{ states('sensor.parents_room_core_humidity') }}"
      parents_room_lights: "{{ states('light.parents_room_lights') }}"
      parents_room_fan: "{{ states('fan.parents_room_fan') }}"
      parents_room_ac: "{{ states('climate.parents_room_ac') }}"

  - name: Floorplan Master Bathroom Status
    unique_id: sensor.floorplan_master_bathroom_status
    state: >
      {% from 'floorplan_data_overlay.jinja' import data_overlay %}
      {{ data_overlay('binary_sensor.master_bathroom_occupancy', ['light.master_bathroom_lights'], 'sensor.master_bathroom_lux', 'none', 'none') }}
    attributes:
      presence: "{{ states('binary_sensor.master_bathroom_occupancy') }}"
      lux: "{{ states('sensor.master_bathroom_lux') }}"
      master_bathroom_light: "{{ states('light.master_bathroom_light_entity') }}"
      master_bathroom_pendant_light: "{{ states('light.master_bathroom_pendant_light_entity') }}"

  - name: Floorplan Kitchen Status
    unique_id: sensor.floorplan_kitchen_status
    state: >
      {% from 'floorplan_data_overlay.jinja' import data_overlay %}
      {{ data_overlay('binary_sensor.kitchen_presence', ['light.kitchen_lights'], 'sensor.kitchen_radar_lux_calibrated', 'sensor.kitchen_temperature', 'sensor.kitchen_humidity') }}
    attributes:
      presence: "{{ states('binary_sensor.kitchen_presence') }}"
      lux: "{{ states('sensor.kitchen_radar_lux_calibrated') }}"
      kitchen_lights: "{{ states('light.kitchen_lights') }}"

- image:
  - url: https://an-eloquent-home.duckdns.org/local/{{ (state_attr('sensor.rain_radar','file_list') | sort)[-1][12:] }}
    name: Rain Radar Animation
    unique_id: image.rain_radar_animation
  - url: https://an-eloquent-home.duckdns.org/local/clock_faces/{{ '0' + (states('sensor.time').split(':')[0] | int(0) % 12) | string if states('sensor.time').split(':')[0] | int(0) % 12 < 10 else states('sensor.time').split(':')[0] | int(0) % 12 }}_{{ states('sensor.time').split(':')[1] }}.png
    name: Clock Face
    unique_id: image.clock_face

- trigger:
  - platform: time_pattern
    minutes: '/1'
  sensor:
    - name: Washer Last Wash Completed
      unique_id: sensor.washer_last_wash_completed
      state: >
        {% if states('sensor.washer_status') == 'Off' %}
          {% from 'text_formatting.jinja' import relative_age %}
          {{ relative_age(states('input_datetime.washer_last_wash_complete') | as_datetime) }}
        {% else %}
          In use
        {% endif %}

    - name: Dishwasher Last Run Started
      unique_id: sensor.dishwasher_last_run_started
      state: >
        {% from 'text_formatting.jinja' import relative_age %}
        {{ relative_age(states('input_datetime.dishwasher_last_run_start') | as_datetime) }}

    - name: Dishwasher Last Run Ended
      unique_id: sensor.dishwasher_last_run_ended
      state: >
        {% from 'text_formatting.jinja' import relative_age %}
        {{ relative_age(states('input_datetime.dishwasher_last_run_end') | as_datetime) }}

    - name: Rice Cooker Last Run Started
      unique_id: sensor.rice_cooker_last_run_started
      state: >
        {% from 'text_formatting.jinja' import relative_age %}
        {{ relative_age(states('input_datetime.rice_cooker_last_run_start') | as_datetime) }}

    - name: Rice Cooker Last Run Ended
      unique_id: sensor.rice_cooker_last_run_ended
      state: >
        {% from 'text_formatting.jinja' import relative_age %}
        {{ relative_age(states('input_datetime.rice_cooker_last_run_end') | as_datetime) }}

    - name: Stove Last Use
      unique_id: sensor.stove_last_use
      state: >
        {% if states('switch.stove_main_power') == 'off' %}
          {% from 'text_formatting.jinja' import relative_age %}
          {{ relative_age(states.switch.stove_main_power.last_changed) }}
        {% else %}
          In use
        {% endif %}

    - name: Proxmox Last Boot
      unique_id: sensor.proxmox_last_boot
      state: >
        {% from 'text_formatting.jinja' import relative_age %}
        {{ relative_age(states('sensor.node_proxmox_uptime') | as_datetime) }}

    - name: Home Assistant Last Boot
      unique_id: sensor.home_assistant_last_boot
      state: >
        {% from 'text_formatting.jinja' import relative_age %}
        {{ relative_age(states('sensor.last_boot') | as_datetime) }}

    - name: Docker Last Boot
      unique_id: sensor.docker_last_boot
      state: >
        {% from 'text_formatting.jinja' import relative_age %}
        {{ relative_age(states('sensor.qemu_docker_102_uptime') | as_datetime) }}

    - name: pfSense Last Boot
      unique_id: sensor.pfsense_last_boot
      state: >
        {% from 'text_formatting.jinja' import relative_age %}
        {{ relative_age(states('sensor.pfsense_system_boottime') | as_datetime) }}

- trigger:
  - platform: state
    entity_id: binary_sensor.yard_window_1_raw
    not_to:
      - unavailable
      - unknown
  binary_sensor:
    - name: Yard Window 1
      unique_id: binary_sensor.yard_window_1
      state: "{{ is_state('binary_sensor.yard_window_1_raw','on') }}"
      device_class: window
      attributes:
        raw: "{{ states('binary_sensor.yard_window_1_raw') }}"

- trigger:
  - platform: state
    entity_id: binary_sensor.junior_bathroom_motion
    not_from:
      - unknown
      - unavailable
    not_to:
      - unknown
      - unavailable
  - platform: state
    entity_id: binary_sensor.junior_shower_motion
    not_from:
      - unknown
      - unavailable
    not_to:
      - unknown
      - unavailable
    for:
      minutes: 1
  binary_sensor:
    - name: Junior Bathroom Motion Sensors
      unique_id: binary_sensor.junior_bathroom_motion_sensors
      state: "{{ is_state('binary_sensor.junior_bathroom_motion','on') or is_state('binary_sensor.junior_shower_motion','on') }}"
      device_class: motion
      attributes:
        junior_bathroom_motion: "{{ states('binary_sensor.junior_bathroom_motion') }}"
        junior_shower_motion: "{{ states('binary_sensor.junior_shower_motion') }}"

- trigger:
  - platform: state
    entity_id: sensor.adguard_home_dns_queries
    not_from:
      - unknown
      - unavailable
    not_to:
      - unknown
      - unavailable
    id: state_changed
  - platform: time_pattern
    minutes: "/1"
    id: stale_check
  sensor:
    - name: DNS Queries within 5min
      unique_id: sensor.dns_queries_within_5min
      state: >
        {% if trigger.id == 'stale_check' %}
          {% if now() - states.sensor.adguard_home_dns_queries.last_changed > timedelta(minutes = 5) %}
            0
          {% else %}
            {{ states('sensor.dns_queries_within_5min') }}
          {% endif %}
        {% elif trigger.to_state.state | int(0) - trigger.from_state.state | int(0) > 0 %}
          {{ trigger.to_state.state | int(0) - trigger.from_state.state | int(0) }}
        {% else %}
          0
        {% endif %}
      unit_of_measurement: queries
      attributes:
        timestamp: "{{ now() }}"

- trigger:
  - platform: state
    entity_id: sensor.adguard_home_dns_queries_blocked
    not_from:
      - unknown
      - unavailable
    not_to:
      - unknown
      - unavailable
    id: state_changed
  - platform: time_pattern
    minutes: "/1"
    id: stale_check
  sensor:
    - name: DNS Queries Blocked by Filters within 5min
      unique_id: sensor.dns_queries_blocked_by_filters_within_5min
      state: >
        {% if trigger.id == 'stale_check' %}
          {% if now() - states.sensor.adguard_home_dns_queries_blocked.last_changed > timedelta(minutes = 5) %}
            0
          {% else %}
            {{ states('sensor.dns_queries_blocked_by_filters_within_5min') }}
          {% endif %}
        {% elif trigger.to_state.state | int(0) - trigger.from_state.state | int(0) > 0%}
          {{ trigger.to_state.state | int(0) - trigger.from_state.state | int(0) }}
        {% else %}
          0
        {% endif %}
      unit_of_measurement: queries
      attributes:
        timestamp: "{{ now() }}"

- trigger:
  - platform: state
    entity_id:
      - sensor.dns_queries_within_5min
      - sensor.dns_queries_blocked_by_filters_within_5min
    not_from:
      - unknown
      - unavailable
    not_to:
      - unknown
      - unavailable
    for:
      minutes: 1
      seconds: 1
  sensor:
    - name: DNS Query Filter Block Rate within 5min
      unique_id: sensor.dns_query_filter_block_rate_within_5min
      state: "{{ ((states('sensor.dns_queries_blocked_by_filters_within_5min') | int(0) / states('sensor.dns_queries_within_5min') | int(1)) * 100) | round(2) if states('sensor.dns_queries_within_5min') | int(1) > 0 else 0 }}"
      unit_of_measurement: '%'

- trigger:
  - platform: state
    entity_id: sensor.qemu_pfsense_100_network_in
    not_from:
      - unknown
      - unavailable
    not_to:
      - unknown
      - unavailable
  sensor:
    - name: pfSense MB In within 1min
      unique_id: sensor.pfsense_mb_in_within_1min
      state: "{{ trigger.to_state.state | float(0) - trigger.from_state.state | float(0) }}"
      unit_of_measurement: MB
      attributes:
        timestamp: "{{ now() }}"

- trigger:
  - platform: state
    entity_id: sensor.qemu_pfsense_100_network_out
    not_from:
      - unknown
      - unavailable
    not_to:
      - unknown
      - unavailable
  sensor:
    - name: pfSense MB Out within 1min
      unique_id: sensor.pfsense_mb_out_within_1min
      state: "{{ trigger.to_state.state | float(0) - trigger.from_state.state | float(0) }}"
      unit_of_measurement: MB
      attributes:
        timestamp: "{{ now() }}"

- trigger:
  - platform: state
    entity_id: sensor.qemu_eloquent_house_101_network_in
    not_from:
      - unknown
      - unavailable
    not_to:
      - unknown
      - unavailable
  sensor:
    - name: Home Assistant MB In within 1min
      unique_id: sensor.home_assistant_mb_in_within_1min
      state: "{{ trigger.to_state.state | float(0) - trigger.from_state.state | float(0) }}"
      unit_of_measurement: MB
      attributes:
        timestamp: "{{ now() }}"

- trigger:
  - platform: state
    entity_id: sensor.qemu_eloquent_house_101_network_out
    not_from:
      - unknown
      - unavailable
    not_to:
      - unknown
      - unavailable
  sensor:
    - name: Home Assistant MB Out within 1min
      unique_id: sensor.home_assistant_mb_out_within_1min
      state: "{{ trigger.to_state.state | float(0) - trigger.from_state.state | float(0) }}"
      unit_of_measurement: MB
      attributes:
        timestamp: "{{ now() }}"
        

- trigger:
    - platform: time_pattern
      hours: /1
  action:
    - service: weather.get_forecasts
      data:
        type: daily
      target:
        entity_id: weather.local_weather
      response_variable: daily
  sensor:
    - name: Local 4-Day Weather Forecast
      unique_id: sensor.local_4_day_weather_forecast
      state: "{{ now() }}"
      attributes:
        forecast: "{{ daily['weather.local_weather'].forecast }}"