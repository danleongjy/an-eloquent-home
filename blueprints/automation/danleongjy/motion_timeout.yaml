blueprint:
  name: Motion Timeout
  description: Turn off a list of entities when no motion is detected for a certain amount of time depending on whether the doors are closed.
  domain: automation
  input:
    motion_sensor:
      name: Motion Sensor
      description: When no motion is detected by all these sensors for the Number of Minutes below, the entities listed will be turned off.
      selector:
        entity:
          domain: binary_sensor
          device_class: 
            - motion
            - occupancy
    number_of_minutes_doors_closed:
      name: Number of Minutes - Doors Closed
      description: Number helper indicating the number of minutes for the motion timeout when doors are closed.
      selector:
        entity:
          domain: input_number
      default: input_number.motion_timeout_presence
    number_of_minutes_doors_open:
      name: Number of Minutes - Doors Open
      description: Number helper indicating the number of minutes for the motion timeout when doors are open. If doors are closed at this point in time, the automation will skip turning off the entities. Set to the same as Number of Minutes - Doors Closed if Doors to Track below is blank.
      selector:
        entity:
          domain: input_number
      default: input_number.motion_timeout_presence
    entities_list:
      name: Entities to Track
      description: A list of entities.  If the entities' state should not change when any of these entities are on even if motion is cleared, specify them here.  Otherwise, leave blank.
      selector:
        entity:
          multiple: true
      default: []
    doors_list:
      name: Doors to Track
      description: A list of doors or door groups.  If the entities should turn off after different times depending on whether all the doors are closed when motion is cleared (useful in bedrooms when someone is sleeping), specify the doors here.  Otherwise, leave blank.
      selector:
        entity:
          domain: binary_sensor
          device_class: door
          multiple: true
      default: []
    turnoff_entities_list:
      name: Entities to Turn Off
      description: List of entities to turn off on timeout.
      selector:
        entity:
          multiple: true
trigger_variables:
  minutes_doors_open: !input number_of_minutes_doors_open
  minutes_doors_closed: !input number_of_minutes_doors_closed
  doors: !input doors_list
  entities: !input entities_list
trigger:
  - platform: state
    entity_id: !input motion_sensor
    from: 'on'
    to: 'off'
    for:
      minutes: "{{ states(minutes_doors_open) | int }}"
    id: timeout_doors_open
  - platform: state
    entity_id: !input motion_sensor
    from: 'on'
    to: 'off'
    for:
      minutes: "{{ states(minutes_doors_closed) | int }}"
    id: timeout_doors_closed
condition:
  - condition: template
    value_template: >
      {{ not 'on' in states | selectattr('entity_id', 'in', entities) | map(attribute = 'state') | list }}
action:
  - if:
      - condition: trigger
        id: timeout_doors_open
    then:
      - delay: 0.05
      - condition: template
        value_template: >
          {{ doors | length == 0 
             or ('on' in states.binary_sensor | selectattr('entity_id', 'in', doors) | map(attribute = 'state') | list 
                 and now() - (states.binary_sensor | selectattr('entity_id', 'in', doors) | map(attribute = 'last_changed') | list | sort)[-1] >= timedelta(minutes = states(minutes_doors_open) | int )) }}
      - repeat:
          for_each: !input turnoff_entities_list
          sequence:
            - if:
                - condition: template
                  value_template: "{{ states(repeat.item) != 'off' }}"
              then:
                - action: homeassistant.turn_off
                  target:
                    entity_id: "{{ repeat.item }}"
    else:
      - delay: 0.05
      - repeat:
          for_each: !input turnoff_entities_list
          sequence:
            - if:
                - condition: template
                  value_template: "{{ states(repeat.item) != 'off' }}"
              then:
                - action: homeassistant.turn_off
                  target:
                    entity_id: "{{ repeat.item }}"
mode: single
max_exceeded: silent