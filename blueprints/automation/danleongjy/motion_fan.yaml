blueprint:
  name: Motion Fan
  description: Control the fan when motion is detected, depending on whether the doors are open.
  domain: automation
  input:
    motion_sensor:
      name: Motion Sensor
      description: When motion is detected by this sensor, the fan will be turned on.
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
    fan:
      name: Fan
      description: Fan to control.
      selector:
        entity:
          domain: fan
    fan_speed_door_closed:
      name: Fan Speed when Doors are Closed
      description: A number helper indicating the fan speed when the doors are closed for this room
      selector:
        entity:
          domain: input_number
    fan_speed_door_open:
      name: Fan Speed when Doors are Open
      description: A number helper indicating the fan speed when the doors are open for this room
      selector:
        entity:
          domain: input_number
    entities_list:
      name: Entities to Track
      description: A list of entities.  If the fan's state should not change when any of these entities are on even if motion is detected, specify them here.  Otherwise, leave blank.
      selector:
        entity:
          multiple: true
      default: []
    doors_list:
      name: Doors to Track
      description: A list of doors or door groups.  If the fan's state should not change when all the doors are closed even if motion is detected (useful in bedrooms when someone is sleeping), specify the doors here.  Otherwise, leave blank.
      selector:
        entity:
          domain: binary_sensor
          device_class: door
          multiple: true
      default: []
    respect_closed_doors:
      name: Respect Closed Doors
      description: Set to true if the fan's state should not change when all the doors are closed even if motion is detected (useful in bedrooms when someone is sleeping).  Otherwise, set to false.
      selector:
        boolean:
      default: true
trigger_variables:
  entities: !input entities_list
  doors: !input doors_list
  respect_doors: !input respect_closed_doors
trigger:
  - platform: state
    entity_id: !input motion_sensor
    from: "off"
    to: "on"
condition:
  - condition: template
    value_template: "{{ not respect_doors or doors | length == 0 or 'on' in states | selectattr('entity_id', 'in', doors) | map(attribute = 'state') | list }}"
  - condition: template
    value_template: "{{ not 'on' in states | selectattr('entity_id', 'in', entities) | map(attribute = 'state') | list }}"
action:
  - variables:
      fan_speed_when_door_closed: !input fan_speed_door_closed
      fan_speed_when_door_open: !input fan_speed_door_open
      doors: !input doors_list
  - if:
      - condition: template
        value_template: "{{ doors | length == 0 or 'on' in states | selectattr('entity_id', 'in', doors) | map(attribute = 'state') | list }}"
    then:
      - service: fan.turn_on
        data:
          percentage: "{{ (states(fan_speed_when_door_open) | int(4) / 6 * 100) | round(2) | int }}"
        target:
          entity_id: !input fan
      - delay: 2
      - service: fan.set_direction
        data:
          direction: forward
        target:
          entity_id: !input fan
    else:
      - service: fan.turn_on
        data:
          percentage: "{{ (states(fan_speed_when_door_closed) | int(1) / 6 * 100) | round(2) | int }}"
        target:
          entity_id: !input fan
      - delay: 2
      - service: fan.set_direction
        data:
          direction: reverse
        target:
          entity_id: !input fan
mode: single
max_exceeded: silent
