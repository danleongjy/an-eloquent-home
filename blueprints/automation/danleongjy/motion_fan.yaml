blueprint:
  name: Motion Fan
  description: Control the fan when motion is detected, depending on whether the doors are open.
  domain: automation
  input:
    motion_sensor:
      name: Motion Sensor
      description: When motion is detected by this sensor, the fan will be turned on.
      selector:
        entity:
          domain: binary_sensor
          device_class: 
            - motion
            - occupancy
    fan:
      name: Fan
      description: Fan to control.
      selector:
        entity:
          domain: fan
    fan_auto_control:
      name: Fan Auto Control
      description: Automation that sets the fan speed and direction according to temperature, created using the Fan Auto Control blueprint.
      selector:
        entity:
          domain: automation
    fan_auto_control_start:
      name: Fan Auto Control Start
      description: Time helper indicating when fan auto control should be turned on.  If fan auto control never needs to turn on, set this to the same as Fan Auto Control End.
      selector:
        entity:
          domain: input_datetime
      default: input_datetime.ac_auto_control_end
    fan_auto_control_end:
      name: Fan Auto Control End
      description: Time helper indicating when fan auto control should be turned off.
      selector:
        entity:
          domain: input_datetime
      default: input_datetime.ac_auto_control_end
    off_hours_start:
      name: Off Hours Start
      description: A time helper indicating when the fan should be off.  If the fan never needs to be off, set this to the same time as Off Hours End.
      selector:
        entity:
          domain: input_datetime
      default: input_datetime.sleep_hours_end
    off_hours_end:
      name: Off Hours End
      description: A time helper indicating when the fan no longer needs to be off.
      selector:
        entity:
          domain: input_datetime
      default: input_datetime.sleep_hours_end
    entities_list:
      name: Entities to Track
      description: A list of entities.  If the fan's state should not change when any of these entities are on even if motion is detected, specify them here.  Otherwise, leave blank.
      selector:
        entity:
          multiple: true
      default: []
    doors_list:
      name: Doors to Track
      description: A list of doors or door groups.  If the fan's state should not change when all the doors are closed even if motion is detected (useful in bedrooms when someone is sleeping), specify the doors here.  Otherwise, leave blank.
      selector:
        entity:
          domain: binary_sensor
          device_class: door
          multiple: true
      default: []
    respect_closed_doors:
      name: Respect Closed Doors
      description: Set to true if the fan's state should not change when all the doors are closed even if motion is detected (useful in bedrooms when someone is sleeping).  Otherwise, set to false.
      selector:
        boolean:
      default: true
trigger_variables:
  entities: !input entities_list
  doors: !input doors_list
  respect_doors: !input respect_closed_doors
trigger:
  - platform: state
    entity_id: !input motion_sensor
    from: "off"
    to: "on"
condition:
  - condition: template
    value_template: "{{ not respect_doors or doors | length == 0 or 'on' in states | selectattr('entity_id', 'in', doors) | map(attribute = 'state') | list }}"
  - condition: template
    value_template: "{{ not 'on' in states | selectattr('entity_id', 'in', entities) | map(attribute = 'state') | list }}"
action:
  - variables:
      auto_control_start: !input fan_auto_control_start
      auto_control_end: !input fan_auto_control_end
  - delay: 0.05
  - condition: time
    after: !input off_hours_end
    before: !input off_hours_start
  - action: automation.trigger
    target:
      entity_id: !input fan_auto_control
  - condition: template
    value_template: "{{ states(auto_control_start) != states(auto_control_end) }}"
  - if:
      - condition: time
        after: !input fan_auto_control_start
        before: !input fan_auto_control_end
    then:
      - action: automation.turn_on
        data: {}
        target:
          entity_id: !input fan_auto_control
    else:
      - action: automation.turn_off
        data:
          stop_actions: true
        target:
          entity_id: !input fan_auto_control
    
mode: single
max_exceeded: silent
