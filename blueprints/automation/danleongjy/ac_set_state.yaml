blueprint:
  name: AC Set State
  description: Depending on state changes in the Generic Thermostat climate entities, pass the state parameters to the AC Set State script to sync the actual state of the physical AC units by sending the corresponding RF commands.
  domain: automation
  input:
    ac:
      name: Air Conditioner
      description: Air conditioner unit for which to set the state
      selector:
        entity:
          domain: climate
    default_temp:
      name: Default Temperature
      description: Default temperature of the air conditioner when turned on.
      selector:
        number:
          min: 24
          max: 27
          unit_of_measurement: Â°C
          mode: slider
      default: 27
trigger:
  - platform: state
    entity_id: !input ac
    id: cooling
    to: cool
  - platform: state
    entity_id: !input ac
    id: power_off
    from: cool
  - platform: state
    entity_id: !input ac
    id: temperature_changed
    attribute: temperature
action:
  - variables:
      target_ac: !input ac
  - choose:
      - conditions:
          - condition: trigger
            id: cooling
        sequence:
          - service: script.ac_set_state
            data:
              target_ac: "{{ state_attr(target_ac, 'friendly_name') }}"
              target_ac_temp: "{{ state_attr(target_ac, 'temperature') }}"
      - conditions:
          - condition: trigger
            id: power_off
        sequence:
          - service: script.ac_set_state
            data:
              target_ac: "{{ state_attr(target_ac, 'friendly_name') }}"
              target_ac_power: false
      - conditions:
          - condition: trigger
            id: temperature_changed
        sequence:
          - if:
              - condition: template
                value_template: "{{ state_attr(target_ac, 'temperature') | float(24) < (state_attr(target_ac, 'min_temp') | float(23) + 1) }}"
            then:
              - service: climate.set_temperature
                data:
                  temperature: !input default_temp
                target:
                  entity_id: !input ac
              - service: climate.turn_off
                data: {}
                target:
                  entity_id: !input ac
              - service: script.ac_set_state
                data:
                  target_ac: "{{ state_attr(target_ac, 'friendly_name') }}"
                  target_ac_power: false
            else:
              - service: climate.turn_on
                data: {}
                target:
                  entity_id: !input ac
              - service: script.ac_set_state
                data:
                  target_ac: "{{ state_attr(target_ac, 'friendly_name') }}"
                  target_ac_temp: "{{ state_attr(target_ac, 'temperature') }}"
    default: []
mode: single
max_exceeded: silent
