blueprint:
  description: Set light brightness according to time
  domain: script
  name: Recommended Light Level 
  input:
    lights_list:
      name: Lights
      description: A list of lights or light groups to control.
      selector:
        entity:
          domain: light
          multiple: true
    dim_hours_start:
      name: Dim Hours Start
      description: A time helper indicating when lights should be dimmed.  If lights never need to be dimmed, set this to the same as Dim Hours End.
      selector:
        entity:
          domain: input_datetime
      default: input_datetime.wind_down
    dim_hours_end:
      name: Dim Hours End
      description: A time helper indicating when lights no longer need to be dim.
      selector:
        entity:
          domain: input_datetime
      default: input_datetime.sleep_hours_end
    dim_light_brightness:
      name: Dim Light Brightness
      description: A number helper indicating what percentage of brightness the lights should have if they are turned on between Dim Hours Start and Blackout Hours End.
      selector:
        entity:
          domain: input_number
      default: input_number.night_light_brightness
    morning_light_brightness:
      name: Morning Light Brightness
      description: A number helper indicating what percentage of brightness the lights should have if they are turned on after Blackout Hours End but before sunrise.
      selector:
        entity:
          domain: input_number
      default: input_number.morning_light_brightness
sequence:
  - variables:
      night_brightness: !input dim_light_brightness
      morning_brightness: !input morning_light_brightness
      dim_start: !input dim_hours_start
      dim_end: !input dim_hours_end
  - if:
      - condition: template
        value_template: "{{ dim_start != dim_end }}"
      - condition: time
        after: !input dim_hours_start
        before: !input dim_hours_end
    then:
      - if:
          - condition: state
            entity_id: sun.sun
            state: below_horizon
        then:
          - service: light.turn_on
            data:
              brightness_pct: "{{ states(night_brightness) | int(1) }}"
            target:
              entity_id: !input lights_list
        else:
          - service: light.turn_on
            data:
              brightness_pct: "{{ states(morning_brightness) | int(1) }}"
            target:
              entity_id: !input lights_list
    else:
      - service: light.turn_on
        data:
          brightness_pct: 100
        target:
          entity_id: !input lights_list
