- id: '1643640720985'
  alias: Dining Room Lights Controller 1
  description: Control the Dining Room Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 0df2cd0b0fa9112188778c56db622911
      helper_last_controller_event: input_text.zz_dining_room_lights_controller_1_last_event
      action_button_up_short:
      - if:
        - condition: state
          entity_id: input_boolean.away_mode
          state: 'on'
        then:
        - data: {}
          target:
            entity_id: input_boolean.away_mode
          action: input_boolean.turn_off
        else:
        - action: script.lights_controller
          metadata: {}
          data:
            lights:
            - light.dining_room_lights
            - light.dining_room_pendant_light_entity
            - light.living_room_lights
            - light.living_room_pendant_light_entity
            command: set_recommended_room_scene
      action_button_up_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.dining_room_lights
          - light.dining_room_pendant_light_entity
          - light.living_room_lights
          - light.living_room_pendant_light_entity
          command: lights_brighten
      action_button_down_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.dining_room_lights
          - light.dining_room_pendant_light_entity
          - light.living_room_lights
          - light.living_room_pendant_light_entity
          command: turn_off_room
      action_button_down_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.dining_room_lights
          - light.dining_room_pendant_light_entity
          - light.living_room_lights
          - light.living_room_pendant_light_entity
          command: lights_darken
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
      action_button_down_double:
      - action: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.away_mode
      button_down_double_press: true
      helper_double_press_delay: 500
- id: '1643641285314'
  alias: Dining Room Lights Controller 2
  description: Control the Dining Room Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      helper_last_controller_event: input_text.zz_dining_room_lights_controller_2_last_event
      action_button_up_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.dining_room_lights
          - light.dining_room_pendant_light_entity
          command: lights_on
      action_button_up_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.dining_room_lights
          - light.dining_room_pendant_light_entity
          command: lights_brighten
      action_button_down_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.dining_room_lights
          - light.dining_room_pendant_light_entity
          command: lights_off
      action_button_down_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.dining_room_lights
          - light.dining_room_pendant_light_entity
          command: lights_darken
      button_up_long_max_loop_repeats: 50
      button_down_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_up_long_loop: true
      action_button_up_double:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.dining_room_lights
          - light.dining_room_pendant_light_entity
          command: set_recommended_room_scene
      action_button_down_double:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.dining_room_lights
          - light.dining_room_pendant_light_entity
          command: turn_off_room
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
      controller_device: 43f2d52bfecdf388c86e9f919d45e359
- id: '1643641631013'
  alias: Playroom Lights Controller
  description: Control the Playroom Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 867b78e6f7808ffcceb260be52b0c174
      helper_last_controller_event: input_text.zz_playroom_lights_controller_last_event
      action_button_up_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.playroom_lights
          - light.yard_light_entity
          command: lights_on
      action_button_up_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.playroom_lights
          - light.yard_light_entity
          command: lights_brighten
      action_button_down_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.playroom_lights
          - light.yard_light_entity
          command: lights_off
      action_button_down_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.playroom_lights
          - light.yard_light_entity
          command: lights_darken
      button_up_long_max_loop_repeats: 50
      button_down_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_up_long_loop: true
- id: '1643643181661'
  alias: Dining Room AC Controller
  description: Control the Dining Room AC
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 6e3bab771f635d9d237ea94a56bbf115
      helper_last_controller_event: input_text.zz_dining_room_ac_controller_last_event
      action_button_up_short:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.dining_room_ac
          command: ac_on
      action_button_up_long:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.dining_room_ac
          command: ac_warmer
      action_button_down_short:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.dining_room_ac
          command: ac_off
      action_button_down_long:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.dining_room_ac
          command: ac_colder
      action_button_up_double:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.dining_room_ac
          command: cooling_auto_control
      action_button_down_double:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.dining_room_ac
          command: cooling_manual_control
      button_up_long_loop: false
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1643643631965'
  alias: Dining Room Fan Controller
  description: Control the Dining Room Fan
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 2c65aa31e07cc74bcef34dfa0d22d784
      helper_last_controller_event: input_text.zz_dining_room_fan_controller_last_event
      action_button_up_short:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.dining_room_fan
          command: fan_on
      action_button_down_short:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.dining_room_fan
          command: fan_off
      action_button_down_long:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.dining_room_fan
          command: fan_slow_down
      action_button_up_long:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.dining_room_fan
          command: fan_speed_up
      action_button_up_double:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.dining_room_fan
          command: fan_reverse
      action_button_down_double:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.dining_room_fan
          command: fan_forward
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1643644178195'
  alias: Powder Room Lights Controller
  description: Control the Powder Room Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 8fd4f8715be89cc0f383c887c3fac892
      helper_last_controller_event: input_text.zz_powder_room_lights_controller_last_event
      action_button_up_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.powder_room_pendant_light_entity
          command: lights_on
      action_button_up_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.powder_room_pendant_light_entity
          command: lights_brighten
      action_button_down_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.powder_room_pendant_light_entity
          command: lights_off
      action_button_down_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.powder_room_pendant_light_entity
          command: lights_darken
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
- id: '1643644997118'
  alias: Eli's Room Fan Controller
  description: Control Eli's Room Fan
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: f70176647fea31ee95539e565e16e9be
      helper_last_controller_event: input_text.zz_eli_s_room_fan_controller_last_event
      action_button_up_short:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.elis_room_fan
          command: fan_on
      action_button_down_short:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.elis_room_fan
          command: fan_off
      action_button_down_long:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.elis_room_fan
          command: fan_slow_down
      action_button_up_long:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.elis_room_fan
          command: fan_speed_up
      action_button_up_double:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.elis_room_fan
          command: fan_reverse
      action_button_down_double:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.elis_room_fan
          command: fan_forward
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1643645339926'
  alias: Eli's Room AC Controller
  description: Control Eli's Room AC
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 729379c869fac5a454929998eba2f3d2
      action_button_up_short:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.elis_room_ac
          command: ac_on
      action_button_up_long:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.elis_room_ac
          command: ac_warmer
      action_button_down_short:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.elis_room_ac
          command: ac_off
      action_button_down_long:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.elis_room_ac
          command: ac_colder
      action_button_up_double:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.elis_room_ac
          command: cooling_auto_control
      action_button_down_double:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.elis_room_ac
          command: cooling_manual_control
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
      helper_last_controller_event: input_text.zz_eli_s_room_ac_controller_last_event
- id: '1643645804516'
  alias: Elena's Room Fan Controller
  description: Control Elena's Room Fan
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: ea611248af61d7f5dc06e3a824288132
      helper_last_controller_event: input_text.zz_elena_s_room_fan_controller_last_event
      action_button_up_short:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.elenas_room_fan
          command: fan_on
      action_button_down_short:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.elenas_room_fan
          command: fan_off
      action_button_down_long:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.elenas_room_fan
          command: fan_slow_down
      action_button_up_long:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.elenas_room_fan
          command: fan_speed_up
      action_button_up_double:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.elenas_room_fan
          command: fan_reverse
      action_button_down_double:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.elenas_room_fan
          command: fan_forward
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1643646541355'
  alias: Junior Bathroom Lights Controller
  description: Control the Junior Bathroom Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: f084f2e55c0800941585a50dd83e5f47
      helper_last_controller_event: input_text.zz_junior_bathroom_lights_controller_last_event
      action_button_up_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.junior_bathroom_lights
          command: lights_on
      action_button_up_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.junior_bathroom_lights
          command: lights_brighten
      action_button_down_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.junior_bathroom_lights
          command: lights_off
      action_button_down_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.junior_bathroom_lights
          command: lights_darken
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
- id: '1643721003621'
  alias: Auto Cooling at Night
  description: Turn on Fan Auto Control at night in bedrooms
  trigger:
  - platform: time
    at: input_datetime.sleep_hours_start
    id: start
  - platform: time
    at: sensor.parents_room_auto_cooling_at_night_end_time
    id: parents_room
  - platform: template
    value_template: '{{ now() > [as_datetime(states(''input_datetime.elis_next_alarm'')).astimezone(now().tzinfo)
      - timedelta(minutes = 30), today_at(''10:00'')] | min }}'
    id: elis_room
  - platform: template
    value_template: '{{ now() > [as_datetime(states(''input_datetime.elenas_next_alarm'')).astimezone(now().tzinfo)
      - timedelta(minutes = 30), today_at(''10:00'')] | min }}'
    id: elenas_room
  condition: []
  action:
  - if:
    - condition: trigger
      id:
      - start
    then:
    - data: {}
      target:
        entity_id:
        - automation.elenas_room_fan_auto_control
        - automation.elis_room_fan_auto_control
        - automation.dining_room_fan_auto_control
        - automation.living_room_fan_auto_control
        - automation.study_room_fan_auto_control
        - automation.parents_room_fan_auto_control
      action: automation.turn_on
    else:
    - target:
        entity_id:
        - automation.{{ trigger.id }}_fan_auto_control
      action: automation.turn_off
    - target:
        entity_id: climate.{{ trigger.id }}_ac
      action: climate.turn_off
  mode: parallel
  max: 5
- id: '1643973685368'
  alias: Notify When Vacuum Undocked
  description: Send a persistent notification if the vacuum is undocked and idle and
    dismiss it when it stops being idle
  trigger:
  - platform: state
    entity_id:
    - vacuum.roborock_s7
    id: idle
    to: idle
  - platform: state
    entity_id:
    - vacuum.roborock_s7
    id: not_idle
    from: idle
  condition: []
  action:
  - if:
    - condition: trigger
      id: idle
    then:
    - service: notify.mobile_app_aurora
      data:
        message: Vacuum not docked properly
        title: Please manually dock vacuum
        data:
          tag: vacuum_undocked
          clickAction: /lovelace/vacuum
    - service: notify.mobile_app_grace
      data:
        message: Vacuum not docked properly
        title: Please manually dock vacuum
        data:
          tag: vacuum_undocked
    else:
    - service: notify.mobile_app_aurora
      data:
        message: clear_notification
        data:
          tag: vacuum_undocked
    - service: notify.mobile_app_grace
      data:
        message: clear_notification
        data:
          tag: vacuum_undocked
  mode: single
- id: '1643979293415'
  alias: Notify When AC On With Doors Open
  description: Send a persistent notification when AC is on with doors open, and clear
    notification when no AC is on with doors open
  trigger:
  - platform: state
    entity_id: binary_sensor.ac_on_with_doors_open
    id: notify
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - platform: state
    entity_id: binary_sensor.ac_on_with_doors_open
    id: clear
    from: 'on'
    to: 'off'
  condition: []
  action:
  - if:
    - condition: trigger
      id: notify
    then:
    - service: notify.mobile_app_aurora
      data:
        message: AC on with doors and windows open
        title: Please close the doors and windows
        data:
          tag: doors_open
    - service: notify.mobile_app_grace
      data:
        message: AC on with doors and windows open
        title: Please close the doors and windows
        data:
          tag: doors_open
    else:
    - service: notify.mobile_app_aurora
      data:
        message: clear_notification
        data:
          tag: doors_open
    - service: notify.mobile_app_grace
      data:
        message: clear_notification
        data:
          tag: doors_open
  mode: single
- id: '1643979577174'
  alias: Notify When Wash Completed
  description: Send a persistent notification when washer is finished, and clear notification
    when washer is unloaded
  trigger:
  - platform: state
    entity_id:
    - input_boolean.washer_load_clean
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.washer_load_clean
      state: 'on'
    then:
    - service: notify.mobile_app_aurora
      data:
        title: Please unload laundry
        message: Wash completed at {{ (now() | string)[11:16] }}
        data:
          tag: washer_load_clean
          clickAction: /lovelace/washer
    - service: notify.mobile_app_grace
      data:
        title: Please unload laundry
        message: Wash completed at {{ (now() | string)[11:16] }}
        data:
          tag: washer_load_clean
    else:
    - service: notify.mobile_app_aurora
      data:
        message: clear_notification
        data:
          tag: washer_load_clean
    - service: notify.mobile_app_grace
      data:
        message: clear_notification
        data:
          tag: washer_load_clean
  mode: single
- id: '1648784734226'
  alias: Notify When Dishwasher Cooldown Completed
  description: Send a persistent notification when dishwasher load is clean, and clear
    notification when dishwasher is unloaded
  trigger:
  - platform: state
    entity_id:
    - input_boolean.dishwasher_load_clean
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.dishwasher_load_clean
      state: 'on'
    then:
    - service: notify.mobile_app_aurora
      data:
        message: Dishwasher cooled down at {{ (now().time()| string)[:5] }}.
        title: Please open dishwasher
        data:
          tag: dishwasher_load_clean
          clickAction: /lovelace/dishwasher
    - service: notify.mobile_app_grace
      data:
        title: Please open dishwasher
        message: Dishwasher cooled down at {{ (now().time()| string)[:5] }}.
        data:
          tag: dishwasher_load_clean
    else:
    - service: notify.mobile_app_aurora
      data:
        message: clear_notification
        data:
          tag: dishwasher_load_clean
    - service: notify.mobile_app_grace
      data:
        message: clear_notification
        data:
          tag: dishwasher_load_clean
  mode: single
- id: '1648798677481'
  alias: Coming Home
  description: Set light, fan and AC levels in the Dining Room when coming home
  trigger:
  - platform: state
    entity_id: binary_sensor.main_door
    to: 'on'
  condition:
  - condition: state
    state: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
    entity_id: input_boolean.away_mode
  action:
  - data: {}
    target:
      entity_id: input_boolean.away_mode
    action: input_boolean.turn_off
  - data:
      room:
      - dining_room
      - living_room
    action: script.set_recommended_scene
  mode: single
- id: '1653105007378'
  alias: Notify When Raining With Windows Open
  description: Send a persistent notification if it is raining heavily with windows
    open, and dismiss it if the windows are closed or it is not raining heavily anymore
  trigger:
  - platform: state
    entity_id: sensor.raining_with_windows_open
    to:
  condition: []
  action:
  - if:
    - condition: state
      entity_id: sensor.raining_with_windows_open
      state: alert
    then:
    - service: notify.mobile_app_aurora
      data:
        title: Please close windows
        message: Windows open in heavy rain
        data:
          tag: windows_open_raining
    - service: notify.mobile_app_grace
      data:
        message: Windows open in heavy rain
        title: Please close windows
        data:
          tag: windows_open_raining
    else:
    - service: notify.mobile_app_aurora
      data:
        message: clear_notification
        data:
          tag: windows_open_raining
    - service: notify.mobile_app_grace
      data:
        message: clear_notification
        data:
          tag: windows_open_raining
  mode: single
  max_exceeded: silent
- id: '1653280933582'
  alias: Dishwasher Set State
  description: Set the state of the dishwasher based on its power consumption
  trigger:
  - platform: numeric_state
    entity_id: sensor.dishwasher_watts
    above: 5
    id: washing
  - platform: numeric_state
    entity_id: sensor.dishwasher_watts
    below: 5
    id: idle
  - platform: state
    entity_id:
    - switch.dishwasher
    to: 'off'
    id: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: washing
      sequence:
      - service: input_select.select_option
        data:
          option: Washing
        target:
          entity_id: input_select.dishwasher_status
    - conditions:
      - condition: trigger
        id: idle
      sequence:
      - if:
        - condition: state
          entity_id: input_select.dishwasher_status
          state: Washing
        then:
        - service: input_select.select_option
          data:
            option: Cooling
          target:
            entity_id: input_select.dishwasher_status
        else:
        - service: input_select.select_option
          data:
            option: Standby
          target:
            entity_id: input_select.dishwasher_status
    default:
    - service: input_select.select_option
      data:
        option: 'Off'
      target:
        entity_id: input_select.dishwasher_status
  mode: queued
- id: '1654959141053'
  alias: Water Heater Motion
  description: Turn on water heater if motion detected in Junior Shower
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.junior_shower_motion
    id: motion
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.junior_shower_motion
    id: no_motion
    to: 'off'
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition: []
  action:
  - if:
    - condition: trigger
      id: motion
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.water_heater
    else:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.water_heater
  mode: single
- id: '1659250104695'
  alias: Living Room AC Controller
  description: Control the Living Room AC
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 4bce962ebfba9e2195a00baa98aeec85
      helper_last_controller_event: input_text.zz_living_room_ac_controller_last_event
      action_button_up_short:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.living_room_ac
          command: ac_on
      action_button_up_long:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.living_room_ac
          command: ac_warmer
      action_button_down_short:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.living_room_ac
          command: ac_off
      action_button_down_long:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.living_room_ac
          command: ac_colder
      action_button_up_double:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.living_room_ac
          command: cooling_auto_control
      action_button_down_double:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.living_room_ac
          command: cooling_manual_control
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1659250198010'
  alias: Living Room Fan Controller
  description: Control the Living Room Fan
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 8d71b8333a86c8df2acbb7522620127c
      helper_last_controller_event: input_text.zz_living_room_fan_controller_last_event
      action_button_up_short:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.living_room_fan
          command: fan_on
      action_button_down_short:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.living_room_fan
          command: fan_off
      action_button_down_long:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.living_room_fan
          command: fan_slow_down
      action_button_up_long:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.living_room_fan
          command: fan_speed_up
      action_button_up_double:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.living_room_fan
          command: fan_reverse
      action_button_down_double:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.living_room_fan
          command: fan_forward
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1659250302488'
  alias: Living Room Lights Controller
  description: Control the Living Room Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: c5d9eb9905ea6ac1a19d209a6dd0965c
      helper_last_controller_event: input_text.zz_living_room_lights_controller_last_event
      action_button_up_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.living_room_lights
          - light.living_room_pendant_light_entity
          command: lights_on
      action_button_up_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.living_room_lights
          - light.living_room_pendant_light_entity
          command: lights_brighten
      action_button_down_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.living_room_lights
          - light.living_room_pendant_light_entity
          command: lights_off
      action_button_down_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.living_room_lights
          - light.living_room_pendant_light_entity
          command: lights_darken
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
      action_button_down_double:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.living_room_lights
          - light.living_room_pendant_light_entity
          command: turn_off_room
      button_down_double_press: true
      helper_double_press_delay: 700
      action_button_up_double:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.living_room_lights
          - light.living_room_pendant_light_entity
          command: set_recommended_room_scene
      button_up_double_press: true
- id: '1659251600711'
  alias: Study Room AC Controller
  description: Control the Study Room AC
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 0cc8a08d95a93a8b8053d4fa4abd5233
      helper_last_controller_event: input_text.zz_study_room_ac_controller_last_event
      action_button_up_short:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.study_room_ac
          command: ac_on
      action_button_up_long:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.study_room_ac
          command: ac_warmer
      action_button_down_short:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.study_room_ac
          command: ac_off
      action_button_down_long:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.study_room_ac
          command: ac_colder
      action_button_up_double:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.study_room_ac
          command: cooling_auto_control
      action_button_down_double:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.study_room_ac
          command: cooling_manual_control
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1659251701760'
  alias: Study Room Fan Controller
  description: Control the Study Room Fan
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 93ebf518c9fb9021ea174404b4fef28b
      helper_last_controller_event: input_text.zz_study_room_fan_controller_last_event
      action_button_up_short:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.study_room_fan
          command: fan_on
      action_button_down_short:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.study_room_fan
          command: fan_off
      action_button_down_long:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.study_room_fan
          command: fan_slow_down
      action_button_up_long:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.study_room_fan
          command: fan_speed_up
      action_button_up_double:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.study_room_fan
          command: fan_reverse
      action_button_down_double:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.study_room_fan
          command: fan_forward
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1659251781155'
  alias: Study Room Lights Controller
  description: Control the Study Room Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: d6563b3c30e24806da5ef8823f3fcd03
      helper_last_controller_event: input_text.zz_study_room_lights_controller_last_event
      action_button_up_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.study_room_lights
          command: lights_on
      action_button_up_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.study_room_lights
          command: lights_brighten
      action_button_down_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.study_room_lights
          command: lights_off
      action_button_down_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.study_room_lights
          command: lights_darken
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
      action_button_down_double:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.study_room_lights
          command: turn_off_room
      button_down_double_press: true
      helper_double_press_delay: 700
      action_button_up_double:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.study_room_lights
          command: set_recommended_room_scene
      button_up_double_press: true
- id: '1659255925964'
  alias: Parents' Room AC Controller
  description: Control the Parents' Room AC
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 11472f5eb794fb176a43d64968632bd2
      helper_last_controller_event: input_text.zz_parents_room_ac_controller_last_event
      action_button_up_short:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.parents_room_ac
          command: ac_on
      action_button_up_long:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.parents_room_ac
          command: ac_warmer
      action_button_down_short:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.parents_room_ac
          command: ac_off
      action_button_down_long:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.parents_room_ac
          command: ac_colder
      action_button_up_double:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.parents_room_ac
          command: cooling_auto_control
      action_button_down_double:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.parents_room_ac
          command: cooling_manual_control
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1659255996501'
  alias: Parents' Room Fan Controller
  description: Control the Parents' Room Fan
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: dd5c0569a797b382b5f99e3db5c5ded2
      helper_last_controller_event: input_text.zz_parents_room_fan_controller_last_event
      action_button_up_short:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.parents_room_fan
          command: fan_on
      action_button_down_short:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.parents_room_fan
          command: fan_off
      action_button_down_long:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.parents_room_fan
          command: fan_slow_down
      action_button_up_long:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.parents_room_fan
          command: fan_speed_up
      action_button_up_double:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.parents_room_fan
          command: fan_reverse
      action_button_down_double:
      - action: script.fan_controller
        metadata: {}
        data:
          fan: fan.parents_room_fan
          command: fan_forward
      helper_double_press_delay: 700
      button_up_double_press: true
      button_down_double_press: true
- id: '1659256072000'
  alias: Parents' Room Lights Controller
  description: Control the Parents' Room Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 2d7882ce6b51a89dbc5b012417d00c40
      helper_last_controller_event: input_text.zz_parents_room_lights_controller_last_event
      action_button_up_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.parents_room_lights
          command: lights_on
      action_button_up_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.parents_room_lights
          command: lights_brighten
      action_button_down_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.parents_room_lights
          command: lights_off
      action_button_down_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.parents_room_lights
          command: lights_darken
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
      action_button_down_double:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.parents_room_lights
          command: turn_off_room
      button_down_double_press: true
      helper_double_press_delay: 700
      action_button_up_double:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.parents_room_lights
          command: set_recommended_room_scene
      button_up_double_press: true
- id: '1659256178839'
  alias: Master Bathroom Lights Controller
  description: Control the Master Bathroom Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 75fe391df20feec2911c6bf08707c353
      helper_last_controller_event: input_text.zz_master_bathroom_lights_controller_last_event
      action_button_up_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.master_bathroom_lights
          command: lights_on
      action_button_up_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.master_bathroom_lights
          command: lights_brighten
      action_button_down_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.master_bathroom_lights
          command: lights_off
      action_button_down_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.master_bathroom_lights
          command: lights_darken
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
- id: '1659256970314'
  alias: Kitchen Lights Controller
  description: Control the Kitchen Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 13c989b42cc6640ec074b9c74df4101c
      helper_last_controller_event: input_text.zz_kitchen_lights_controller_last_event
      action_button_up_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.kitchen_lights
          command: lights_on
      action_button_up_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.kitchen_lights
          command: lights_brighten
      action_button_down_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.kitchen_lights
          command: lights_off
      action_button_down_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.kitchen_lights
          command: lights_darken
      button_up_long_max_loop_repeats: 50
      button_down_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_up_long_loop: true
- id: '1659743502956'
  alias: Elena's Room AC Controller
  description: Control Elena's Room AC
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 4992a43f1eecbf448ac02a3c2601ab36
      action_button_up_short:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.elenas_room_ac
          command: ac_on
      action_button_up_long:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.elenas_room_ac
          command: ac_warmer
      action_button_down_short:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.elenas_room_ac
          command: ac_off
      action_button_down_long:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.elenas_room_ac
          command: ac_colder
      action_button_up_double:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.elenas_room_ac
          command: cooling_auto_control
      action_button_down_double:
      - action: script.ac_controller
        metadata: {}
        data:
          ac: climate.elenas_room_ac
          command: cooling_manual_control
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
      helper_last_controller_event: input_text.zz_elena_s_room_ac_controller_last_event
- id: '1660034693952'
  alias: Master Bathroom Blind Auto Control
  description: Control the Master Bathroom Blind based on whether there is motion
    in the Master Shower and whether doors are open at Parents Room and Master Bathroom
  triggers:
  - entity_id:
    - binary_sensor.master_shower_motion
    to: 'on'
    from: 'off'
    id: motion
    trigger: state
  - entity_id:
    - binary_sensor.master_shower_motion
    - binary_sensor.master_bathroom_motion
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 10
      seconds: 0
    id: no_motion
    trigger: state
  - at: input_datetime.sleep_hours_start
    id: sleep_hours_start
    trigger: time
  - entity_id:
    - binary_sensor.parents_room_door
    - binary_sensor.master_bathroom_door
    from: 'off'
    to: 'on'
    id: door_open
    trigger: state
  - entity_id:
    - binary_sensor.parents_room_motion
    to: 'on'
    id: parents_room_motion
    trigger: state
  - trigger: state
    entity_id:
    - input_boolean.away_mode
    to: 'off'
    from: 'on'
    id: away_mode_off
    for: 2
  conditions:
  - condition: state
    entity_id: input_boolean.away_mode
    state: 'off'
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: motion
      sequence:
      - condition: and
        conditions:
        - condition: state
          entity_id: binary_sensor.parents_room_door
          state: 'on'
        - condition: state
          entity_id: binary_sensor.master_bathroom_door
          state: 'off'
      - condition: not
        conditions:
        - condition: state
          entity_id: cover.master_bathroom_blind
          state: closed
      - data: {}
        target:
          entity_id: cover.master_bathroom_blind
        action: cover.close_cover
    - conditions:
      - condition: trigger
        id:
        - no_motion
        - away_mode_off
      sequence:
      - condition: and
        conditions:
        - condition: state
          entity_id: binary_sensor.master_bathroom_motion
          state: 'off'
          for:
            hours: 0
            minutes: 10
            seconds: 0
        - condition: state
          state: 'off'
          entity_id: binary_sensor.master_shower_motion
          for:
            hours: 0
            minutes: 10
            seconds: 0
        - condition: time
          after: input_datetime.sleep_hours_end
          before: input_datetime.sleep_hours_start
          weekday:
          - sun
          - fri
          - sat
          - thu
          - wed
          - tue
          - mon
        - condition: state
          entity_id: binary_sensor.master_bathroom_door
          state: 'on'
      - condition: not
        conditions:
        - condition: state
          entity_id: cover.master_bathroom_blind
          attribute: current_position
          state: '100'
      - data: {}
        target:
          entity_id: cover.master_bathroom_blind
        action: cover.open_cover
    - conditions:
      - condition: trigger
        id: sleep_hours_start
      sequence:
      - condition: not
        conditions:
        - condition: state
          entity_id: cover.master_bathroom_blind
          state: closed
      - data: {}
        target:
          entity_id: cover.master_bathroom_blind
        action: cover.close_cover
    - conditions:
      - condition: trigger
        id: door_open
      sequence:
      - condition: and
        conditions:
        - condition: time
          after: input_datetime.sleep_hours_end
          weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
          - sat
          - sun
          before: input_datetime.sleep_hours_start
        - condition: state
          entity_id: binary_sensor.master_shower_motion
          state: 'off'
          for:
            hours: 0
            minutes: 10
            seconds: 0
        - condition: state
          entity_id: climate.parents_room_ac
          state: 'off'
        - condition: state
          entity_id: fan.parents_room_fan
          state: 'off'
      - condition: not
        conditions:
        - condition: state
          entity_id: cover.master_bathroom_blind
          attribute: current_position
          state: '100'
      - data: {}
        target:
          entity_id: cover.master_bathroom_blind
        action: cover.open_cover
    - conditions:
      - condition: trigger
        id:
        - parents_room_motion
      sequence:
      - condition: time
        after: input_datetime.sleep_hours_start
        before: input_datetime.sleep_hours_end
      - condition: not
        conditions:
        - condition: state
          entity_id: cover.master_bathroom_blind
          state: closed
      - data: {}
        target:
          entity_id: cover.master_bathroom_blind
        action: cover.close_cover
    default: []
  mode: restart
- id: '1660480730988'
  alias: Master Bathroom Blind Controller
  description: Control the Master Bathroom Blind
  use_blueprint:
    path: EPMatt/ikea_e1766.yaml
    input:
      integration: ZHA
      controller_device: 92725db1f0698cbe535382e777d98b52
      helper_last_controller_event: input_text.zz_master_bathroom_blind_controller_last_event
      action_button_up_short:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.master_bathroom_blind
          command: cover_open
      action_button_down_short:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.master_bathroom_blind
          command: cover_close
      action_button_up_double:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.master_bathroom_blind
          command: cover_auto_control
      action_button_down_double:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.master_bathroom_blind
          command: cover_manual_control
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1661152935817'
  alias: Elena's Room Lights Controller
  description: Control Elena's Room Lights
  use_blueprint:
    path: EPMatt/ikea_e2001_e2002.yaml
    input:
      integration: ZHA
      controller_device: bcfa3b3429c3ad745cc8299a3d74e3d3
      helper_last_controller_event: input_text.zz_elena_s_room_lights_controller_last_event
      action_button_up_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.elenas_room_lights
          command: lights_on
      action_button_up_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.elenas_room_lights
          command: lights_brighten
      action_button_down_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.elenas_room_lights
          command: lights_off
      action_button_down_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.elenas_room_lights
          command: lights_darken
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
      action_button_left_short:
      - if:
        - condition: state
          entity_id: light.elenas_room_lights
          state: 'on'
        then:
        - action: light.turn_on
          data:
            color_temp: "{% if state_attr('light.elenas_room_lights', 'color_temp')
              - 20 < state_attr('light.elenas_room_lights', 'min_mireds') %}\n  {{
              state_attr('light.elenas_room_lights', 'min_mireds') }}\n{% else %}\n
              \ {{ state_attr('light.elenas_room_lights', 'color_temp') - 20 }}\n{%
              endif %}\n"
          target:
            entity_id: light.elenas_room_lights
      action_button_left_long:
      - if:
        - condition: state
          entity_id: light.elenas_room_lights
          state: 'on'
        then:
        - action: light.turn_on
          data:
            color_temp: "{% if state_attr('light.elenas_room_lights', 'color_temp')
              - 20 < state_attr('light.elenas_room_lights', 'min_mireds') %}\n  {{
              state_attr('light.elenas_room_lights', 'min_mireds') }}\n{% else %}\n
              \ {{ state_attr('light.elenas_room_lights', 'color_temp') - 20 }}\n{%
              endif %}\n"
          target:
            entity_id: light.elenas_room_lights
      action_button_right_short:
      - if:
        - condition: state
          entity_id: light.elenas_room_lights
          state: 'on'
        then:
        - action: light.turn_on
          data:
            color_temp: "{% if state_attr('light.elenas_room_lights', 'color_temp')
              + 20 > state_attr('light.elenas_room_lights', 'max_mireds') %}\n  {{
              state_attr('light.elenas_room_lights', 'max_mireds') }}\n{% else %}\n
              \ {{ state_attr('light.elenas_room_lights', 'color_temp') + 20 }}\n{%
              endif %}\n"
          target:
            entity_id: light.elenas_room_lights
      action_button_right_long:
      - if:
        - condition: state
          entity_id: light.elenas_room_lights
          state: 'on'
        then:
        - action: light.turn_on
          data:
            color_temp: "{% if state_attr('light.elenas_room_lights', 'color_temp')
              + 20 > state_attr('light.elenas_room_lights', 'max_mireds') %}\n  {{
              state_attr('light.elenas_room_lights', 'max_mireds') }}\n{% else %}\n
              \ {{ state_attr('light.elenas_room_lights', 'color_temp') + 20 }}\n{%
              endif %}\n"
          target:
            entity_id: light.elenas_room_lights
      button_left_long_loop: true
      button_left_long_max_loop_repeats: 50
      button_right_long_loop: true
      button_right_long_max_loop_repeats: 50
      action_button_up_double:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.elenas_room_lights
          command: set_recommended_room_scene
      action_button_down_double:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.elenas_room_lights
          command: turn_off_room
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1661601576517'
  alias: Washer Load Clean
  description: Indicate when the washer load is clean and needs unloading
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.washer_wash_completed
    to: 'on'
    id: finished
    from: 'off'
  - platform: state
    entity_id:
    - binary_sensor.washer_door
    from: 'off'
    to: 'on'
    id: opened
  condition: []
  action:
  - if:
    - condition: trigger
      id: finished
    then:
    - condition: state
      entity_id: binary_sensor.washer_door
      state: 'off'
    - data: {}
      target:
        entity_id: input_boolean.washer_load_clean
      action: input_boolean.turn_on
    else:
    - data: {}
      target:
        entity_id: input_boolean.washer_load_clean
      action: input_boolean.turn_off
  mode: single
- id: '1661612907662'
  alias: Dishwasher Load Clean
  description: Indicate when the dishwasher load is clean and needs unloading
  trigger:
  - platform: state
    entity_id:
    - input_select.dishwasher_status
    id: finished
    from: Cooling
    to: 'Off'
  - platform: state
    entity_id:
    - binary_sensor.dishwasher_door
    from: 'off'
    to: 'on'
    id: opened
  condition: []
  action:
  - if:
    - condition: trigger
      id: finished
    then:
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.dishwasher_load_clean
    else:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.dishwasher_load_clean
  mode: single
- id: '1662778610362'
  alias: Eli's Room Lights Controller
  description: Control Eli's Room Lights
  use_blueprint:
    path: EPMatt/ikea_e1524_e1810.yaml
    input:
      integration: ZHA
      controller_device: 4f9d115057150510080b9cde7008bb35
      helper_last_controller_event: input_text.zz_eli_s_room_lights_controller_last_event
      action_button_left_short:
      - if:
        - condition: state
          entity_id: light.elis_room_lights
          state: 'on'
        then:
        - action: light.turn_on
          data:
            color_temp: "{% if state_attr('light.elis_room_lights', 'color_temp')
              - 20 > state_attr('light.elis_room_lights', 'min_mireds') %}\n  {{ state_attr('light.elis_room_lights',
              'color_temp') - 20}}\n{% else %}\n  {{ state_attr('light.elis_room_lights',
              'min_mireds') }}\n{% endif %}\n"
          target:
            entity_id: light.elis_room_lights
      action_button_left_long:
      - if:
        - condition: state
          entity_id: light.elis_room_lights
          state: 'on'
        then:
        - action: light.turn_on
          data:
            color_temp: "{% if state_attr('light.elis_room_lights', 'color_temp')
              - 20 > state_attr('light.elis_room_lights', 'min_mireds') %}\n  {{ state_attr('light.elis_room_lights',
              'color_temp') - 20 }}\n{% else %}\n  {{ state_attr('light.elis_room_lights',
              'min_mireds') }}\n{% endif %}\n"
          target:
            entity_id: light.elis_room_lights
      action_button_right_short:
      - if:
        - condition: state
          entity_id: light.elis_room_lights
          state: 'on'
        then:
        - action: light.turn_on
          data:
            color_temp: "{% if state_attr('light.elis_room_lights', 'color_temp')
              + 20 < state_attr('light.elis_room_lights', 'max_mireds') %}\n  {{ state_attr('light.elis_room_lights',
              'color_temp') + 20}}\n{% else %}\n  {{ state_attr('light.elis_room_lights',
              'max_mireds') }}\n{% endif %}\n"
          target:
            entity_id: light.elis_room_lights
      action_button_right_long:
      - if:
        - condition: state
          entity_id: light.elis_room_lights
          state: 'on'
        then:
        - action: light.turn_on
          data:
            color_temp: "{% if state_attr('light.elis_room_lights', 'color_temp')
              + 20 < state_attr('light.elis_room_lights', 'max_mireds') %}\n  {{ state_attr('light.elis_room_lights',
              'color_temp') + 20 }}\n{% else %}\n  {{ state_attr('light.elis_room_lights',
              'max_mireds') }}\n{% endif %}\n"
          target:
            entity_id: light.elis_room_lights
      action_button_up_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.elis_room_lights
          command: lights_brighten
      action_button_up_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.elis_room_lights
          command: lights_brighten
      action_button_down_short:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.elis_room_lights
          command: lights_darken
      action_button_down_long:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.elis_room_lights
          command: lights_darken
      action_button_center_short:
      - if:
        - condition: state
          entity_id: light.elis_room_lights
          state: 'on'
        then:
        - action: script.lights_controller
          metadata: {}
          data:
            lights:
            - light.elis_room_lights
            command: lights_off
        else:
        - action: script.lights_controller
          metadata: {}
          data:
            lights:
            - light.elis_room_lights
            command: lights_on
      button_left_long_loop: true
      button_left_long_max_loop_repeats: 50
      button_right_long_loop: true
      button_right_long_max_loop_repeats: 50
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
      action_button_up_double:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.elis_room_lights
          command: set_recommended_room_scene
      action_button_down_double:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.elis_room_lights
          command: turn_off_room
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1664539716957'
  alias: Stove Set State
  description: Set the state of the stove according to input_helpers
  trigger:
  - platform: state
    entity_id:
    - select.stove_current_burner_power
    id: select
  - platform: state
    entity_id:
    - input_number.stove_current_burner_power_slider
    id: slider
  - platform: state
    entity_id:
    - input_boolean.stove_select_left_burner
    id: left_burner
  - platform: state
    entity_id:
    - input_boolean.stove_select_right_burner
    id: right_burner
  - platform: state
    entity_id:
    - select.stove_current_burner
    id: burner
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: select
      sequence:
      - service: input_number.set_value
        data:
          value: '{{ states(''select.stove_current_burner_power'') }}'
        target:
          entity_id: input_number.stove_current_burner_power_slider
    - conditions:
      - condition: trigger
        id: slider
      sequence:
      - service: select.select_option
        data:
          option: '{{ states(''input_number.stove_current_burner_power_slider'') |
            int(0) }}'
        target:
          entity_id: select.stove_current_burner_power
    - conditions:
      - condition: trigger
        id: left_burner
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.stove_select_left_burner
          state: 'on'
        then:
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.stove_select_right_burner
        - service: select.select_option
          data:
            option: left
          target:
            entity_id: select.stove_current_burner
        else:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.stove_select_right_burner
        - service: select.select_option
          data:
            option: right
          target:
            entity_id: select.stove_current_burner
    - conditions:
      - condition: trigger
        id: right_burner
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.stove_select_right_burner
          state: 'on'
        then:
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.stove_select_left_burner
        - service: select.select_option
          data:
            option: right
          target:
            entity_id: select.stove_current_burner
        else:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.stove_select_left_burner
        - service: select.select_option
          data:
            option: left
          target:
            entity_id: select.stove_current_burner
    - conditions:
      - condition: trigger
        id: burner
      sequence:
      - if:
        - condition: state
          entity_id: select.stove_current_burner
          state: left
        then:
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.stove_select_right_burner
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.stove_select_left_burner
        else:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.stove_select_right_burner
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.stove_select_left_burner
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 10
  mode: single
  max_exceeded: silent
- id: '1667350498199'
  alias: Away Mode
  description: Set automated controls and devices for away mode
  triggers:
  - entity_id:
    - input_boolean.away_mode
    trigger: state
  conditions: []
  actions:
  - if:
    - condition: state
      entity_id: input_boolean.away_mode
      state: 'on'
    then:
    - data:
        stop_actions: true
      target:
        entity_id:
        - automation.auto_cooling_at_night
        - automation.elenas_room_fan_auto_control
        - automation.elis_room_fan_auto_control
        - automation.parents_room_fan_auto_control
        - automation.dining_room_fan_auto_control
        - automation.living_room_fan_auto_control
        - automation.study_room_fan_auto_control
        - automation.hallway_motion_lights
        - automation.junior_bathroom_motion_lights
        - automation.kitchen_blind_auto_control
        - automation.master_bathroom_motion_light
        - automation.master_bathroom_motion_pendant_light
        - automation.powder_room_motion_pendant_light
        - automation.water_heater_motion
        - automation.south_facing_blinds_auto_control
        - automation.lights_for_wind_down
        - automation.lights_for_sleep_hours_start
        - automation.daniels_alarm
        - automation.elis_alarm
        - automation.graces_alarm
        - automation.parents_room_motion_ac
        - automation.parents_room_motion_fan
        - automation.parents_room_motion_lights
        - automation.elenas_room_motion_ac
        - automation.elenas_room_motion_fan
        - automation.elenas_room_motion_lights
        - automation.elis_room_motion_ac
        - automation.elis_room_motion_fan
        - automation.elis_room_motion_lights
        - automation.kitchen_motion_lights
        - automation.study_walkway_motion_light
        - automation.playroom_motion_lights
        - automation.yard_motion_light
        - automation.dining_room_motion_ac
        - automation.dining_room_motion_fan
        - automation.dining_room_motion_lights
        - automation.dining_room_motion_pendant_light
        - automation.living_room_motion_ac
        - automation.living_room_motion_fan
        - automation.living_room_motion_lights
        - automation.living_room_motion_pendant_light
        - automation.study_room_motion_ac
        - automation.study_room_motion_fan
        - automation.study_room_motion_lights
        - automation.doorbell
        - automation.study_room_voice_assistant_listening_for_wake_word
        - automation.kitchen_voice_assistant_listening_for_wake_word
        - automation.living_room_voice_assistant_listening_for_wake_word
        - automation.elenas_room_curtains_auto_control
        - automation.elis_room_curtains_auto_control
      enabled: true
      action: automation.turn_off
    - data: {}
      target:
        entity_id: cover.kitchen_blind
      action: cover.close_cover
    - data: {}
      action: script.turn_off_all
    - repeat:
        for_each:
        - cover.elenas_room_curtains
        - cover.elis_room_curtains
        - cover.dining_room_right_blind
        - cover.dining_room_middle_blind
        - cover.dining_room_left_blind
        - cover.living_room_right_blind
        - cover.living_room_middle_blind
        - cover.living_room_left_blind
        - cover.study_room_right_blind
        - cover.study_room_left_blind
        - cover.master_bathroom_blind
        sequence:
        - target:
            entity_id: '{{ repeat.item }}'
          action: cover.close_cover
          continue_on_error: true
        - delay:
            hours: 0
            minutes: 0
            seconds: 2
            milliseconds: 0
    - metadata: {}
      data: {}
      target:
        entity_id:
        - switch.study_room_voice_assistant_use_wake_word
        - switch.kitchen_core_use_wake_word
      action: switch.turn_off
    - action: switch.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: switch.living_room_voice_assistant_mute
    else:
    - data: {}
      target:
        entity_id:
        - automation.auto_cooling_at_night
        - automation.elenas_room_fan_auto_control
        - automation.elis_room_fan_auto_control
        - automation.parents_room_fan_auto_control
        - automation.dining_room_fan_auto_control
        - automation.living_room_fan_auto_control
        - automation.study_room_fan_auto_control
        - automation.hallway_motion_lights
        - automation.junior_bathroom_motion_lights
        - automation.kitchen_blind_auto_control
        - automation.master_bathroom_motion_light
        - automation.master_bathroom_motion_pendant_light
        - automation.powder_room_motion_pendant_light
        - automation.water_heater_motion
        - automation.south_facing_blinds_auto_control
        - automation.lights_for_wind_down
        - automation.lights_for_sleep_hours_start
        - automation.daniels_alarm
        - automation.elis_alarm
        - automation.graces_alarm
        - automation.parents_room_motion_ac
        - automation.parents_room_motion_fan
        - automation.parents_room_motion_lights
        - automation.elenas_room_motion_ac
        - automation.elenas_room_motion_fan
        - automation.elenas_room_motion_lights
        - automation.elis_room_motion_ac
        - automation.elis_room_motion_fan
        - automation.elis_room_motion_lights
        - automation.kitchen_motion_lights
        - automation.study_walkway_motion_light
        - automation.playroom_motion_lights
        - automation.yard_motion_light
        - automation.dining_room_motion_ac
        - automation.dining_room_motion_fan
        - automation.dining_room_motion_lights
        - automation.dining_room_motion_pendant_light
        - automation.living_room_motion_ac
        - automation.living_room_motion_fan
        - automation.living_room_motion_lights
        - automation.living_room_motion_pendant_light
        - automation.study_room_motion_ac
        - automation.study_room_motion_fan
        - automation.study_room_motion_lights
        - automation.doorbell
        - automation.study_room_voice_assistant_listening_for_wake_word
        - automation.kitchen_voice_assistant_listening_for_wake_word
        - automation.living_room_voice_assistant_listening_for_wake_word
        - automation.elenas_room_curtains_auto_control
        - automation.elis_room_curtains_auto_control
      action: automation.turn_on
    - repeat:
        sequence:
        - action: automation.trigger
          metadata: {}
          data:
            skip_condition: true
          target:
            entity_id: '{{ repeat.item }}'
        - delay: 5
        for_each:
        - automation.south_facing_blinds_auto_control
        - automation.kitchen_blind_auto_control
        - automation.elis_room_curtains_auto_control
        - automation.elenas_room_curtains_auto_control
  mode: single
- id: '1670838907474'
  alias: System Housekeeping
  description: Daily housekeeping tasks executed at 2350h
  triggers:
  - at: '23:50:00'
    trigger: time
    id: daily
  - trigger: time
    at: 00:50:00
    id: sunday_only_pmbackup_start
  - trigger: time
    at: 01:50:00
    id: sunday_only_pmbackup_end
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - daily
      sequence:
      - metadata: {}
        data: {}
        action: shell_command.removeoldmaindoorcamerasnapshots
      - data:
          commit_message: Autocommit on {{ now().day }}/{{ now().month }}/{{ now().year
            }} {{ now().hour }}:{{ now().minute }}
        action: script.git_push
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
      - data: {}
        target:
          entity_id:
          - automation.south_facing_blinds_auto_control
          - automation.kitchen_blind_auto_control
          - automation.dining_room_motion_timeout
          - automation.elenas_room_motion_timeout
          - automation.elis_room_motion_timeout
          - automation.living_room_motion_timeout
          - automation.parents_room_motion_timeout
          - automation.study_walkway_motion_timeout
          - automation.study_room_motion_timeout
          - automation.master_bathroom_blind_auto_control
        action: automation.turn_on
      - action: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: switch.jupyterlab
      - delay: 60
      - repeat:
          sequence:
          - action: switch.turn_on
            metadata: {}
            data: {}
            target:
              entity_id: '{{ repeat.item }}'
          - delay: 60
          for_each:
          - switch.immich_server
          - switch.immich_postgres
          - switch.immich_redis
          - switch.immich_machine_learning
    - conditions:
      - condition: trigger
        id:
        - sunday_only_pmbackup_start
      sequence:
      - condition: time
        after: 00:49:00
        before: 00:51:00
        weekday:
        - sun
      - repeat:
          sequence:
          - action: switch.turn_off
            metadata: {}
            data: {}
            target:
              entity_id: '{{ repeat.item }}'
          - delay: 60
          for_each:
          - switch.jupyterlab
          - switch.immich_server
          - switch.immich_postgres
          - switch.immich_redis
          - switch.immich_machine_learning
    - conditions:
      - condition: trigger
        id:
        - sunday_only_pmbackup_end
      sequence:
      - condition: time
        after: 01:49:00
        before: 01:51:00
        weekday:
        - sun
      - repeat:
          sequence:
          - action: switch.turn_on
            metadata: {}
            data: {}
            target:
              entity_id: '{{ repeat.item }}'
          - delay: 60
          for_each:
          - switch.immich_server
          - switch.immich_postgres
          - switch.immich_redis
          - switch.immich_machine_learning
  mode: single
- id: '1672302011128'
  alias: South-Facing Blinds Auto Control
  description: Open or close the south-facing blinds based on sun position
  triggers:
  - entity_id:
    - sun.sun
    attribute: rising
    to: false
    trigger: state
  - entity_id: sensor.sun_solar_elevation
    above: 65
    trigger: numeric_state
  - entity_id: sensor.dining_room_lux
    above: input_number.maximum_lux
    for:
      minutes: '{{ states(''input_number.blinds_auto_control_debounce'') | int(5)
        }}'
    trigger: numeric_state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: sun.sun
          attribute: rising
          state: false
        - condition: numeric_state
          entity_id: sensor.sun_solar_elevation
          above: 65
      sequence:
      - repeat:
          for_each:
          - cover.dining_room_right_blind
          - cover.dining_room_middle_blind
          - cover.dining_room_left_blind
          - cover.living_room_right_blind
          - cover.living_room_middle_blind
          - cover.living_room_left_blind
          - cover.study_room_right_blind
          - cover.study_room_left_blind
          sequence:
          - target:
              entity_id: '{{ repeat.item }}'
            continue_on_error: true
            action: cover.open_cover
          - delay: '{{ states(''input_number.blinds_command_deconflict'' ) | int(2)
              }}'
    - conditions:
      - condition: numeric_state
        entity_id: sensor.dining_room_lux
        above: input_number.maximum_lux
      sequence:
      - condition: state
        entity_id: sun.sun
        attribute: rising
        state: true
      - repeat:
          for_each:
          - cover.dining_room_right_blind
          - cover.dining_room_middle_blind
          - cover.dining_room_left_blind
          - cover.living_room_right_blind
          - cover.living_room_middle_blind
          - cover.living_room_left_blind
          - cover.study_room_right_blind
          - cover.study_room_left_blind
          sequence:
          - target:
              entity_id: '{{ repeat.item }}'
            continue_on_error: true
            action: cover.close_cover
          - delay: '{{ states(''input_number.blinds_command_deconflict'' ) | int(2)
              }}'
  mode: single
- id: '1672314137246'
  alias: Dining Room Blinds Controller
  description: Control the Dining Room Blinds
  use_blueprint:
    path: EPMatt/ikea_e1766.yaml
    input:
      integration: ZHA
      controller_device: 68f01f6ac156c53b78eb226a0e60ea51
      helper_last_controller_event: input_text.zz_dining_room_blinds_controller_last_event
      action_button_up_short:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.dining_room_blinds
          command: cover_open
      action_button_down_short:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.dining_room_blinds
          command: cover_close
      action_button_up_double:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.dining_room_blinds
          command: cover_auto_control
      action_button_down_double:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.dining_room_blinds
          command: cover_manual_control
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 500
- id: '1672314269486'
  alias: Living Room Blinds Controller
  description: Control the Living Room Blinds
  use_blueprint:
    path: EPMatt/ikea_e1766.yaml
    input:
      integration: ZHA
      controller_device: 0981862e96a5579d41b0f56bff674bc1
      helper_last_controller_event: input_text.zz_living_room_blinds_controller_last_event
      action_button_up_short:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.living_room_blinds
          command: cover_open
      action_button_down_short:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.living_room_blinds
          command: cover_close
      action_button_up_double:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.living_room_blinds
          command: cover_auto_control
      action_button_down_double:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.living_room_blinds
          command: cover_manual_control
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 500
- id: '1672722028985'
  alias: Rice Cooker Auto Control
  description: Turn on or off the rice cooker based on lid state and idle time
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.rice_cooker_lid
    to: 'off'
    id: lid_closed
  - platform: template
    value_template: '{{ is_state(''switch.rice_cooker'',''on'') and states(''sensor.rice_cooker_watts'')
      | float(0) <= 1 }}'
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: idle
  condition: []
  action:
  - if:
    - condition: trigger
      id: lid_closed
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.rice_cooker
    else:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.rice_cooker
  mode: single
- id: '1672734021271'
  alias: Rice Cooker Set State
  description: Set the state of the rice cooker based on power consumption
  trigger:
  - platform: numeric_state
    entity_id: sensor.rice_cooker_watts_recent_max
    above: 200
    id: cooking
  - platform: numeric_state
    entity_id: sensor.rice_cooker_watts_recent_max
    above: 30
    below: 140
    id: warming
  - platform: state
    entity_id:
    - sensor.rice_cooker_watts
    to: '1'
    for:
      hours: 0
      minutes: 1
      seconds: 0
    id: standby
  - platform: state
    entity_id:
    - switch.rice_cooker
    not_from:
    - unavailable
    - unknown
    not_to:
    - unavailable
    - unknown
    id: power
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: cooking
      sequence:
      - service: input_select.select_option
        data:
          option: Cooking
        target:
          entity_id: input_select.rice_cooker_status
    - conditions:
      - condition: trigger
        id: warming
      sequence:
      - service: input_select.select_option
        data:
          option: Warming
        target:
          entity_id: input_select.rice_cooker_status
    - conditions:
      - condition: trigger
        id: standby
      sequence:
      - service: input_select.select_option
        data:
          option: Standby
        target:
          entity_id: input_select.rice_cooker_status
    - conditions:
      - condition: trigger
        id: power
      sequence:
      - if:
        - condition: state
          entity_id: switch.rice_cooker
          state: 'on'
        then:
        - service: input_select.select_option
          data:
            option: Standby
          target:
            entity_id: input_select.rice_cooker_status
        else:
        - service: input_select.select_option
          data:
            option: 'Off'
          target:
            entity_id: input_select.rice_cooker_status
    default: []
  mode: single
- id: '1672898689403'
  alias: Lights for Wind Down
  description: Set house lights for wind down
  trigger:
  - platform: time
    at: input_datetime.wind_down
  - platform: state
    entity_id:
    - input_boolean.party_mode
    from: 'on'
    to: 'off'
  condition:
  - condition: template
    value_template: '{{ now() > today_at(states(''input_datetime.wind_down'')) - timedelta(minutes
      = 1) }}'
  - condition: state
    entity_id: input_boolean.party_mode
    state: 'off'
  action:
  - if:
    - condition: state
      entity_id: light.yard_light_entity
      state: 'on'
    then:
    - service: light.turn_on
      data:
        transition: 10
        brightness_pct: '{{ states(''input_number.night_light_brightness'') }}'
      target:
        entity_id: light.yard_light_entity
      continue_on_error: true
    - delay: 2
  - parallel:
    - repeat:
        for_each:
        - light.playroom_bulb_1_entity
        - light.playroom_bulb_2_entity
        - light.playroom_bulb_3_entity
        sequence:
        - if:
          - condition: template
            value_template: '{{ is_state(repeat.item, ''on'') }}'
          then:
          - service: light.turn_on
            target:
              entity_id: '{{ repeat.item }}'
            data:
              transition: 10
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
            continue_on_error: true
          - delay: 2
    - repeat:
        for_each:
        - light.kitchen_ceiling_light_entity
        - light.kitchen_bulb_1_entity
        - light.kitchen_bulb_2_entity
        - light.kitchen_bulb_3_entity
        sequence:
        - if:
          - condition: template
            value_template: '{{ is_state(repeat.item, ''on'') }}'
          then:
          - service: light.turn_on
            target:
              entity_id: '{{ repeat.item }}'
            data:
              transition: 10
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
            continue_on_error: true
          - delay: 2
    - if:
      - condition: state
        entity_id: binary_sensor.study_room_ethernet_connection
        state: 'off'
      then:
      - repeat:
          for_each:
          - light.study_room_bulb_1_entity
          - light.study_room_bulb_2_entity
          - light.study_room_bulb_3_entity
          - light.study_room_bulb_4_entity
          sequence:
          - if:
            - condition: template
              value_template: '{{ is_state(repeat.item, ''on'') }}'
            then:
            - service: light.turn_on
              target:
                entity_id: '{{ repeat.item }}'
              data:
                transition: 10
                brightness_pct: '{{ states(''input_number.night_light_brightness'')
                  }}'
              continue_on_error: true
            - delay: 2
  - repeat:
      for_each:
      - light.living_room_bulb_1_entity
      - light.living_room_bulb_2_entity
      - light.living_room_bulb_3_entity
      - light.living_room_bulb_4_entity
      - light.living_room_bulb_5_entity
      sequence:
      - if:
        - condition: template
          value_template: '{{ is_state(repeat.item, ''on'') }}'
        then:
        - service: light.turn_off
          target:
            entity_id: '{{ repeat.item }}'
          data:
            transition: 10
          continue_on_error: true
        - delay: 2
  - if:
    - condition: state
      entity_id: light.living_room_pendant_light_entity
      state: 'on'
    then:
    - service: light.turn_on
      data:
        brightness_pct: '{{ states(''input_number.night_light_brightness'') }}'
        transition: 10
      target:
        entity_id: light.living_room_pendant_light_entity
      continue_on_error: true
  - repeat:
      for_each:
      - light.dining_room_bulb_1_entity
      - light.dining_room_bulb_2_entity
      - light.dining_room_bulb_3_entity
      - light.dining_room_bulb_4_entity
      sequence:
      - if:
        - condition: template
          value_template: '{{ is_state(repeat.item, ''on'') }}'
        then:
        - service: light.turn_off
          target:
            entity_id: '{{ repeat.item }}'
          data:
            transition: 10
          continue_on_error: true
        - delay: 2
  - if:
    - condition: state
      entity_id: light.dining_room_pendant_light_entity
      state: 'on'
    then:
    - service: light.turn_on
      data:
        transition: 10
        brightness_pct: '{{ states(''input_number.night_light_brightness'') }}'
      target:
        entity_id: light.dining_room_pendant_light_entity
      continue_on_error: true
  - repeat:
      for_each:
      - light.hallway_bulb_1_entity
      - light.hallway_bulb_2_entity
      sequence:
      - if:
        - condition: template
          value_template: '{{ is_state(repeat.item, ''on'') }}'
        then:
        - service: light.turn_on
          target:
            entity_id: '{{ repeat.item }}'
          data:
            transition: 10
            brightness_pct: '{{ states(''input_number.night_light_brightness'') }}'
          continue_on_error: true
        - delay: 2
  - parallel:
    - if:
      - condition: state
        entity_id: light.powder_room_pendant_light_entity
        state: 'on'
      then:
      - service: light.turn_on
        data:
          transition: 10
          brightness_pct: '{{ states(''input_number.night_light_brightness'') }}'
        target:
          entity_id: light.powder_room_pendant_light_entity
        continue_on_error: true
    - repeat:
        for_each:
        - light.junior_bathroom_ceiling_light_entity
        - light.junior_bathroom_pendant_light_entity
        sequence:
        - if:
          - condition: template
            value_template: '{{ is_state(repeat.item, ''on'') }}'
          then:
          - service: light.turn_on
            target:
              entity_id: '{{ repeat.item }}'
            data:
              transition: 10
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
            continue_on_error: true
          - delay: 2
  mode: single
- id: '1674045954399'
  alias: Lights for Sleep Hours Start
  description: Set the lights for Sleep Hours Start
  trigger:
  - platform: time
    at: input_datetime.sleep_hours_start
  condition: []
  action:
  - repeat:
      for_each:
      - light.elis_room_bulb_1_entity
      - light.elis_room_bulb_2_entity
      - light.elis_room_bulb_3_entity
      sequence:
      - if:
        - condition: template
          value_template: '{{ is_state(repeat.item, ''on'') }}'
        then:
        - service: light.turn_on
          target:
            entity_id: '{{ repeat.item }}'
          data:
            transition: 10
            brightness_pct: '{{ states(''input_number.night_light_brightness'') |
              int }}'
          continue_on_error: true
        - delay: 2
  - repeat:
      for_each:
      - light.elenas_room_bulb_1_entity
      - light.elenas_room_bulb_2_entity
      - light.elenas_room_bulb_3_entity
      sequence:
      - if:
        - condition: template
          value_template: '{{ is_state(repeat.item, ''on'') }}'
        then:
        - service: light.turn_on
          target:
            entity_id: '{{ repeat.item }}'
          data:
            transition: 10
            brightness_pct: '{{ states(''input_number.night_light_brightness'') |
              int }}'
          continue_on_error: true
        - delay: 2
  mode: single
- id: '1675045598043'
  alias: Junior Bathroom Occupancy
  description: Track occupancy in the Junior Bathroom based on Wasp in a Box logic
  use_blueprint:
    path: AlexanderBabel/occupancy.yaml
    input:
      motion_sensor: binary_sensor.junior_bathroom_motion_sensors
      occupancy_helper: input_boolean.junior_bathroom_occupancy
      last_motion_helper: input_datetime.junior_bathroom_last_motion_detected
      turn_off_delay: 90
      door_sensor: binary_sensor.junior_bathroom_door
- id: '1675045768564'
  alias: Powder Room Occupancy
  description: Track occupancy in the Powder Room based on Wasp in a Box logic
  use_blueprint:
    path: AlexanderBabel/occupancy.yaml
    input:
      door_sensor: binary_sensor.powder_room_door
      motion_sensor: binary_sensor.powder_room_motion
      occupancy_helper: input_boolean.powder_room_occupancy
      last_motion_helper: input_datetime.powder_room_last_motion_detected
- id: '1675045803046'
  alias: Master Bathroom Occupancy
  description: Track occupancy in the Master Bathroom based on Wasp in a Box logic
  use_blueprint:
    path: AlexanderBabel/occupancy.yaml
    input:
      door_sensor: binary_sensor.master_bathroom_door
      motion_sensor: binary_sensor.master_bathroom_motion_sensors
      occupancy_helper: input_boolean.master_bathroom_occupancy
      last_motion_helper: input_datetime.master_bathroom_last_motion_detected
      turn_off_delay: 90
- id: '1675047268231'
  alias: Study Table Controller
  description: Control the house devices for working at home
  use_blueprint:
    path: EPMatt/ikea_e1766.yaml
    input:
      integration: ZHA
      controller_device: 448d76f832cedfc3db1d670ff3636ac2
      helper_last_controller_event: input_text.zz_study_table_controller_last_event
      action_button_up_short:
      - if:
        - condition: state
          entity_id: input_boolean.party_mode
          state: 'off'
        then:
        - action: script.set_recommended_scene
          data:
            room:
            - study_room
        else:
        - action: script.botc_day_night_toggle
          metadata: {}
          data:
            set_day: true
      action_button_up_long:
      - service: light.turn_on
        data:
          brightness_step_pct: '{{ states(''input_number.light_brightness_change_step'')
            }}'
        target:
          entity_id: light.study_room_lights
      action_button_down_short:
      - if:
        - condition: state
          entity_id: input_boolean.party_mode
          state: 'off'
        then:
        - data:
            skip_condition: true
          target:
            entity_id: automation.study_room_motion_timeout
          action: automation.trigger
        else:
        - action: script.botc_day_night_toggle
          metadata: {}
          data:
            set_day: false
      action_button_down_long:
      - service: light.turn_on
        data:
          brightness_step_pct: '-{{ states(''input_number.light_brightness_change_step'')
            }}

            '
        target:
          entity_id: light.study_room_lights
      action_button_down_double:
      - condition: state
        entity_id: input_boolean.party_mode
        state: 'off'
      - data:
          skip_condition: true
        target:
          entity_id:
          - automation.junior_bathroom_motion_timeout
          - automation.powder_room_motion_timeout
        action: automation.trigger
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - if:
        - condition: state
          entity_id: binary_sensor.elenas_room_door
          state: 'on'
        then:
        - data:
            skip_condition: true
          target:
            entity_id: automation.elenas_room_motion_timeout
          action: automation.trigger
      - if:
        - condition: state
          entity_id: binary_sensor.elis_room_door
          state: 'on'
        then:
        - data:
            skip_condition: true
          target:
            entity_id: automation.elis_room_motion_timeout
          action: automation.trigger
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - data:
          skip_condition: true
        target:
          entity_id:
          - automation.yard_motion_timeout
          - automation.playroom_motion_timeout
          - automation.hallway_motion_timeout
        action: automation.trigger
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - data:
          skip_condition: true
        target:
          entity_id:
          - automation.kitchen_motion_timeout
          - automation.master_bathroom_motion_timeout
        action: automation.trigger
      - if:
        - condition: or
          conditions:
          - condition: state
            entity_id: binary_sensor.parents_room_door
            state: 'on'
          - condition: state
            entity_id: binary_sensor.master_bathroom_door
            state: 'on'
        then:
        - data:
            skip_condition: true
          target:
            entity_id: automation.parents_room_motion_timeout
          action: automation.trigger
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - data:
          skip_condition: true
        target:
          entity_id:
          - automation.dining_room_motion_timeout
          - automation.living_room_motion_timeout
        action: automation.trigger
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 20
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 20
      button_down_double_press: true
      helper_double_press_delay: 500
- id: '1676814581353'
  alias: Notify When Holiday Upcoming
  description: Send notifications to apps when school or public holidays are upcoming
  trigger:
  - platform: template
    value_template: '{{ (state_attr(''calendar.elena_no_school'',''start_time'').split()[0]
      | as_datetime).date() - now().date() <= timedelta(days = states(''input_number.holiday_advance_reminder'')
      | int(7)) }}'
    alias: When Elena's next school holiday is less than time threshold for advance
      reminder
    id: calendar.elena_no_school
  - platform: template
    value_template: '{{ (state_attr(''calendar.elena_no_school'',''start_time'').split()[0]
      | as_datetime).date() - now().date() <= timedelta(days = 1) }}'
    alias: When Elena's next school holiday is tomorrow
    id: calendar.elena_no_school
  - platform: template
    value_template: '{{ (state_attr(''calendar.eli_no_school'',''start_time'').split()[0]
      | as_datetime).date() - now().date() <= timedelta(days = states(''input_number.holiday_advance_reminder'')
      | int(7)) }}'
    alias: When Eli's next school holiday is less than time threshold for advance
      reminder
    id: calendar.eli_no_school
  - platform: template
    value_template: '{{ (state_attr(''calendar.eli_no_school'',''start_time'').split()[0]
      | as_datetime).date() - now().date() <= timedelta(days = 1) }}'
    id: calendar.eli_no_school
    alias: When Eli's next school holiday is tomorrow
  - platform: template
    value_template: '{{ (state_attr(''calendar.public_holidays'',''start_time'').split()[0]
      | as_datetime).date() - now().date() <= timedelta(days = states(''input_number.holiday_advance_reminder'')
      | int(7)) }}'
    id: calendar.public_holidays
    alias: When the next public holiday is less than time threshold for advance reminder
  - platform: template
    value_template: '{{ (state_attr(''calendar.public_holidays'',''start_time'').split()[0]
      | as_datetime).date() - now().date() <= timedelta(days = 1) }}'
    id: calendar.public_holidays
    alias: When the next public holiday is tomorrow
  condition: []
  action:
  - service: notify.mobile_app_grace
    data:
      title: "{% set start_date = (state_attr(trigger.id,'start_time').split()[0]
        | as_datetime).date() %} {% set end_date = (state_attr(trigger.id,'end_time').split()[0]
        | as_datetime - timedelta(days=1)).date() %} {% if start_date == end_date
        %}\n  {{ start_date.strftime('%a %d %b %Y') }}\n{% else %}\n  {{ start_date.strftime('%a
        %d %b %Y') }} to {{ end_date.strftime('%a %d %b %Y') }}\n{% endif %}"
      message: '{% set preamble = {''calendar.elena_no_school'': ''Elena has no school'',
        ''calendar.eli_no_school'': ''Eli has no school'', ''calendar.public_holidays'':
        ''Public holiday''} %} {{ preamble[trigger.id] }} due to {{ state_attr(trigger.id,''message'')
        }}.'
  - service: notify.mobile_app_aurora
    data:
      title: "{% set start_date = (state_attr(trigger.id,'start_time').split()[0]
        | as_datetime).date() %} {% set end_date = (state_attr(trigger.id,'end_time').split()[0]
        | as_datetime - timedelta(days=1)).date() %} {% if start_date == end_date
        %}\n  {{ start_date.strftime('%a %d %b %Y') }}\n{% else %}\n  {{ start_date.strftime('%a
        %d %b %Y') }} to {{ end_date.strftime('%a %d %b %Y') }}\n{% endif %}"
      message: '{% set preamble = {''calendar.elena_no_school'': ''Elena has no school'',
        ''calendar.eli_no_school'': ''Eli has no school'', ''calendar.public_holidays'':
        ''Public holiday''} %} {{ preamble[trigger.id] }} due to {{ state_attr(trigger.id,''message'')
        }}.'
  mode: parallel
- id: '1677851042764'
  alias: Parents' Room Motion Timeout
  description: Turn off the Parents' Room Lights, Fan, AC and AC Auto Control if no
    motion is detected for timeout period
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor:
      - binary_sensor.parents_room_presence
      number_of_minutes_doors_closed: input_number.motion_timeout_bedrooms
      doors_list:
      - binary_sensor.parents_room_door
      - binary_sensor.master_bathroom_door
      turnoff_entities_list:
      - light.parents_room_lights
      - fan.parents_room_fan
      - climate.parents_room_ac
- id: '1677899246051'
  alias: Parents' Room Motion Fan
  description: Turn on the Parents' Room Fan depending on whether the doors are open
  use_blueprint:
    path: danleongjy/motion_fan.yaml
    input:
      motion_sensor: binary_sensor.parents_room_presence
      fan: fan.parents_room_fan
      fan_auto_control: automation.parents_room_fan_auto_control
      entities_list:
      - light.parents_room_lights
      - fan.parents_room_fan
      - climate.parents_room_ac
      doors_list:
      - binary_sensor.parents_room_door
      - binary_sensor.master_bathroom_door
- id: '1677902645887'
  alias: Parents' Room Motion AC
  description: Control the Parents' Room AC when motion is detected depending on whether
    the doors are open
  use_blueprint:
    path: danleongjy/motion_ac.yaml
    input:
      motion_sensor: binary_sensor.parents_room_presence
      ac: climate.parents_room_ac
      entities_list:
      - light.parents_room_lights
      - fan.parents_room_fan
      - climate.parents_room_ac
- id: '1677905626060'
  alias: Parents' Room Motion Lights
  description: Set the Parents' Room Lights when motion is detected, at least one
    door is open and no devices are on, depending on lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.parents_room_lights
      motion_sensor: binary_sensor.parents_room_presence
      lux_sensor: sensor.parents_room_lux
      entities_list:
      - light.parents_room_lights
      - fan.parents_room_fan
      - climate.parents_room_ac
      doors_list:
      - binary_sensor.parents_room_door
      - binary_sensor.master_bathroom_door
      blackout_hours_start: input_datetime.sleep_hours_start
      blackout_hours_end: input_datetime.sleep_hours_end
- id: '1677909386904'
  alias: Elena's Room Motion AC
  description: Control Elena's Room AC when motion is detected depending on whether
    the doors are open
  use_blueprint:
    path: danleongjy/motion_ac.yaml
    input:
      motion_sensor: binary_sensor.elenas_room_presence
      ac: climate.elenas_room_ac
      entities_list:
      - light.elenas_room_lights
      - fan.elenas_room_fan
      - climate.elenas_room_ac
- id: '1677909480401'
  alias: Elena's Room Motion Fan
  description: Turn on Elena's Room Fan depending on whether the doors are open
  use_blueprint:
    path: danleongjy/motion_fan.yaml
    input:
      motion_sensor: binary_sensor.elenas_room_presence
      fan: fan.elenas_room_fan
      fan_auto_control: automation.elenas_room_fan_auto_control
      entities_list:
      - light.elenas_room_lights
      - fan.elenas_room_fan
      - climate.elenas_room_ac
      doors_list:
      - binary_sensor.elenas_room_door
- id: '1677909588511'
  alias: Elena's Room Motion Lights
  description: Set Elena's Room Lights when motion is detected, at least one door
    is open and no devices are on, depending on lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.elenas_room_lights
      motion_sensor: binary_sensor.elenas_room_presence
      lux_sensor: sensor.elenas_room_lux
      entities_list:
      - light.elenas_room_lights
      - fan.elenas_room_fan
      - climate.elenas_room_ac
      doors_list:
      - binary_sensor.elenas_room_door
      blackout_hours_start: input_datetime.sleep_hours_start
      blackout_hours_end: input_datetime.sleep_hours_end
- id: '1677909662437'
  alias: Elena's Room Motion Timeout
  description: Turn off Elena's Room Lights, Fan, AC and AC Auto Control if no motion
    is detected for timeout period
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor:
      - binary_sensor.elenas_room_presence
      number_of_minutes_doors_closed: input_number.motion_timeout_bedrooms
      doors_list:
      - binary_sensor.elenas_room_door
      turnoff_entities_list:
      - light.elenas_room_lights
      - fan.elenas_room_fan
      - climate.elenas_room_ac
- id: '1677909834890'
  alias: Eli's Room Motion AC
  description: Control Eli's Room AC when motion is detected depending on whether
    the doors are open
  use_blueprint:
    path: danleongjy/motion_ac.yaml
    input:
      motion_sensor: binary_sensor.elis_room_presence
      ac: climate.elis_room_ac
      entities_list:
      - light.elis_room_lights
      - fan.elis_room_fan
      - climate.elis_room_ac
- id: '1677909930165'
  alias: Eli's Room Motion Fan
  description: Turn on Eli's Room Fan depending on whether the doors are open
  use_blueprint:
    path: danleongjy/motion_fan.yaml
    input:
      motion_sensor: binary_sensor.elis_room_presence
      fan: fan.elis_room_fan
      fan_auto_control: automation.elis_room_fan_auto_control
      entities_list:
      - light.elis_room_lights
      - fan.elis_room_fan
      - climate.elis_room_ac
      doors_list:
      - binary_sensor.elis_room_door
- id: '1677910041263'
  alias: Eli's Room Motion Lights
  description: Set Eli's Room Lights when motion is detected, at least one door is
    open and no devices are on, depending on lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.elis_room_lights
      motion_sensor: binary_sensor.elis_room_presence
      lux_sensor: sensor.elis_room_lux
      entities_list:
      - light.elis_room_lights
      - fan.elis_room_fan
      - climate.elis_room_ac
      doors_list:
      - binary_sensor.elis_room_door
      blackout_hours_start: input_datetime.sleep_hours_start
      blackout_hours_end: input_datetime.sleep_hours_end
- id: '1677910111088'
  alias: Eli's Room Motion Timeout
  description: Turn off Eli's Room Lights, Fan, AC and AC Auto Control if no motion
    is detected for timeout period
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor:
      - binary_sensor.elis_room_presence
      number_of_minutes_doors_closed: input_number.motion_timeout_bedrooms
      doors_list:
      - binary_sensor.elis_room_door
      turnoff_entities_list:
      - light.elis_room_lights
      - fan.elis_room_fan
      - climate.elis_room_ac
- id: '1677927683160'
  alias: Kitchen Motion Lights
  description: Set Kitchen Lights when motion is detected, depending on lux level
    and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.kitchen_lights
      motion_sensor: binary_sensor.kitchen_radar_occupancy
      lux_sensor: sensor.kitchen_radar_lux
      lights_debounce: false
- id: '1677927981807'
  alias: Kitchen Motion Timeout
  description: Turn off Kitchen Lights when no motion is detected for a certain amount
    of time.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor:
      - binary_sensor.kitchen_radar_occupancy
      turnoff_entities_list:
      - light.kitchen_lights
- id: '1678321703771'
  alias: Study Walkway Motion Light
  description: Control Study Room Bulb 4 when motion is detected, depending on lux
    level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.study_room_bulb_4_entity
      motion_sensor: binary_sensor.study_walkway_motion
      lux_sensor: sensor.study_walkway_lux
      entities_list:
      - light.study_room_bulb_2_entity
      - light.study_room_bulb_3_entity
      - light.study_room_bulb_1_entity
- id: '1678322492101'
  alias: Study Walkway Motion Timeout
  description: Turn off Study Room Bulb 4 when no motion is detected for a certain
    amount of time.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor:
      - binary_sensor.study_walkway_motion
      entities_list:
      - light.study_room_bulb_2_entity
      - light.study_room_bulb_3_entity
      - light.study_room_bulb_1_entity
      turnoff_entities_list:
      - light.study_room_bulb_4_entity
- id: '1678322978006'
  alias: Playroom Motion Lights
  description: Control the Playroom Lights when motion is detected, depending on lux
    level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.playroom_lights
      motion_sensor: binary_sensor.playroom_presence
      lux_sensor: sensor.playroom_radar_lux
      lights_debounce: false
- id: '1678323081528'
  alias: Playroom Motion Timeout
  description: Turn off Playroom Lights when no motion is detected for a certain amount
    of time.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor:
      - binary_sensor.playroom_presence
      turnoff_entities_list:
      - light.playroom_lights
- id: '1678323204367'
  alias: Yard Motion Light
  description: Control the Yard Light when motion is detected, depending on lux level
    and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.yard_light_entity
      motion_sensor: binary_sensor.yard_motion
      lux_sensor: sensor.playroom_radar_lux
      lights_debounce: false
- id: '1678323253914'
  alias: Yard Motion Timeout
  description: Turn off the Yard Light when no motion is detected for a certain amount
    of time.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor:
      - binary_sensor.yard_motion
      turnoff_entities_list:
      - light.yard_light_entity
- id: '1679619343225'
  alias: Living Room Motion Lights
  description: Control the Living Room Lights when motion is detected, depending on
    lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.living_room_lights
      motion_sensor: binary_sensor.living_room_presence
      lux_sensor: sensor.dining_room_lux
      blackout_hours_start: input_datetime.dim_hours_start
      lights_debounce: false
- id: '1679619511575'
  alias: Living Room Motion Pendant Light
  description: Control the Living Room Pendant Light when motion is detected, depending
    on lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.living_room_pendant_light_entity
      motion_sensor: binary_sensor.living_room_presence
      lux_sensor: sensor.dining_room_lux
      blackout_hours_start: input_datetime.dim_hours_end
      doors_list: []
      lights_debounce: true
- id: '1679619704393'
  alias: Living Room Motion Timeout
  description: Turn off lights, fan and AC in the Living Room when no motion is detected
    for the long timeout.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor: binary_sensor.living_room_presence
      turnoff_entities_list:
      - light.living_room_lights
      - light.living_room_pendant_light_entity
      - fan.living_room_fan
      - switch.christmas_tree_switch
      entities_list:
      - input_boolean.party_mode
- id: '1679619826696'
  alias: Dining Room Motion Lights
  description: Control the Dining Room Lights when motion is detected, depending on
    lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.dining_room_lights
      motion_sensor: binary_sensor.dining_room_presence
      lux_sensor: sensor.dining_room_lux
      blackout_hours_start: input_datetime.dim_hours_start
      lights_debounce: false
- id: '1679619906548'
  alias: Dining Room Motion Pendant Light
  description: Control the Dining Room Pendant Light when motion is detected, depending
    on lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.dining_room_pendant_light_entity
      motion_sensor: binary_sensor.dining_room_presence
      lux_sensor: sensor.dining_room_lux
      doors_list: []
      blackout_hours_start: input_datetime.dim_hours_end
- id: '1679619971749'
  alias: Dining Room Motion Timeout
  description: Turn off lights, fan and AC in the Dining Room when no motion is detected
    for the long timeout.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor:
      - binary_sensor.dining_room_presence
      turnoff_entities_list:
      - light.dining_room_lights
      - light.dining_room_pendant_light_entity
      - fan.dining_room_fan
      entities_list:
      - input_boolean.party_mode
- id: '1679620287237'
  alias: Living Room Motion Fan
  description: Control the Living Room Fan when motion is detected, depending on whether
    the doors are open.
  use_blueprint:
    path: danleongjy/motion_fan.yaml
    input:
      motion_sensor: binary_sensor.living_room_presence
      fan: fan.living_room_fan
      fan_auto_control: automation.living_room_fan_auto_control
      entities_list:
      - light.living_room_lights
      - light.living_room_pendant_light_entity
      - fan.living_room_fan
      - climate.living_room_ac
      doors_list:
      - binary_sensor.elenas_room_door
      - binary_sensor.elis_room_door
      - binary_sensor.junior_bathroom_door
      - binary_sensor.parents_room_door
      - binary_sensor.powder_room_door
      - binary_sensor.main_door
      respect_closed_doors: false
      off_hours_start: input_datetime.sleep_hours_start
- id: '1679620425571'
  alias: Dining Room Motion Fan
  description: Control the Dining Room Fan when motion is detected, depending on whether
    the doors are open.
  use_blueprint:
    path: danleongjy/motion_fan.yaml
    input:
      motion_sensor: binary_sensor.dining_room_presence
      fan: fan.dining_room_fan
      fan_auto_control: automation.dining_room_fan_auto_control
      doors_list:
      - binary_sensor.elenas_room_door
      - binary_sensor.elis_room_door
      - binary_sensor.junior_bathroom_door
      - binary_sensor.powder_room_door
      - binary_sensor.parents_room_door
      - binary_sensor.main_door
      entities_list:
      - light.dining_room_lights
      - light.dining_room_pendant_light_entity
      - climate.dining_room_ac
      - fan.dining_room_fan
      respect_closed_doors: false
      off_hours_start: input_datetime.sleep_hours_start
- id: '1679732114538'
  alias: Dishwasher Auto Control
  description: Turn on or off the dishwasher based on door state and idle time
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.dishwasher_door
    to: 'off'
    id: door_closed
  - platform: template
    value_template: '{{ is_state(''switch.dishwasher'',''on'') and states(''sensor.dishwasher_watts'')
      | float(0) <= 3 }}'
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: idle
  condition: []
  action:
  - if:
    - condition: trigger
      id: door_closed
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.dishwasher
    else:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.dishwasher
  mode: single
- id: '1679819939741'
  alias: Dining Room Motion AC
  description: Control the Dining Room AC when motion is detected, depending on whether
    the doors are closed.
  use_blueprint:
    path: danleongjy/motion_ac.yaml
    input:
      motion_sensor: binary_sensor.dining_room_presence
      ac: climate.dining_room_ac
      entities_list:
      - light.dining_room_lights
      - fan.dining_room_fan
      - climate.dining_room_ac
      - light.dining_room_pendant_light_entity
      respect_closed_doors: false
      off_hours_start: input_datetime.sleep_hours_start
- id: '1679820093028'
  alias: Living Room Motion AC
  description: Control the Living Room AC when motion is detected, depending on whether
    the doors are closed.
  use_blueprint:
    path: danleongjy/motion_ac.yaml
    input:
      motion_sensor: binary_sensor.living_room_presence
      ac: climate.living_room_ac
      entities_list:
      - light.living_room_lights
      - light.living_room_pendant_light_entity
      - fan.living_room_fan
      - climate.living_room_ac
      respect_closed_doors: false
      off_hours_start: input_datetime.sleep_hours_start
- id: '1681034852325'
  alias: Study Room Motion Fan
  description: Control the Study Room Fan when motion is detected
  use_blueprint:
    path: danleongjy/motion_fan.yaml
    input:
      motion_sensor: binary_sensor.study_room_presence
      fan: fan.study_room_fan
      fan_auto_control: automation.study_room_fan_auto_control
      entities_list:
      - fan.study_room_fan
      - climate.study_room_ac
      - light.study_room_bulb_2_entity
      - light.study_room_bulb_3_entity
      doors_list:
      - binary_sensor.elenas_room_door
      - binary_sensor.elis_room_door
      - binary_sensor.junior_bathroom_door
      - binary_sensor.parents_room_door
      - binary_sensor.powder_room_door
      - binary_sensor.main_door
      respect_closed_doors: false
- id: '1681731968251'
  alias: Hallway Motion Lights
  description: Control the Hallway Lights when motion is detected, depending on lux
    level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.hallway_lights
      motion_sensor: binary_sensor.hallway_motion
      lux_sensor: sensor.hallway_lux
      lights_debounce: false
      blackout_hours_start: input_datetime.sleep_hours_start
      blackout_hours_end: input_datetime.sleep_hours_end
- id: '1681735193653'
  alias: Party Mode
  description: Set recommended scenes in public areas and prevent lights dimming when
    Party Mode is on
  trigger:
  - platform: state
    entity_id:
    - input_boolean.party_mode
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.party_mode
      state: 'on'
    then:
    - data:
        time: '{{ states(''input_datetime.dim_hours_end'') }}'
      target:
        entity_id: input_datetime.dim_hours_start
      action: input_datetime.set_datetime
    - delay: 1
    - repeat:
        for_each:
        - dining_room
        - living_room
        - study_room
        sequence:
        - data:
            room: '{{ [repeat.item] }}'
          action: script.set_recommended_scene
        - delay: 1
    - action: homeassistant.turn_off
      metadata: {}
      data: {}
      target:
        entity_id:
        - automation.kitchen_voice_assistant_listening_for_wake_word
        - automation.study_room_voice_assistant_listening_for_wake_word
        - automation.living_room_voice_assistant_listening_for_wake_word
        - switch.kitchen_core_use_wake_word
        - switch.study_room_voice_assistant_use_wake_word
    - action: switch.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: switch.living_room_voice_assistant_mute
    else:
    - action: homeassistant.turn_on
      target:
        entity_id:
        - automation.kitchen_voice_assistant_listening_for_wake_word
        - automation.study_room_voice_assistant_listening_for_wake_word
        - automation.living_room_voice_assistant_listening_for_wake_word
      data: {}
    - data:
        time: '{{ states(''input_datetime.wind_down'') }}'
      target:
        entity_id: input_datetime.dim_hours_start
      action: input_datetime.set_datetime
    - delay: 1
    - repeat:
        for_each:
        - dining_room
        - living_room
        - study_room
        sequence:
        - data:
            room: '{{ [repeat.item] }}'
          action: script.set_recommended_scene
        - delay: 1
    - if:
      - condition: state
        entity_id: binary_sensor.kitchen_radar_occupancy
        state: 'on'
      then:
      - action: switch.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: switch.kitchen_core_use_wake_word
    - if:
      - condition: state
        entity_id: binary_sensor.study_room_presence
        state: 'on'
      then:
      - action: switch.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: switch.study_room_voice_assistant_use_wake_word
    - if:
      - condition: state
        entity_id: binary_sensor.living_room_presence
        state: 'on'
      then:
      - action: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: switch.living_room_voice_assistant_mute
  mode: single
- id: '1681736538604'
  alias: Hallway Motion Timeout
  description: Turn off Hallway Lights when no motion is detected for a certain amount
    of time.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor:
      - binary_sensor.hallway_motion
      number_of_minutes: input_number.motion_timeout_walking_areas
      turnoff_entities_list:
      - light.hallway_lights
- id: '1681781855944'
  alias: Study Room Motion AC
  description: Control the Study Room AC when motion is detected, depending on whether
    the doors are closed.
  use_blueprint:
    path: danleongjy/motion_ac.yaml
    input:
      motion_sensor: binary_sensor.study_room_presence
      ac: climate.study_room_ac
      entities_list:
      - fan.study_room_fan
      - climate.study_room_ac
      - light.study_room_bulb_2_entity
      - light.study_room_bulb_3_entity
      respect_closed_doors: false
- id: '1681782121211'
  alias: Study Room Motion Lights
  description: Control the Study Room Lights when motion is detected, depending on
    lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.study_room_lights
      motion_sensor: binary_sensor.study_room_presence
      lux_sensor: sensor.study_walkway_lux
      lights_debounce: false
      entities_list:
      - light.study_room_bulb_3_entity
- id: '1681782270863'
  alias: Study Room Motion Timeout
  description: Turn off Study Room Lights, Fan and AC when no motion is detected for
    a certain amount of time.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor:
      - binary_sensor.study_room_presence
      entities_list:
      - input_boolean.party_mode
      turnoff_entities_list:
      - light.study_room_lights
      - fan.study_room_fan
      - climate.study_room_ac
- id: '1683854614010'
  alias: Parents' Headboard Controller
  description: Set recommended scene in Parents' Room, adjust Parents' Room Lights
    and provide a nap mode.
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 685b4e90d0ee941d65313b1c9118e6a7
      helper_last_controller_event: input_text.zz_parents_headboard_controller_last_event
      action_button_up_short:
      - service: script.set_recommended_scene
        data:
          room:
          - parents_room
      action_button_up_long:
      - service: light.turn_on
        data:
          brightness_step_pct: '{{ states(''input_number.light_brightness_change_step'')
            | int(0) }}'
        target:
          entity_id: light.parents_room_lights
      action_button_up_double:
      - service: automation.trigger
        data:
          skip_condition: true
        target:
          entity_id:
          - automation.parents_room_motion_fan
          - automation.parents_room_motion_ac
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.parents_room_lights
      - service: cover.close_cover
        data: {}
        target:
          entity_id: cover.master_bathroom_blind
      - service: automation.turn_on
        data: {}
        target:
          entity_id:
          - automation.parents_room_fan_auto_control
      - service: light.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: light.parents_room_core_display_backlight
      action_button_down_short:
      - service: automation.trigger
        data:
          skip_condition: true
        target:
          entity_id:
          - automation.master_bathroom_blind_auto_control
          - automation.parents_room_motion_timeout
      action_button_down_long:
      - service: light.turn_on
        data:
          brightness_step_pct: -{{ states('input_number.light_brightness_change_step')
            | int(0) }}
        target:
          entity_id: light.parents_room_lights
      button_up_double_press: true
      helper_double_press_delay: 700
      action_button_down_double:
      - service: automation.trigger
        data:
          skip_condition: true
        target:
          entity_id:
          - automation.junior_bathroom_motion_timeout
          - automation.powder_room_motion_timeout
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - if:
        - condition: state
          entity_id: binary_sensor.elenas_room_door
          state: 'on'
        then:
        - service: automation.trigger
          data:
            skip_condition: true
          target:
            entity_id: automation.elenas_room_motion_timeout
      - if:
        - condition: state
          entity_id: binary_sensor.elis_room_door
          state: 'on'
        then:
        - service: automation.trigger
          data:
            skip_condition: true
          target:
            entity_id: automation.elis_room_motion_timeout
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - service: automation.trigger
        data:
          skip_condition: true
        target:
          entity_id:
          - automation.yard_motion_timeout
          - automation.playroom_motion_timeout
          - automation.kitchen_motion_timeout
          - automation.hallway_motion_timeout
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - service: automation.trigger
        data:
          skip_condition: true
        target:
          entity_id:
          - automation.dining_room_motion_timeout
          - automation.living_room_motion_timeout
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - service: automation.trigger
        data:
          skip_condition: true
        target:
          entity_id:
          - automation.master_bathroom_motion_timeout
      - if:
        - condition: state
          entity_id: binary_sensor.study_room_radar_occupancy
          state: 'off'
        - condition: state
          entity_id: binary_sensor.study_room_ethernet_connection
          state: 'off'
        then:
        - service: automation.trigger
          metadata: {}
          data:
            skip_condition: true
          target:
            entity_id: automation.study_room_motion_timeout
      button_down_double_press: true
      button_up_long_loop: true
      button_down_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_max_loop_repeats: 50
- id: '1684242432236'
  alias: Parents' Room Fan Auto Control
  description: Set the Parents' Room Fan speed and direction based on temperature
  use_blueprint:
    path: danleongjy/fan_auto_control.yaml
    input:
      fan: fan.parents_room_fan
      temp_sensor: sensor.parents_room_core_temperature
      high_temp: 29.2
      low_temp: 28.5
- id: '1684246531388'
  alias: Elena's Room Fan Auto Control
  description: Set Elena's Room Fan speed and direction based on temperature
  use_blueprint:
    path: danleongjy/fan_auto_control.yaml
    input:
      temp_sensor: sensor.elenas_room_core_temperature
      high_temp: 29
      fan: fan.elenas_room_fan
- id: '1684246574094'
  alias: Eli's Room Fan Auto Control
  description: Set the Eli's Room Fan speed and direction based on temperature
  use_blueprint:
    path: danleongjy/fan_auto_control.yaml
    input:
      fan: fan.elis_room_fan
      temp_sensor: sensor.elis_room_core_temperature
      high_temp: 29
- id: '1684314607182'
  alias: Dining Room Fan Auto Control
  description: Set the Dining Room Fan speed and direction based on temperature
  use_blueprint:
    path: danleongjy/fan_auto_control.yaml
    input:
      fan: fan.dining_room_fan
      temp_sensor: sensor.dining_room_temperature
      low_speed: input_number.sitting_rooms_fan_speed_when_cool
      high_speed: input_number.sitting_rooms_fan_speed_when_warm
      low_temp: 28
      high_temp: 28.5
- id: '1684314664733'
  alias: Living Room Fan Auto Control
  description: Set the Living Room Fan speed and direction based on temperature
  use_blueprint:
    path: danleongjy/fan_auto_control.yaml
    input:
      fan: fan.living_room_fan
      temp_sensor: sensor.dining_room_temperature
      low_speed: input_number.sitting_rooms_fan_speed_when_cool
      high_speed: input_number.sitting_rooms_fan_speed_when_warm
- id: '1684314715221'
  alias: Study Room Fan Auto Control
  description: Set the Study Room Fan speed and direction based on temperature
  use_blueprint:
    path: danleongjy/fan_auto_control.yaml
    input:
      fan: fan.study_room_fan
      temp_sensor: sensor.study_room_temperature
      low_speed: input_number.sitting_rooms_fan_speed_when_cool
      high_speed: input_number.sitting_rooms_fan_speed_when_warm
- id: '1685098214703'
  alias: Notify When Kitchen Appliances On while Away
  description: Send a notification if the Rice Cooker or Stove is on when Away Mode
    is active.
  trigger:
  - platform: state
    entity_id:
    - input_boolean.away_mode
    - switch.stove_main_power
    - binary_sensor.rice_cooker
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.away_mode
      state: 'on'
    - condition: or
      conditions:
      - condition: state
        entity_id: switch.stove_main_power
        state: 'on'
      - condition: state
        entity_id: binary_sensor.rice_cooker
        state: 'on'
    then:
    - service: notify.mobile_app_aurora
      data:
        title: Turn off kitchen appliances?
        data:
          tag: appliances_on
        message: "{% if is_state('binary_sensor.rice_cooker', 'on')  and is_state('switch.stove_main_power',
          'on') %}\n  Rice cooker and stove are on.\n{% elif is_state('binary_sensor.rice_cooker',
          'on') %}\n  Rice cooker is on.\n{% else %}\n  Stove is on.\n{% endif %}"
    - service: notify.mobile_app_grace
      data:
        title: Turn off kitchen appliances?
        data:
          tag: appliances_on
        message: "{% if is_state('binary_sensor.rice_cooker', 'on')  and is_state('switch.stove_main_power',
          'on') %}\n  Rice cooker and stove are on.\n{% elif is_state('binary_sensor.rice_cooker',
          'on') %}\n  Rice cooker is on.\n{% else %}\n  Stove is on.\n{% endif %}"
    else:
    - service: notify.mobile_app_aurora
      data:
        message: clear_notification
        data:
          tag: appliances_on
    - service: notify.mobile_app_grace
      data:
        message: clear_notification
        data:
          tag: appliances_on
  mode: single
  max_exceeded: silent
- id: '1659256881015'
  alias: Kitchen Blind Controller
  description: Control the Kitchen Blind
  use_blueprint:
    path: EPMatt/ikea_e1766.yaml
    input:
      integration: ZHA
      controller_device: 63ca2b52933039d3f01175d8c06dd220
      helper_last_controller_event: input_text.zz_kitchen_blind_controller_last_event
      action_button_up_short:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.kitchen_blind
          command: cover_open
      action_button_down_short:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.kitchen_blind
          command: cover_close
      action_button_up_double:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.kitchen_blind
          command: cover_auto_control
      action_button_down_double:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.kitchen_blind
          command: cover_manual_control
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 500
- id: '1659777667257'
  alias: Kitchen Blind Auto Control
  description: Close the Kitchen Blind if raining, in the mornings or AC is on
  trigger:
  - platform: template
    value_template: "{{ (states('sensor.local_rainfall') | int(0) > 1)\n   or ('Thunder'
      in states('sensor.local_two_hour_forecast'))\n   or ('Rain' in states('sensor.local_two_hour_forecast'))\n
      \  or ('Wind' in states('sensor.local_two_hour_forecast')) }}"
  - platform: state
    entity_id:
    - climate.living_room_ac
    to: cool
  - platform: state
    entity_id:
    - switch.stove_main_power
    - switch.rice_cooker
    not_from:
    - unavailable
    - unknown
    not_to:
    - unavailable
    - unknown
  - platform: state
    entity_id:
    - sensor.kitchen_radar_lux
  - platform: state
    entity_id:
    - binary_sensor.kitchen_radar_occupancy
    to: 'on'
  - platform: state
    entity_id: sensor.sun_solar_elevation
  - platform: state
    entity_id: sensor.sun_solar_azimuth
  - platform: state
    entity_id:
    - sun.sun
    attribute: rising
    to: false
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: template
          value_template: "{{ (states('sensor.local_rainfall') | int(0) > 1)\n   or
            ('Thunder' in states('sensor.local_two_hour_forecast'))\n   or ('Rain'
            in states('sensor.local_two_hour_forecast'))\n   or ('Showers' in states('sensor.local_two_hour_forecast'))\n
            \  or ('Wind' in states('sensor.local_two_hour_forecast')) }}"
        - condition: state
          entity_id: climate.living_room_ac
          state: cool
      - condition: not
        conditions:
        - condition: state
          entity_id:
          - switch.stove_main_power
          - switch.rice_cooker
          state: 'on'
      sequence:
      - repeat:
          sequence:
          - data: {}
            target:
              entity_id: cover.kitchen_blind
            action: cover.close_cover
          - delay: '{{ states(''input_number.resync_delay'') | int * 60 }}'
          while:
          - condition: not
            conditions:
            - condition: state
              entity_id: cover.kitchen_blind
              state: closed
    - conditions:
      - condition: numeric_state
        entity_id: sensor.sun_solar_elevation
        above: 1
        below: 65
      - condition: numeric_state
        entity_id: sensor.sun_solar_azimuth
        below: 105
        above: 45
      sequence:
      - condition: template
        value_template: '{{ now() - states[''cover.kitchen_blind''].last_changed >
          timedelta(minutes = states(''input_number.blinds_auto_control_debounce'')
          | int(0)) }}'
      - repeat:
          sequence:
          - data:
              position: 15
            target:
              entity_id: cover.kitchen_blind
            action: cover.set_cover_position
          - delay: '{{ states(''input_number.resync_delay'') | int * 60 }}'
          while:
          - condition: not
            conditions:
            - condition: state
              entity_id: cover.kitchen_blind
              attribute: current_position
              state: 15
    default:
    - condition: and
      conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: sun.sun
          attribute: rising
          state: false
          enabled: true
        - condition: numeric_state
          entity_id: sun.sun
          above: '65'
          attribute: elevation
          enabled: true
        - condition: state
          entity_id: switch.stove_main_power
          state: 'on'
        - condition: numeric_state
          entity_id: sensor.kitchen_radar_lux
          below: input_number.minimum_lux
        - condition: state
          entity_id: switch.rice_cooker
          state: 'on'
        - condition: numeric_state
          entity_id: sensor.sun_solar_azimuth
          above: 105
        - condition: numeric_state
          entity_id: sensor.sun_solar_azimuth
          below: 45
      - condition: not
        conditions:
        - condition: template
          value_template: "{{ (states('sensor.local_rainfall') | int(0) > 1)\n   or
            ('Thunder' in states('sensor.local_two_hour_forecast'))\n   or ('Rain'
            in states('sensor.local_two_hour_forecast'))\n   or ('Showers' in states('sensor.local_two_hour_forecast'))\n
            \  or ('Wind' in states('sensor.local_two_hour_forecast')) }}"
      - condition: not
        conditions:
        - condition: template
          value_template: "{{ states('sun.sun') == 'above_horizon'\n   and state_attr('sun.sun',
            'elevation') <= 60\n   and state_attr('sun.sun', 'azimuth') >= 45\n   and
            state_attr('sun.sun', 'azimuth') <= 105 }}"
    - condition: template
      value_template: '{{ now() - states[''cover.kitchen_blind''].last_changed > timedelta(minutes
        = states(''input_number.blinds_auto_control_debounce'') | int(0)) }}'
    - repeat:
        sequence:
        - data: {}
          target:
            entity_id: cover.kitchen_blind
          action: cover.open_cover
        - delay: '{{ states(''input_number.resync_delay'') | int * 60 }}'
        while:
        - condition: not
          conditions:
          - condition: state
            entity_id: cover.kitchen_blind
            state: 100
            attribute: current_position
  mode: single
  max_exceeded: silent
- id: '1690715091749'
  alias: Grace's Next Alarm Old
  description: Set the date and time for Grace's next alarm
  triggers:
  - alias: When Grace's Next Alarm has fired
    value_template: '{{ now() > as_datetime(states(''input_datetime.graces_next_alarm'')).astimezone(now().tzinfo)
      + timedelta(minutes = 6) }}'
    id: alarm_fired
    trigger: template
  - entity_id:
    - calendar.daniel_work_days
    - calendar.eli_school_days
    - calendar.elena_school_days
    id: calendar_changed
    trigger: state
  - entity_id:
    - input_datetime.eca_day_alarm
    - input_datetime.elenas_school_day_alarm
    - input_datetime.elis_school_day_alarm
    - input_datetime.graces_work_day_alarm
    id: childrens_alarms_changed
    trigger: state
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - alarm_fired
    then:
    - data:
        start_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
          = 21, minute = 30) - timedelta(days = 1) }}'
        duration:
          hours: 2
          minutes: 30
      target:
        entity_id: calendar.daniel_work_days
      response_variable: late_work_night_yesterday
      alias: List Daniel's late work nights occurring the day before Grace's Next
        Alarm
      action: calendar.get_events
    - data:
        start_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
          = 9, minute = 30) }}'
        end_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
          = 12, minute = 0) + timedelta(days = 1) }}'
      target:
        entity_id: calendar.grace_work_days
      response_variable: work_days
      alias: List Grace's morning work days occurring on Grace's Next Alarm
      action: calendar.get_events
    - data:
        start_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
          = 0, minute = 0) }}'
        end_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
          = 0, minute = 0) + timedelta(days = 1) }}'
      target:
        entity_id:
        - calendar.eli_school_days
        - calendar.elena_school_days
      response_variable: school_days
      alias: List school days occurring on Grace's Next Alarm
      action: calendar.get_events
    - repeat:
        until:
        - condition: template
          value_template: '{{ now().date() < as_datetime(states(''input_datetime.graces_next_alarm'')).date()
            }}'
          alias: Alarm day is in the future
        - or:
          - condition: template
            value_template: '{{ work_days[''calendar.grace_work_days''].events | length
              > 0 }}'
            alias: Grace has a work day
          - and:
            - or:
              - condition: template
                value_template: '{{ late_work_night_yesterday[''calendar.daniel_work_days''].events
                  | length == 0 }}'
                alias: Daniel didn't have a late work night yesterday
              - condition: template
                value_template: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).weekday()
                  != 4 }}'
                alias: Alarm is not on a Friday
            - condition: template
              value_template: '{{ school_days[''calendar.elena_school_days''].events
                | length > 0 }}'
              alias: Elena has a school day
          - and:
            - or:
              - condition: template
                value_template: '{{ late_work_night_yesterday[''calendar.daniel_work_days''].events
                  | length > 0 }}'
                alias: Daniel had a late work night yesterday
              - condition: template
                value_template: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).weekday()
                  == 4 }}'
                alias: Alarm is on a Friday
            - condition: template
              value_template: '{{ school_days[''calendar.eli_school_days''].events
                | length > 0 }}'
              alias: Eli has a school day
        sequence:
        - data:
            date: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).date()
              + timedelta(days = 1) }}'
          target:
            entity_id: input_datetime.graces_next_alarm
          alias: Increment alarm by 1 day
          action: input_datetime.set_datetime
        - data:
            start_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
              = 21, minute = 30) - timedelta(days = 1) }}'
            duration:
              hours: 2
              minutes: 30
          target:
            entity_id: calendar.daniel_work_days
          response_variable: late_work_night_yesterday
          alias: List Daniel's late work nights occurring the day before Daniel's
            Next Alarm
          action: calendar.get_events
        - data:
            start_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
              = 9, minute = 30) }}'
            end_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
              = 12, minute = 0) }}'
          target:
            entity_id: calendar.grace_work_days
          response_variable: work_days
          alias: List Grace's morning work days occurring on Grace's Next Alarm
          action: calendar.get_events
        - data:
            start_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
              = 0, minute = 0) }}'
            end_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
              = 0, minute = 0) + timedelta(days = 1) }}'
          target:
            entity_id:
            - calendar.eli_school_days
            - calendar.elena_school_days
          response_variable: school_days
          alias: List school days occurring on Grace's Next Alarm
          action: calendar.get_events
  - data:
      start_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
        = 21, minute = 30) - timedelta(days = 1) }}'
      duration:
        hours: 2
        minutes: 30
    target:
      entity_id: calendar.daniel_work_days
    response_variable: late_work_night_yesterday
    alias: List Daniel's late work nights occurring the day before Grace's Next Alarm
    action: calendar.get_events
  - data:
      start_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
        = 0, minute = 0) }}'
      end_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
        = 0, minute = 0) + timedelta(days = 1) }}'
    target:
      entity_id:
      - calendar.eli_school_days
      - calendar.elena_school_days
    response_variable: school_days
    alias: List school days occurring on Grace's Next Alarm
    action: calendar.get_events
  - choose:
    - conditions:
      - alias: If Daniel had a late work night
        condition: template
        value_template: '{{ late_work_night_yesterday[''calendar.daniel_work_days''].events
          | length > 0 }}'
      - alias: If Eli has school
        condition: template
        value_template: '{{ school_days[''calendar.eli_school_days''].events | length
          > 0 }}'
      sequence:
      - if:
        - condition: template
          value_template: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).weekday()
            < 5 }}'
          alias: Alarm is on a weekday
        then:
        - data:
            time: '{{ states(''input_datetime.elis_school_day_alarm'') }}'
          target:
            entity_id: input_datetime.graces_next_alarm
          alias: Set Grace's Next Alarm to Eli's School Day Alarm
          action: input_datetime.set_datetime
        - data:
            datetime: '{{ as_datetime(states(''input_datetime.graces_next_alarm''))
              - timedelta(minutes = 5) }}'
          target:
            entity_id: input_datetime.graces_next_alarm
          alias: Set Grace's Next Alarm 5min before Eli's alarm
          action: input_datetime.set_datetime
        else:
        - data:
            time: '{{ states(''input_datetime.eca_day_alarm'') }}'
          target:
            entity_id: input_datetime.graces_next_alarm
          alias: Set Grace's Next Alarm to ECA Day Alarm
          action: input_datetime.set_datetime
        - data:
            datetime: '{{ as_datetime(states(''input_datetime.graces_next_alarm''))
              - timedelta(minutes = 10) }}'
          target:
            entity_id: input_datetime.graces_next_alarm
          alias: Set Grace's Next Alarm 10min before kids' alarm
          action: input_datetime.set_datetime
    - conditions:
      - alias: If Daniel did not have a late work night
        condition: template
        value_template: '{{ late_work_night_yesterday[''calendar.daniel_work_days''].events
          | length == 0 }}'
      - alias: If Elena has school
        condition: template
        value_template: '{{ school_days[''calendar.elena_school_days''].events | length
          > 0 }}'
      sequence:
      - if:
        - condition: template
          value_template: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).weekday()
            < 5 }}'
          alias: Alarm is on a weekday
        then:
        - data:
            time: '{{ states(''input_datetime.elenas_school_day_alarm'') }}'
          target:
            entity_id: input_datetime.graces_next_alarm
          alias: Set Grace's Next Alarm to Elena's School Day Alarm
          action: input_datetime.set_datetime
        - data:
            datetime: '{{ as_datetime(states(''input_datetime.graces_next_alarm''))
              - timedelta(minutes = 10) }}'
          target:
            entity_id: input_datetime.graces_next_alarm
          alias: Set Grace's Next Alarm 10min before Elena's alarm
          action: input_datetime.set_datetime
        else:
        - data:
            time: '{{ states(''input_datetime.eca_day_alarm'') }}'
          target:
            entity_id: input_datetime.graces_next_alarm
          alias: Set Grace's Next Alarm to ECA Day Alarm
          action: input_datetime.set_datetime
        - data:
            datetime: '{{ as_datetime(states(''input_datetime.graces_next_alarm''))
              - timedelta(minutes = 10) }}'
          target:
            entity_id: input_datetime.graces_next_alarm
          alias: Set Grace's Next Alarm 10min before kids' alarm
          action: input_datetime.set_datetime
    default:
    - data:
        time: '{{ states(''input_datetime.graces_work_day_alarm'') }}'
      target:
        entity_id: input_datetime.graces_next_alarm
      alias: Set Grace's Next Alarm to Grace's Work Day Alarm
      action: input_datetime.set_datetime
  mode: single
  max_exceeded: silent
- id: '1690717352582'
  alias: Daniel's Alarm
  description: Wake up Daniel at his next alarm
  triggers:
  - at: input_datetime.daniels_next_alarm
    trigger: time
  conditions: []
  actions:
  - if:
    - condition: state
      entity_id: input_boolean.parents_room_next_alarm_dismissed
      state: 'off'
    then:
    - target:
        entity_id: light.parents_room_core_display_backlight
      data:
        brightness_pct: '{{ states(''input_number.morning_light_brightness'') | int
          if is_state(''sun.sun'',''below_horizon'') else 100 }}'
      action: light.turn_on
    - data:
        option: Eli's Song
      target:
        entity_id: select.parents_room_core_ringtone
      action: select.select_option
    - action: number.set_value
      target:
        entity_id: number.parents_room_core_speaker_volume
      data:
        value: 10
    - data: {}
      target:
        entity_id: button.parents_room_core_play_ringtone
      action: button.press
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - if:
    - condition: state
      entity_id: input_boolean.parents_room_next_alarm_dismissed
      state: 'off'
    then:
    - condition: state
      entity_id: sensor.aurora_battery_state
      state:
      - charging
      - full
      enabled: true
    - data:
        bedroom: parents_room
        ringtone: Eli's Song
      action: script.alarm_lights
  - data: {}
    target:
      entity_id: input_boolean.parents_room_next_alarm_dismissed
    action: input_boolean.turn_off
  mode: single
- id: '1690718460853'
  alias: Notify When Parents' Room Next Alarm Upcoming
  description: Send an actionable notification when Parents' Room Next Alarm is imminent,
    allowing dismissal of the alarm.
  trigger:
  - platform: state
    entity_id:
    - sensor.next_alarm_timings
    attribute: parents_room_next_alarm_dismissable
    from: false
    to: true
  condition: []
  action:
  - service: notify.mobile_app_aurora
    data:
      message: Upcoming alarm at {{ state_attr('sensor.next_alarm_timings','parents_room').split('
        ')[1][:5] }}
      data:
        clickAction: /lovelace/settings-sleep
        actions:
        - action: dismiss
          title: Dismiss Alarm
        - action: continue
          title: Continue Alarm
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: dismiss
      context:
        user_id:
        - ad2bcce775894550affb6dfef93a2a36
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: continue
      context:
        user_id:
        - ad2bcce775894550affb6dfef93a2a36
    timeout:
      hours: 0
      minutes: 15
      seconds: 0
      milliseconds: 0
    continue_on_timeout: false
  - if:
    - condition: template
      value_template: '{{ wait.trigger.event.data.action == ''dismiss'' }}'
    then:
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.parents_room_next_alarm_dismissed
    else:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.parents_room_next_alarm_dismissed
  mode: single
- id: '1690765502879'
  alias: Daniel's Next Alarm Old
  description: Set the date and time for Daniel's next alarm
  triggers:
  - alias: When Daniel's Next Alarm has fired
    value_template: '{{ now() > as_datetime(states(''input_datetime.daniels_next_alarm'')).astimezone(now().tzinfo)
      + timedelta(minutes = 1) }}'
    id: alarm_fired
    trigger: template
  - entity_id:
    - calendar.daniel_work_days
    - calendar.elena_school_days
    - calendar.eli_school_days
    id: calendar_changed
    trigger: state
  - entity_id:
    - input_datetime.eca_day_alarm
    - input_datetime.elenas_school_day_alarm
    - input_datetime.elis_school_day_alarm
    - input_datetime.daniels_work_day_alarm
    id: childrens_alarms_changed
    trigger: state
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - alarm_fired
    then:
    - data:
        start_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
          = 21, minute = 30) - timedelta(days = 1) }}'
        duration:
          hours: 2
          minutes: 30
      target:
        entity_id: calendar.daniel_work_days
      response_variable: late_work_night_yesterday
      alias: List late work nights occurring the day before Daniel's Next Alarm
      action: calendar.get_events
    - data:
        start_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
          = 9, minute = 30) }}'
        end_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
          = 12, minute = 0) }}'
      target:
        entity_id: calendar.daniel_work_days
      response_variable: work_days
      alias: List Daniel's morning work days occurring on Daniel's Next Alarm
      action: calendar.get_events
    - data:
        start_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
          = 0, minute = 0) }}'
        end_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
          = 0, minute = 0) + timedelta(days = 1) }}'
      target:
        entity_id:
        - calendar.eli_school_days
        - calendar.elena_school_days
      response_variable: school_days
      alias: List school days occurring on Daniel's Next Alarm
      action: calendar.get_events
    - repeat:
        until:
        - condition: template
          value_template: '{{ now().date() < as_datetime(states(''input_datetime.daniels_next_alarm'')).date()
            }}'
          alias: Alarm day is in the future
        - or:
          - condition: template
            value_template: '{{ work_days[''calendar.daniel_work_days''].events |
              length > 0 }}'
            alias: Daniel has a work day
          - and:
            - or:
              - condition: template
                value_template: '{{ late_work_night_yesterday[''calendar.daniel_work_days''].events
                  | length == 0 }}'
                alias: Daniel didn't have a late work night yesterday
              - condition: template
                value_template: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).weekday()
                  != 4 }}'
                alias: Alarm is not on a Friday
            - condition: template
              value_template: '{{ school_days[''calendar.eli_school_days''].events
                | length > 0 }}'
              alias: Eli has a school day
          - and:
            - or:
              - condition: template
                value_template: '{{ late_work_night_yesterday[''calendar.daniel_work_days''].events
                  | length > 0 }}'
                alias: Daniel had a late work night yesterday
              - condition: template
                value_template: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).weekday()
                  == 4 }}'
                alias: Alarm is on a Friday
            - condition: template
              value_template: '{{ school_days[''calendar.elena_school_days''].events
                | length > 0 }}'
              alias: Elena has a school day
        sequence:
        - data:
            date: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).date()
              + timedelta(days = 1) }}'
          target:
            entity_id: input_datetime.daniels_next_alarm
          alias: Increment alarm by 1 day
          action: input_datetime.set_datetime
        - data:
            start_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
              = 21, minute = 30) - timedelta(days = 1) }}'
            duration:
              hours: 2
              minutes: 30
          target:
            entity_id: calendar.daniel_work_days
          response_variable: late_work_night_yesterday
          alias: List late work nights occurring the day before Daniel's Next Alarm
          action: calendar.get_events
        - data:
            start_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
              = 9, minute = 30) }}'
            end_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
              = 12, minute = 0) }}'
          target:
            entity_id: calendar.daniel_work_days
          response_variable: work_days
          alias: List Daniel's morning work days occurring on Daniel's Next Alarm
          action: calendar.get_events
        - data:
            start_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
              = 0, minute = 0) }}'
            end_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
              = 0, minute = 0) + timedelta(days = 1) }}'
          target:
            entity_id:
            - calendar.eli_school_days
            - calendar.elena_school_days
          response_variable: school_days
          alias: List school days occurring on Daniel's Next Alarm
          action: calendar.get_events
  - data:
      start_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
        = 21, minute = 30) - timedelta(days = 1) }}'
      duration:
        hours: 2
        minutes: 30
    target:
      entity_id: calendar.daniel_work_days
    response_variable: late_work_night_yesterday
    alias: List late work nights occurring the day before Daniel's Next Alarm
    action: calendar.get_events
  - data:
      start_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
        = 0, minute = 0) }}'
      end_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
        = 0, minute = 0) + timedelta(days = 1) }}'
    target:
      entity_id:
      - calendar.eli_school_days
      - calendar.elena_school_days
    response_variable: school_days
    alias: List school days occurring on Daniel's Next Alarm
    action: calendar.get_events
  - choose:
    - conditions:
      - alias: If Daniel had a late work night
        condition: template
        value_template: '{{ late_work_night_yesterday[''calendar.daniel_work_days''].events
          | length > 0 }}'
      - alias: If Elena has school
        condition: template
        value_template: '{{ school_days[''calendar.elena_school_days''].events | length
          > 0 }}'
      sequence:
      - if:
        - condition: template
          value_template: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).weekday()
            < 5 }}'
          alias: Alarm is on a weekday
        then:
        - data:
            time: '{{ states(''input_datetime.elenas_school_day_alarm'') }}'
          target:
            entity_id: input_datetime.daniels_next_alarm
          alias: Set Daniel's Next Alarm to Elena's School Day Alarm
          action: input_datetime.set_datetime
        - data:
            datetime: '{{ as_datetime(states(''input_datetime.daniels_next_alarm''))
              - timedelta(minutes = 10) }}'
          target:
            entity_id: input_datetime.daniels_next_alarm
          alias: Set Daniel's Next Alarm 10min before Elena's alarm
          action: input_datetime.set_datetime
        else:
        - data:
            time: '{{ states(''input_datetime.eca_day_alarm'') }}'
          target:
            entity_id: input_datetime.daniels_next_alarm
          alias: Set Daniel's Next Alarm to ECA Day Alarm
          action: input_datetime.set_datetime
        - data:
            datetime: '{{ as_datetime(states(''input_datetime.daniels_next_alarm''))
              - timedelta(minutes = 10) }}'
          target:
            entity_id: input_datetime.daniels_next_alarm
          alias: Set Daniel's Next Alarm 10min before kids' alarm
          action: input_datetime.set_datetime
    - conditions:
      - alias: If Daniel did not have a late work night
        condition: template
        value_template: '{{ late_work_night_yesterday[''calendar.daniel_work_days''].events
          | length == 0 }}'
      - alias: If Eli has school
        condition: template
        value_template: '{{ school_days[''calendar.eli_school_days''].events | length
          > 0 }}'
      sequence:
      - if:
        - condition: template
          value_template: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).weekday()
            < 5 }}'
          alias: Alarm is on a weekday
        then:
        - data:
            time: '{{ states(''input_datetime.elis_school_day_alarm'') }}'
          target:
            entity_id: input_datetime.daniels_next_alarm
          alias: Set Daniel's Next Alarm to Eli's School Day Alarm
          action: input_datetime.set_datetime
        - data:
            datetime: '{{ as_datetime(states(''input_datetime.daniels_next_alarm''))
              - timedelta(minutes = 5) }}'
          target:
            entity_id: input_datetime.daniels_next_alarm
          alias: Set Daniel's Next Alarm 5min before Eli's alarm
          action: input_datetime.set_datetime
        else:
        - data:
            time: '{{ states(''input_datetime.eca_day_alarm'') }}'
          target:
            entity_id: input_datetime.daniels_next_alarm
          alias: Set Daniel's Next Alarm to ECA Day Alarm
          action: input_datetime.set_datetime
        - data:
            datetime: '{{ as_datetime(states(''input_datetime.daniels_next_alarm''))
              - timedelta(minutes = 10) }}'
          target:
            entity_id: input_datetime.daniels_next_alarm
          alias: Set Daniel's Next Alarm 10min before kids' alarm
          action: input_datetime.set_datetime
    default:
    - data:
        time: '{{ states(''input_datetime.daniels_work_day_alarm'') }}'
      target:
        entity_id: input_datetime.daniels_next_alarm
      alias: Set Daniel's Next Alarm to Daniel's Work Day Alarm
      action: input_datetime.set_datetime
  mode: single
  max_exceeded: silent
- id: '1690814237442'
  alias: Eli's Next Alarm
  description: Set Eli's Next Alarm to the next day where he has school
  trigger:
  - platform: template
    value_template: '{{ now() > as_datetime(states(''input_datetime.elis_next_alarm'')).astimezone(now().tzinfo)
      + timedelta(minutes = 1) }}'
    alias: When Eli's Alarm has fired
    id: alarm_fired
  - platform: state
    entity_id:
    - input_datetime.eca_day_alarm
    - input_datetime.elis_school_day_alarm
  condition: []
  action:
  - if:
    - condition: trigger
      id:
      - alarm_fired
    then:
    - service: input_datetime.set_datetime
      data:
        date: '{{ (now() - timedelta(days = 1)).date() }}'
      target:
        entity_id: input_datetime.elis_next_alarm
    - service: script.increment_alarm_day
      data:
        alarm_datetime: input_datetime.elis_next_alarm
        calendars:
        - calendar.eli_school_days
  - if:
    - condition: template
      value_template: '{{ as_datetime(states(''input_datetime.elis_next_alarm'')).weekday()
        < 5 }}'
      alias: Next alarm is on a weekday
    then:
    - service: input_datetime.set_datetime
      data:
        time: '{{ states(''input_datetime.elis_school_day_alarm'') }}'
      target:
        entity_id: input_datetime.elis_next_alarm
    else:
    - service: input_datetime.set_datetime
      data:
        time: '{{ states(''input_datetime.eca_day_alarm'') }}'
      target:
        entity_id: input_datetime.elis_next_alarm
  mode: single
  max_exceeded: silent
- id: '1690814722057'
  alias: Elena's Next Alarm
  description: Set Elena's Next Alarm to the next day where she has school
  trigger:
  - platform: template
    value_template: '{{ now() > as_datetime(states(''input_datetime.elenas_next_alarm'')).astimezone(now().tzinfo)
      + timedelta(minutes = 1) }}'
    alias: When Elena's Alarm has fired
    id: alarm_fired
  - platform: state
    entity_id:
    - input_datetime.eca_day_alarm
    - input_datetime.elenas_school_day_alarm
  condition: []
  action:
  - if:
    - condition: trigger
      id:
      - alarm_fired
    then:
    - service: input_datetime.set_datetime
      data:
        date: '{{ (now() - timedelta(days = 1)).date() }}'
      target:
        entity_id: input_datetime.elenas_next_alarm
    - service: script.increment_alarm_day
      data:
        alarm_datetime: input_datetime.elenas_next_alarm
        calendars:
        - calendar.elena_school_days
  - if:
    - condition: template
      value_template: '{{ as_datetime(states(''input_datetime.elenas_next_alarm'')).weekday()
        < 5 }}'
      alias: If next alarm is on a weekday
    then:
    - service: input_datetime.set_datetime
      data:
        time: '{{ states(''input_datetime.elenas_school_day_alarm'') }}'
      target:
        entity_id: input_datetime.elenas_next_alarm
    else:
    - service: input_datetime.set_datetime
      data:
        time: '{{ states(''input_datetime.eca_day_alarm'') }}'
      target:
        entity_id: input_datetime.elenas_next_alarm
  mode: single
  max_exceeded: silent
- id: '1690850022345'
  alias: Grace's Alarm
  description: Wake up Grace at her next alarm
  trigger:
  - platform: time
    at: input_datetime.graces_next_alarm
    id: alarm
  - platform: state
    entity_id:
    - binary_sensor.parents_room_doors
    from: 'off'
    to: 'on'
    id: dismiss_alarm
  condition: []
  action:
  - if:
    - condition: trigger
      id:
      - alarm
    then:
    - if:
      - condition: state
        entity_id: input_boolean.parents_room_next_alarm_dismissed
        state: 'off'
      then:
      - target:
          entity_id: light.parents_room_core_display_backlight
        data:
          brightness_pct: '{{ states(''input_number.morning_light_brightness'') |
            int if is_state(''sun.sun'',''below_horizon'') else 100 }}'
        action: light.turn_on
      - data:
          option: Take On Me
        target:
          entity_id: select.parents_room_core_ringtone
        action: select.select_option
      - action: number.set_value
        target:
          entity_id: number.parents_room_core_speaker_volume
        data:
          value: 10
      - data: {}
        target:
          entity_id: button.parents_room_core_play_ringtone
        action: button.press
    - delay: 60
    - if:
      - condition: state
        entity_id: input_boolean.parents_room_next_alarm_dismissed
        state: 'off'
      then:
      - data:
          bedroom: parents_room
          ringtone: Take On Me
        action: script.alarm_lights
    - data: {}
      target:
        entity_id: input_boolean.parents_room_next_alarm_dismissed
      action: input_boolean.turn_off
    else:
    - condition: state
      entity_id: sensor.next_alarm_timings
      attribute: grace_next_alarm_dismissable
      state: true
    - metadata: {}
      data: {}
      target:
        entity_id: input_boolean.parents_room_next_alarm_dismissed
      action: input_boolean.turn_on
  mode: single
- id: '1690850158819'
  alias: Eli's Alarm
  description: Wake up Eli at his next alarm
  trigger:
  - platform: time
    at: input_datetime.elis_next_alarm
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.elis_room_next_alarm_dismissed
      state: 'off'
    then:
    - service: script.alarm_lights
      data:
        bedroom: elis_room
        ringtone: Pokemon
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.elis_room_next_alarm_dismissed
  mode: single
- id: '1693121253660'
  alias: Live Bus Arrivals
  description: Update the live bus arrival timings from LTA Datamall for buses stopping
    nearby during operating hours
  trigger:
  - platform: time_pattern
    minutes: /1
    alias: update
    id: update
  - platform: time_pattern
    seconds: '50'
    alias: Probe
    id: probe
  condition: []
  action:
  - if:
    - condition: trigger
      id:
      - update
    then:
    - repeat:
        for_each:
        - aljunied_station_bus_40
        - aljunied_station_bus_80
        - aljunied_station_bus_100
        - before_lorong_23_geylang_bus_2
        - before_lorong_23_geylang_bus_13
        - before_lorong_23_geylang_bus_26
        - before_lorong_23_geylang_bus_67
        - opposite_aljunied_station_bus_40
        - opposite_aljunied_station_bus_125
        - sims_drive_market_bus_64
        - sims_drive_market_bus_134
        - sims_drive_market_bus_137
        sequence:
        - if:
          - condition: template
            value_template: '{{ is_state(''binary_sensor.'' + repeat.item + ''_operating'',
              ''on'') }}'
          then:
          - service: homeassistant.update_entity
            target:
              entity_id: sensor.{{ repeat.item }}
    else:
    - service: homeassistant.update_entity
      data: {}
      target:
        entity_id:
        - binary_sensor.aljunied_station_bus_40_operating
        - binary_sensor.aljunied_station_bus_80_operating
        - binary_sensor.aljunied_station_bus_100_operating
        - binary_sensor.before_lorong_23_geylang_bus_2_operating
        - binary_sensor.before_lorong_23_geylang_bus_13_operating
        - binary_sensor.before_lorong_23_geylang_bus_26_operating
        - binary_sensor.before_lorong_23_geylang_bus_67_operating
        - binary_sensor.opposite_aljunied_station_bus_40_operating
        - binary_sensor.opposite_aljunied_station_bus_125_operating
        - binary_sensor.sims_drive_market_bus_64_operating
        - binary_sensor.sims_drive_market_bus_134_operating
        - binary_sensor.sims_drive_market_bus_137_operating
  mode: single
- id: '1694229495079'
  alias: NEA Rain Radar Animation
  description: Update NEA Rain Radar Animation 5min past every hour if it is not during
    Sleep Hours
  trigger:
  - platform: time_pattern
    minutes: '5'
  condition:
  - condition: not
    conditions:
    - condition: time
      after: input_datetime.sleep_hours_start
      before: input_datetime.sleep_hours_end
  action:
  - service: script.nea_rain_radar_animation
    data: {}
  mode: single
- id: '1697798770695'
  alias: Dining Living Room AC Interlock
  description: Sync the states of the Dining and Living Room ACs
  trigger:
  - platform: template
    value_template: '{{ states(''climate.dining_room_ac'') != states(''climate.living_room_ac'')
      or (is_state(''climate.dining_room_ac'',''cool'') and is_state(''climate.living_room_ac'',''cool'')
      and state_attr(''climate.dining_room_ac'',''temperature'') != state_attr(''climate.living_room_ac'',''temperature''))
      }}'
    for:
      hours: 0
      minutes: 0
      seconds: 3
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{ states.climate.dining_room_ac.last_updated > states.climate.living_room_ac.last_updated
        }}'
    then:
    - if:
      - condition: state
        entity_id: climate.dining_room_ac
        state: 'off'
      then:
      - data: {}
        target:
          entity_id: climate.living_room_ac
        action: climate.turn_off
      else:
      - if:
        - condition: template
          value_template: '{{ states(''climate.living_room_ac'') != states(''climate.dining_room_ac'')
            }}'
        then:
        - data: {}
          target:
            entity_id: climate.living_room_ac
          action: climate.turn_on
      - if:
        - condition: template
          value_template: '{{ state_attr(''climate.living_room_ac'',''temperature'')
            != state_attr(''climate.dining_room_ac'',''temperature'') }}'
        then:
        - data:
            temperature: '{{ state_attr(''climate.dining_room_ac'',''temperature'')
              }}'
          target:
            entity_id: climate.living_room_ac
          action: climate.set_temperature
    else:
    - if:
      - condition: state
        entity_id: climate.living_room_ac
        state: 'off'
      then:
      - data: {}
        target:
          entity_id: climate.dining_room_ac
        action: climate.turn_off
      else:
      - if:
        - condition: template
          value_template: '{{ states(''climate.living_room_ac'') != states(''climate.dining_room_ac'')
            }}'
        then:
        - data: {}
          target:
            entity_id: climate.dining_room_ac
          action: climate.turn_on
      - if:
        - condition: template
          value_template: '{{ state_attr(''climate.living_room_ac'',''temperature'')
            != state_attr(''climate.dining_room_ac'',''temperature'') }}'
        then:
        - data:
            temperature: '{{ state_attr(''climate.living_room_ac'',''temperature'')
              }}'
          target:
            entity_id: climate.dining_room_ac
          action: climate.set_temperature
  mode: single
  max_exceeded: silent
- id: '1697806604813'
  alias: Dining and Living Room AC Motion Timeout
  description: Turn off the Dining and Living Room ACs if no motion is detected in
    both rooms
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor:
      - binary_sensor.dining_living_room_presence
      turnoff_entities_list:
      - climate.dining_room_ac
      - climate.living_room_ac
- id: '1697937786035'
  alias: Study Room Blinds Controller
  description: Control the Study Room Blinds
  use_blueprint:
    path: EPMatt/ikea_e1766.yaml
    input:
      integration: ZHA
      controller_device: 238c40fe366392fa3b5e19967f3794f0
      helper_last_controller_event: input_text.zz_study_room_blinds_controller_last_event
      action_button_up_short:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.study_room_blinds
          command: cover_open
      action_button_down_short:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.study_room_blinds
          command: cover_close
      action_button_up_double:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.study_room_blinds
          command: cover_auto_control
      action_button_down_double:
      - action: script.cover_controller
        metadata: {}
        data:
          cover: cover.study_room_blinds
          command: cover_manual_control
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 500
- id: '1699176933163'
  alias: Junior Bathroom Motion Lights
  description: Control the Junior Bathroom lights when motion is detected, depending
    on lux level and time
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      motion_sensor: binary_sensor.junior_bathroom_occupancy
      lux_sensor: sensor.junior_shower_lux
      lights_list:
      - light.junior_bathroom_lights
- id: '1699177531859'
  alias: Junior Bathroom Motion Timeout
  description: Turn off Junior Bathroom Lights when no motion is detected for a certain
    amount of time.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor:
      - binary_sensor.junior_bathroom_occupancy
      turnoff_entities_list:
      - light.junior_bathroom_lights
- id: '1699177618893'
  alias: Powder Room Motion Pendant Light
  description: Control the Powder Room Pendant Light when motion is detected, depending
    on lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.powder_room_pendant_light_entity
      motion_sensor: binary_sensor.powder_room_occupancy
      lux_sensor: sensor.powder_room_lux
- id: '1699177686268'
  alias: Powder Room Motion Timeout
  description: Turn off Powder Room Pendant Light when no motion is detected for a
    certain amount of time.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor:
      - binary_sensor.powder_room_occupancy
      turnoff_entities_list:
      - light.powder_room_pendant_light_entity
- id: '1699233038725'
  alias: Master Bathroom Motion Light
  description: Control the Master Bathroom Light when motion is detected, depending
    on lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.master_bathroom_light_entity
      motion_sensor: binary_sensor.master_bathroom_motion
      lux_sensor: sensor.master_bathroom_lux
- id: '1699233080526'
  alias: Master Bathroom Motion Pendant Light
  description: Control the Master Bathroom Pendant Light when motion is detected,
    depending on lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.master_bathroom_pendant_light_entity
      motion_sensor: binary_sensor.master_shower_motion
      lux_sensor: sensor.master_bathroom_lux
- id: '1699233249112'
  alias: Master Bathroom Motion Timeout
  description: Turn off Master Bathroom Lights when no motion is detected for a certain
    amount of time.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor:
      - binary_sensor.master_bathroom_occupancy
      turnoff_entities_list:
      - light.master_bathroom_lights
- id: '1702255296989'
  alias: Eli's Room Core
  description: Interface between Eli's Room devices and Home Assistant via ESPHome
    and M5Stack Fire
  use_blueprint:
    path: danleongjy/room_core.yaml
    input:
      core_room: elis_room
      sleep_hours_start: input_datetime.sleep_hours_start
      sleep_hours_end: input_datetime.sleep_hours_end
- id: '1702256763571'
  alias: Parents' Room Core
  description: Interface between Parents' Room devices and Home Assistant via ESPHome
    and M5Stack Fire
  use_blueprint:
    path: danleongjy/room_core.yaml
    input:
      core_room: parents_room
      sleep_hours_start: input_datetime.sleep_hours_start
      sleep_hours_end: input_datetime.sleep_hours_end
- id: '1702652446399'
  alias: Kitchen Voice Assistant Listening for Wake Word
  description: Turn on wake word listening on Kitchen Voice Assistant when presence
    detected in kitchen
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kitchen_radar_occupancy
  - platform: state
    entity_id:
    - input_boolean.away_mode
  condition: []
  action:
  - if:
    - condition: state
      entity_id: binary_sensor.kitchen_radar_occupancy
      state: 'on'
    - condition: state
      entity_id: input_boolean.away_mode
      state: 'off'
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id:
        - switch.kitchen_core_use_wake_word
    else:
    - service: switch.turn_off
      data: {}
      target:
        entity_id:
        - switch.kitchen_core_use_wake_word
  mode: single
  max_exceeded: silent
- id: '1702652712056'
  alias: Living Room Voice Assistant Listening for Wake Word
  description: Listen for wake word  on the Living Room Voice Assistant if presence
    is detected in the kitchen, living room, dining room or study room
  triggers:
  - entity_id:
    - binary_sensor.living_room_presence
    to: 'on'
    from: 'off'
    trigger: state
    id: motion
  - entity_id:
    - binary_sensor.living_room_presence
    to: 'off'
    from: 'on'
    trigger: state
    id: clear
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - motion
    then:
    - action: switch.turn_off
      target:
        entity_id:
        - switch.living_room_voice_assistant_mute
      data: {}
    else:
    - action: switch.turn_on
      target:
        entity_id:
        - switch.living_room_voice_assistant_mute
      data: {}
  mode: single
  max_exceeded: silent
- id: '1702898924227'
  alias: Elena's Room Core
  description: Interface between Elena's Room devices and Home Assistant via ESPHome
    and M5Stack Fire
  use_blueprint:
    path: danleongjy/room_core.yaml
    input:
      core_room: elenas_room
      sleep_hours_start: input_datetime.sleep_hours_start
      sleep_hours_end: input_datetime.sleep_hours_end
- id: '1704838438827'
  alias: Elena's Alarm
  description: Wake up Elena at her next alarm
  trigger:
  - platform: time
    at: input_datetime.elenas_next_alarm
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.elenas_room_next_alarm_dismissed
      state: 'off'
    then:
    - data:
        bedroom: elenas_room
        ringtone: Bippity Boppity Boo
      action: script.alarm_lights
  - data: {}
    target:
      entity_id: input_boolean.elenas_room_next_alarm_dismissed
    action: input_boolean.turn_off
  mode: single
- id: '1704932786787'
  alias: System Startup
  description: Run setup actions 5min after startup
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - delay: 10
  - data: {}
    action: shell_command.sshsetup
  - data:
      entity_id: camera.recent_main_door_snapshot_1
      file_path: /media/{{ (state_attr('sensor.main_door_camera', 'file_list') |   sort)[-1][7:]
        }}
    action: local_file.update_file_path
  - data:
      entity_id: camera.recent_main_door_snapshot_2
      file_path: /media/{{ (state_attr('sensor.main_door_camera', 'file_list') |   sort)[-2][7:]
        }}
    action: local_file.update_file_path
  - data:
      entity_id: camera.recent_main_door_snapshot_3
      file_path: /media/{{ (state_attr('sensor.main_door_camera', 'file_list') |   sort)[-3][7:]
        }}
    action: local_file.update_file_path
  mode: single
- id: '1705228748219'
  alias: Notify 5min Before Wind Down
  description: Play a TTS notification 5min before wind down
  trigger:
  - alias: 15min before wind down
    platform: template
    value_template: '{{ now() >= today_at(states(''input_datetime.wind_down'')) -
      timedelta(minutes = 5) }}'
  condition:
  - condition: state
    entity_id: input_boolean.party_mode
    state: 'off'
  - condition: state
    entity_id: input_boolean.away_mode
    state: 'off'
  action:
  - target:
      entity_id: tts.piper
    data:
      cache: true
      media_player_entity_id: media_player.kitchen_speaker
      message: Winding down in 5 minutes
    action: tts.speak
  - condition: state
    entity_id: binary_sensor.study_room_ethernet_connection
    state: 'off'
  - target:
      entity_id: tts.piper
    data:
      cache: true
      media_player_entity_id: media_player.study_room_speaker
      message: Winding down in 5 minutes
    action: tts.speak
  mode: single
- id: '1705277866413'
  alias: Vacuum Configuration
  description: Set vacuum status light, volume and Do Not Disturb according to sleep
    hours
  trigger:
  - platform: state
    entity_id:
    - input_datetime.sleep_hours_start
    - input_datetime.sleep_hours_end
    id: sleep_hours_changed
  - platform: time
    at: input_datetime.sleep_hours_start
    id: sleep_hours_start
  - platform: time
    at: input_datetime.sleep_hours_end
    id: sleep_hours_end
  - platform: state
    entity_id:
    - binary_sensor.roborock_s7_water_box_attached
    - binary_sensor.roborock_s7_mop_attached
    - binary_sensor.roborock_s7_water_supply
    id: mop
    from:
    - 'on'
    - 'off'
    to:
    - 'on'
    - 'off'
  - platform: state
    entity_id:
    - vacuum.roborock_s7
    from: returning
    to: docked
    for:
      hours: 0
      minutes: 1
      seconds: 0
    id: finished
  - platform: state
    entity_id:
    - input_select.vacuum_fan_speed
    from:
    to:
    id: fan_speed
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - sleep_hours_start
      sequence:
      - service: number.set_value
        target:
          entity_id: number.roborock_s7_volume
        data:
          value: '0'
      - service: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: switch.roborock_s7_status_indicator_light
    - conditions:
      - condition: trigger
        id:
        - sleep_hours_end
      sequence:
      - service: number.set_value
        target:
          entity_id: number.roborock_s7_volume
        data:
          value: '85'
      - service: switch.turn_on
        target:
          entity_id: switch.roborock_s7_status_indicator_light
        data: {}
    - conditions:
      - condition: trigger
        id:
        - sleep_hours_changed
      sequence:
      - service: time.set_value
        target:
          entity_id: time.roborock_s7_do_not_disturb_begin
        data:
          time: '{{ states(''input_datetime.sleep_hours_start'') }}'
      - service: time.set_value
        target:
          entity_id: time.roborock_s7_do_not_disturb_end
        data:
          time: '{{ states(''input_datetime.sleep_hours_end'') }}'
    - conditions:
      - condition: trigger
        id:
        - mop
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.roborock_s7_water_box_attached
          state: 'on'
        - condition: state
          entity_id: binary_sensor.roborock_s7_mop_attached
          state: 'on'
        - condition: state
          entity_id: binary_sensor.roborock_s7_water_supply
          state: 'off'
        then:
        - condition: not
          conditions:
          - condition: state
            entity_id: select.roborock_s7_mop_intensity
            state: intense
        - service: select.select_option
          target:
            entity_id: select.roborock_s7_mop_intensity
          data:
            option: intense
        else:
        - condition: not
          conditions:
          - condition: state
            entity_id: select.roborock_s7_mop_intensity
            state: 'off'
        - service: select.select_option
          target:
            entity_id: select.roborock_s7_mop_intensity
          data:
            option: 'off'
    - conditions:
      - condition: trigger
        id:
        - finished
      sequence:
      - service: homeassistant.reload_config_entry
        data:
          device_id: e53c4142b0a58065e2dedda56a576eff
    - conditions:
      - condition: trigger
        id:
        - fan_speed
      sequence:
      - service: vacuum.set_fan_speed
        metadata: {}
        data:
          fan_speed: '{{ states(''input_select.vacuum_fan_speed'') | lower }}'
        target:
          entity_id: vacuum.roborock_s7
    default: []
  mode: queued
  max: 5
- id: '1707352533395'
  alias: Notify When Server Load High
  description: Send a notification when server load has been persistently high
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.node_proxmox_cpu_used
    for:
      hours: 1
      minutes: 0
      seconds: 0
    above: 20
    id: high
  - platform: numeric_state
    entity_id:
    - sensor.node_proxmox_cpu_used
    below: 20
    id: low
  condition: []
  action:
  - if:
    - condition: trigger
      id:
      - high
    then:
    - service: notify.mobile_app_aurora
      metadata: {}
      data:
        message: CPU load exceeded 20% for at least 1h
        title: Check server
        data:
          tag: high
          clickAction: /lovelace/network
    else:
    - service: notify.mobile_app_aurora
      metadata: {}
      data:
        message: clear_notification
        data:
          tag: high
  mode: single
- id: '1708242484217'
  alias: Notify When Zigbee Devices Have Issues
  description: Send a notification listing the Zigbee devices with low batteries or
    connection issues
  trigger:
  - platform: time
    at: input_datetime.sleep_hours_end
  - platform: numeric_state
    entity_id:
    - sensor.zha_device_issues
    above: 10
  condition: []
  action:
  - service: notify.mobile_app_aurora
    metadata: {}
    data:
      message: clear_notification
      data:
        tag: batts_low
  - if:
    - condition: numeric_state
      entity_id: sensor.zha_device_issues
      above: 0
    then:
    - delay: 1
    - service: notify.mobile_app_aurora
      metadata: {}
      data:
        title: Check Zigbee Devices
        data:
          tag: batts_low
          clickAction: /lovelace/zigbee-diagnostics
        message: "{% set message = namespace(text = \"\") %} {% if state_attr('sensor.zha_device_issues','disconnected')
          | length > 0 %}\n  {% set message.text = message.text + 'Disconnected: '
          %}\n  {% for battery in state_attr('sensor.zha_device_issues','disconnected')
          %}\n    {% set message.text = message.text + device_attr(device_id(battery),'name_by_user')
          + ', ' %}\n  {% endfor %}\n  {% set message.text = message.text[:-2] %}\n{%
          endif %} {% if state_attr('sensor.zha_device_issues','batteries_low') |
          length > 0 %}\n  {% set message.text = message.text + '\\nLow Battery: '
          %}\n  {% for battery in state_attr('sensor.zha_device_issues','batteries_low')
          %}\n    {% set message.text = message.text + device_attr(device_id(battery),'name_by_user')
          + ', ' %}\n  {% endfor %}\n  {% set message.text = message.text[:-2] %}\n{%
          endif %} {{ message.text }}"
  mode: restart
- id: '1708558912067'
  alias: Daniel's Phone Sleep Mode
  description: Set screen brightness and Do Not Disturb for sleep before next alarm
  triggers:
  - alias: Before wakeup alarm
    value_template: '{{ now() >= (states(''input_datetime.daniels_next_alarm'') |
      as_datetime - timedelta(minutes = 1)).astimezone(now().tzinfo) and now() < (states(''input_datetime.daniels_next_alarm'')
      | as_datetime).astimezone(now().tzinfo) }}'
    id: before_wakeup
    trigger: template
  - alias: At sleep time
    value_template: '{{ now() >= (states(''input_datetime.daniels_next_alarm'') |
      as_datetime - timedelta(hours = states(''input_number.minimum_sleep_hours'')
      | float)).astimezone(now().tzinfo) and now() < (states(''input_datetime.daniels_next_alarm'')
      | as_datetime - timedelta(hours = states(''input_number.minimum_sleep_hours'')
      | float - 0.01)).astimezone(now().tzinfo) }}'
    id: sleep_time
    trigger: template
  - alias: 15min before sleep time
    value_template: "{{ now() >= (states('input_datetime.daniels_next_alarm') | as_datetime
      - timedelta(hours = states('input_number.minimum_sleep_hours') | float, minutes
      = 15)).astimezone(now().tzinfo) and \nnow() < (states('input_datetime.daniels_next_alarm')
      | as_datetime - timedelta(hours = states('input_number.minimum_sleep_hours')
      | float, minutes = 14)).astimezone(now().tzinfo) }}"
    id: before_sleep_time
    trigger: template
  - entity_id:
    - sensor.aurora_battery_state
    from: discharging
    to:
    - charging
    - full
    id: phone_charging
    trigger: state
  - entity_id:
    - sensor.aurora_battery_state
    from:
    - charging
    - full
    to: discharging
    id: phone_discharging
    trigger: state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - before_sleep_time
      sequence:
      - metadata: {}
        data:
          title: Prepare for bed
          message: Bedtime starting at {{ (states('input_datetime.daniels_next_alarm')
            | as_datetime - timedelta(hours = states('input_number.minimum_sleep_hours')
            | float)).strftime('%H:%M') }}.
        action: notify.mobile_app_aurora
    - conditions:
      - condition: trigger
        id:
        - sleep_time
        - phone_charging
      sequence:
      - condition: template
        value_template: '{{ now() >= (states(''input_datetime.daniels_next_alarm'')
          | as_datetime - timedelta(hours = states(''input_number.minimum_sleep_hours'')
          | float)).astimezone(now().tzinfo) }}'
      - metadata: {}
        data:
          message: command_dnd
          data:
            command: alarms_only
        action: notify.mobile_app_aurora
      - delay: 1
      - metadata: {}
        data:
          message: command_auto_screen_brightness
          data:
            command: turn_off
        action: notify.mobile_app_aurora
      - delay: 1
      - metadata: {}
        data:
          message: command_screen_brightness_level
          data:
            command: 1
        action: notify.mobile_app_aurora
    - conditions:
      - condition: trigger
        id:
        - before_wakeup
        - phone_discharging
      sequence:
      - metadata: {}
        data:
          message: command_dnd
          data:
            command: 'off'
        action: notify.mobile_app_aurora
      - delay: 1
      - metadata: {}
        data:
          message: command_auto_screen_brightness
          data:
            command: turn_on
        action: notify.mobile_app_aurora
  mode: single
- id: '1712999157282'
  alias: Study Room Core
  description: Interface between Study Room devices and Home Assistant via ESPHome
    and M5Stack Basic
  use_blueprint:
    path: danleongjy/room_core.yaml
    input:
      core_room: study_room
      sleep_hours_start: input_datetime.sleep_hours_start
      sleep_hours_end: input_datetime.sleep_hours_end
- id: '1713833337393'
  alias: Study Room Core Blinds Controller
  description: Control the Study Room Blinds with the Study Room Core
  use_blueprint:
    path: danleongjy/room_core_cover_controller.yaml
    input:
      cover: cover.study_room_blinds
      core_current_command: sensor.study_room_core_current_command
      core_command_close: cover_close
      core_command_open: cover_open
      core_command_auto_control: cover_auto_control
      core_command_manual_control: cover_manual_control
- id: '1713833596391'
  alias: Parents' Room Core Blinds Controller
  description: Control the Master Bathroom Blind with the Parents' Room Core
  use_blueprint:
    path: danleongjy/room_core_cover_controller.yaml
    input:
      cover: cover.master_bathroom_blind
      core_current_command: sensor.parents_room_core_current_command
      core_command_close: cover_close
      core_command_open: cover_open
      core_command_auto_control: cover_auto_control
      core_command_manual_control: cover_manual_control
- id: '1715733470037'
  alias: Windows Set AC
  description: Set AC state when windows are opened or closed
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.parents_room_left_window
    id: parents_room
    from:
    - 'on'
    - 'off'
    to:
    - 'on'
    - 'off'
  - platform: state
    entity_id:
    - binary_sensor.elis_room_right_window
    from:
    - 'on'
    - 'off'
    to:
    - 'on'
    - 'off'
    id: elis_room
  - platform: state
    entity_id:
    - binary_sensor.elenas_room_left_window
    from:
    - 'on'
    - 'off'
    to:
    - 'on'
    - 'off'
    id: elenas_room
  condition: []
  action:
  - service: automation.trigger
    target:
      entity_id: automation.{{ trigger.id }}_motion_ac
    data:
      skip_condition: true
  mode: single
- id: '1717226840220'
  alias: Notify When Vacuum Mop Needs Cleaning
  description: Send a notification when the vacuum has finished a mopping run and
    mop needs to be removed for cleaning
  trigger:
  - platform: state
    entity_id:
    - vacuum.roborock_s7
    from:
    - returning
    - cleaning
    to: docked
    id: cleaning_finished
  - platform: state
    entity_id:
    - binary_sensor.roborock_s7_mop_attached
    from: 'on'
    to: 'off'
    id: mop_removed
  condition: []
  action:
  - if:
    - condition: trigger
      id:
      - cleaning_finished
    then:
    - condition: state
      entity_id: binary_sensor.roborock_s7_mop_attached
      state: 'on'
    - service: input_boolean.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: input_boolean.vacuum_mop_unclean
    - service: notify.mobile_app_aurora
      data:
        title: Please clean vacuum mop
        message: Vacuum completed mopping at {{ (now() | string)[11:16] }}
        data:
          tag: mop_unclean
          clickAction: /lovelace/vacuum
    else:
    - service: input_boolean.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: input_boolean.vacuum_mop_unclean
    - service: notify.mobile_app_aurora
      data:
        message: clear_notification
        data:
          tag: mop_unclean
  mode: single
- id: '1722233345556'
  alias: Kitchen Core
  description: Interface between Kitchen devices and Home Assistant via ESPHome and
    M5StickC Plus
  trigger:
  - platform: state
    entity_id:
    - sensor.kitchen_core_current_command
  condition:
  - condition: template
    value_template: '{{ states(''sensor.kitchen_core_current_command'') in [''lights_on'',''lights_off'',''lights_brighten'',''lights_darken'']
      }}'
  action:
  - action: script.lights_controller
    data:
      lights:
      - light.kitchen_lights
      command: '{{ states(''sensor.kitchen_core_current_command'') }}'
  mode: single
- id: '1722234123190'
  alias: Kitchen Core Blinds Controller
  description: Control the Master Bathroom Blind with the Parents' Room Core
  use_blueprint:
    path: danleongjy/room_core_cover_controller.yaml
    input:
      cover: cover.kitchen_blind
      core_current_command: sensor.kitchen_core_current_command
      core_command_close: blinds_close
      core_command_open: blinds_open
      core_command_auto_control: blinds_auto_control
      core_command_manual_control: blinds_manual_control
- id: '1722382955872'
  alias: Study Room Voice Assistant Listening for Wake Word
  description: Turn on wake word listening on Study Room Voice Assistant when presence
    detected in Study Room and nothing is connected to Ethernet
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.study_room_ethernet_connection
    - binary_sensor.study_room_motion
  condition: []
  action:
  - if:
    - condition: state
      entity_id: binary_sensor.study_room_ethernet_connection
      state: 'off'
    - condition: state
      entity_id: binary_sensor.study_room_motion
      state: 'on'
    then:
    - service: switch.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: switch.study_room_voice_assistant_use_wake_word
    else:
    - service: switch.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: switch.study_room_voice_assistant_use_wake_word
  mode: single
- id: '1722555368988'
  alias: Doorbell
  description: Chime on speakers when doorbell is pressed
  use_blueprint:
    path: EPMatt/ikea_e1766.yaml
    input:
      integration: ZHA
      helper_last_controller_event: input_text.zz_doorbell_last_event
      controller_device: 192b4e9c8aa753c4e58fc37ee65137a8
      action_button_up_short:
      - service: script.doorbell
        data: {}
      action_button_down_short:
      - service: script.doorbell
        data: {}
- id: '1724106276332'
  alias: Main Door Camera Snapshots
  description: Take a snapshot and when motion detected at main door
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.main_door_motion
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: snapshot_{{ now().strftime('%Y%m%d_%H%M%S') }}.png
    target:
      entity_id: input_text.newest_main_door_camera_snapshot_filename
  - service: camera.snapshot
    metadata: {}
    data:
      filename: /media/main_door_camera/{{ states('input_text.newest_main_door_camera_snapshot_filename')
        }}
    target:
      entity_id: camera.main_door_camera
  - wait_for_trigger:
    - platform: state
      entity_id:
      - sensor.main_door_camera
    continue_on_timeout: false
    timeout: 60
  - service: local_file.update_file_path
    data:
      entity_id: camera.recent_main_door_snapshot_1
      file_path: /media/{{ (state_attr('sensor.main_door_camera', 'file_list') |   sort)[-1][7:]
        }}
  - service: local_file.update_file_path
    data:
      entity_id: camera.recent_main_door_snapshot_2
      file_path: /media/{{ (state_attr('sensor.main_door_camera', 'file_list') |   sort)[-2][7:]
        }}
  - service: local_file.update_file_path
    data:
      entity_id: camera.recent_main_door_snapshot_3
      file_path: /media/{{ (state_attr('sensor.main_door_camera', 'file_list') |   sort)[-3][7:]
        }}
  mode: restart
- id: '1724902259555'
  alias: AC Change Temperature
  description: Beep the AC when a new target temperature is set, and turn off the
    AC when specified target temperature is below 23.5°C.
  trigger:
  - platform: state
    entity_id:
    - climate.elenas_room_ac
    - climate.elis_room_ac
    - climate.dining_room_ac
    - climate.living_room_ac
    - climate.study_room_ac
    - climate.parents_room_ac
    attribute: temperature
  condition:
  - condition: template
    value_template: '{{ is_state(trigger.entity_id, ''cool'') }}'
  action:
  - if:
    - condition: template
      value_template: '{{ state_attr(trigger.entity_id, ''temperature'') < 23.5 }}'
    then:
    - action: climate.set_temperature
      metadata: {}
      data:
        temperature: 27
      target:
        entity_id: '{{ trigger.entity_id }}'
    - action: climate.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: '{{ trigger.entity_id }}'
    - delay:
        hours: 0
        minutes: 0
        seconds: 0
        milliseconds: 200
    else:
    - action: script.turn_on
      data:
        variables:
          switch_on: true
          resync: false
      target:
        entity_id: script.{{ trigger.entity_id.split('.')[1] }}_set_state
  mode: single
  max_exceeded: silent
- id: '1731678711205'
  alias: Elena's Room Curtains Auto Control
  description: Open or close Elena's Room Curtains based on time and windows state
  use_blueprint:
    path: danleongjy/bedroom_curtains_auto_control.yaml
    input:
      curtains: cover.elenas_room_curtains
      windows: binary_sensor.elenas_room_left_window
      doors: binary_sensor.elenas_room_door
      motion: binary_sensor.elenas_room_presence
- id: '1731678994131'
  alias: Eli's Room Curtains Auto Control
  description: Open or close Eli's Room Curtains based on time and windows state
  use_blueprint:
    path: danleongjy/bedroom_curtains_auto_control.yaml
    input:
      curtains: cover.elis_room_curtains
      windows: binary_sensor.elis_room_right_window
      doors: binary_sensor.elis_room_door
      motion: binary_sensor.elis_room_presence
- id: '1731764708340'
  alias: Elena's Room Core Curtains Controller
  description: Control Elena's Room Curtains with Elena's Room Core
  use_blueprint:
    path: danleongjy/room_core_cover_controller.yaml
    input:
      cover: cover.elenas_room_curtains
      core_current_command: sensor.elenas_room_core_current_command
      core_command_close: cover_close
      core_command_open: cover_open
      core_command_auto_control: cover_auto_control
      core_command_manual_control: cover_manual_control
- id: '1731765020860'
  alias: Eli's Room Core Curtains Controller
  description: Control Eli's Room Curtains with Eli's Room Core
  use_blueprint:
    path: danleongjy/room_core_cover_controller.yaml
    input:
      cover: cover.elis_room_curtains
      core_current_command: sensor.elis_room_core_current_command
      core_command_close: cover_close
      core_command_open: cover_open
      core_command_auto_control: cover_auto_control
      core_command_manual_control: cover_manual_control
- id: '1733134617074'
  alias: Christmas Tree
  description: Sync Christmas Tree lights to Living Room Lights
  triggers:
  - trigger: state
    entity_id:
    - light.living_room_lights
  conditions: []
  actions:
  - action: light.turn_{{ states('light.living_room_lights') if states('light.living_room_lights')
      in ['on','off'] else 'off' }}
    metadata: {}
    data: {}
    target:
      entity_id: light.christmas_tree
  mode: single
- id: '1733622332194'
  alias: Notify When Immich Facial Processing Failed
  description: Send a notification when Immich facial recognition or face detection
    jobs fail
  triggers:
  - trigger: state
    entity_id:
    - sensor.immich_job_facial_recognition
    attribute: failed
  - trigger: state
    entity_id:
    - sensor.immich_job_face_detection
    attribute: failed
  conditions:
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.immich_job_face_detection
      attribute: failed
      above: 0
    - condition: numeric_state
      entity_id: sensor.immich_job_facial_recognition
      attribute: failed
      above: 0
  actions:
  - data:
      message: clear_notification
      data:
        tag: immich_errors
    action: notify.mobile_app_aurora
  - action: notify.mobile_app_aurora
    metadata: {}
    data:
      title: Immich Facial Processing Failed
      message: '{{ ''Face detection failed for '' if state_attr(''sensor.immich_job_face_detection'',
        ''failed'') > 0 }}{{ state_attr(''sensor.immich_job_face_detection'', ''failed'')
        if state_attr(''sensor.immich_job_face_detection'', ''failed'') > 0 }}{{ ''
        assets. '' if state_attr(''sensor.immich_job_face_detection'', ''failed'')
        > 0 }}{{ ''Facial recognition failed for '' if state_attr(''sensor.immich_job_facial_recognition'',
        ''failed'') > 0 }}{{ state_attr(''sensor.immich_job_facial_recognition'',
        ''failed'') if state_attr(''sensor.immich_job_facial_recognition'', ''failed'')
        > 0 }}{{ '' assets.'' if state_attr(''sensor.immich_job_facial_recognition'',
        ''failed'') > 0 }}'
      data:
        tag: immich_errors
  mode: single
- id: '1735294884034'
  alias: Daniel's Next Alarm
  description: Set the date and time for Daniel's next alarm
  triggers:
  - alias: When Daniel's Next Alarm has fired
    value_template: '{{ now() > as_datetime(states(''input_datetime.daniels_next_alarm'')).astimezone(now().tzinfo)
      + timedelta(minutes = 1) }}'
    id: alarm_fired
    trigger: template
  - entity_id:
    - calendar.daniel_work_days
    - calendar.elena_school_days
    - calendar.eli_school_days
    id: calendar_changed
    trigger: state
  - entity_id:
    - input_datetime.eca_day_alarm
    - input_datetime.elenas_school_day_alarm
    - input_datetime.elis_school_day_alarm
    - input_datetime.daniels_work_day_alarm
    id: childrens_alarms_changed
    trigger: state
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - alarm_fired
    then:
    - data:
        start_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
          = 9, minute = 30) }}'
        end_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
          = 12, minute = 0) }}'
      target:
        entity_id: calendar.daniel_work_days
      response_variable: work_days
      alias: List Daniel's morning work days occurring on Daniel's Next Alarm
      action: calendar.get_events
    - data:
        start_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
          = 0, minute = 0) }}'
        end_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
          = 0, minute = 0) + timedelta(days = 1) }}'
      target:
        entity_id:
        - calendar.eli_school_days
        - calendar.elena_school_days
      response_variable: school_days
      alias: List school days occurring on Daniel's Next Alarm
      action: calendar.get_events
    - repeat:
        until:
        - condition: template
          value_template: '{{ now().date() < as_datetime(states(''input_datetime.daniels_next_alarm'')).date()
            }}'
          alias: Alarm day is in the future
        - or:
          - condition: template
            value_template: '{{ work_days[''calendar.daniel_work_days''].events |
              length > 0 }}'
            alias: Daniel has a work day
          - condition: template
            value_template: "{% set output = false %} {% if school_days['calendar.eli_school_days'].events
              | length > 0 %}\n  {% if as_datetime(school_days['calendar.eli_school_days'].events[0].start).weekday()
              in [1,2,3,5] %}\n    {% set output = true %}\n  {% endif %}\n{% endif
              %} {{ output }}"
            alias: Eli has a school day and it is on Tue, Wed, Thu or Sat
          - condition: template
            value_template: "{% set output = false %} {% if school_days['calendar.elena_school_days'].events
              | length > 0 %}\n  {% if as_datetime(school_days['calendar.elena_school_days'].events[0].start).weekday()
              in [0,4] %}\n    {% set output = true %}\n  {% endif %}\n{% endif %}
              {{ output }}"
            alias: Elena has a school day and it is on Mon or Fri
        sequence:
        - data:
            date: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).date()
              + timedelta(days = 1) }}'
          target:
            entity_id: input_datetime.daniels_next_alarm
          alias: Increment alarm by 1 day
          action: input_datetime.set_datetime
        - data:
            start_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
              = 9, minute = 30) }}'
            end_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
              = 12, minute = 0) }}'
          target:
            entity_id: calendar.daniel_work_days
          response_variable: work_days
          alias: List Daniel's morning work days occurring on Daniel's Next Alarm
          action: calendar.get_events
        - data:
            start_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
              = 0, minute = 0) }}'
            end_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
              = 0, minute = 0) + timedelta(days = 1) }}'
          target:
            entity_id:
            - calendar.eli_school_days
            - calendar.elena_school_days
          response_variable: school_days
          alias: List school days occurring on Daniel's Next Alarm
          action: calendar.get_events
  - data:
      start_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
        = 0, minute = 0) }}'
      end_date_time: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).replace(hour
        = 0, minute = 0) + timedelta(days = 1) }}'
    target:
      entity_id:
      - calendar.eli_school_days
      - calendar.elena_school_days
    response_variable: school_days
    alias: List school days occurring on Daniel's Next Alarm
    action: calendar.get_events
  - choose:
    - conditions:
      - alias: If Elena has school on Mon or Fri
        condition: template
        value_template: "{% set output = false %}\n{% if school_days['calendar.elena_school_days'].events
          | length > 0 %}\n  {% if as_datetime(school_days['calendar.elena_school_days'].events[0].start).weekday()
          in [0,4] %}\n    {% set output = true %}\n  {% endif %}\n{% endif %}\n{{
          output }}"
      sequence:
      - data:
          time: '{{ states(''input_datetime.elenas_school_day_alarm'') }}'
        target:
          entity_id: input_datetime.daniels_next_alarm
        alias: Set Daniel's Next Alarm to Elena's School Day Alarm
        action: input_datetime.set_datetime
      - data:
          datetime: '{{ as_datetime(states(''input_datetime.daniels_next_alarm''))
            - timedelta(minutes = 10) }}'
        target:
          entity_id: input_datetime.daniels_next_alarm
        alias: Set Daniel's Next Alarm 10min before Elena's alarm
        action: input_datetime.set_datetime
    - conditions:
      - alias: If Eli has school on Tue, Wed, Thu or Sat
        condition: template
        value_template: "{% set output = false %} \n{% if school_days['calendar.eli_school_days'].events
          | length > 0 %}\n  {% if as_datetime(school_days['calendar.eli_school_days'].events[0].start).weekday()
          in [1,2,3,5] %}\n    {% set output = true %}\n  {% endif %}\n{% endif %}
          \n{{ output }}"
      sequence:
      - if:
        - condition: template
          value_template: '{{ as_datetime(states(''input_datetime.daniels_next_alarm'')).weekday()
            < 5 }}'
          alias: Alarm is on a weekday
        then:
        - data:
            time: '{{ states(''input_datetime.elis_school_day_alarm'') }}'
          target:
            entity_id: input_datetime.daniels_next_alarm
          alias: Set Daniel's Next Alarm to Eli's School Day Alarm
          action: input_datetime.set_datetime
        - data:
            datetime: '{{ as_datetime(states(''input_datetime.daniels_next_alarm''))
              - timedelta(minutes = 5) }}'
          target:
            entity_id: input_datetime.daniels_next_alarm
          alias: Set Daniel's Next Alarm 5min before Eli's alarm
          action: input_datetime.set_datetime
        else:
        - data:
            time: '{{ states(''input_datetime.eca_day_alarm'') }}'
          target:
            entity_id: input_datetime.daniels_next_alarm
          alias: Set Daniel's Next Alarm to ECA Day Alarm
          action: input_datetime.set_datetime
        - data:
            datetime: '{{ as_datetime(states(''input_datetime.daniels_next_alarm''))
              - timedelta(minutes = 10) }}'
          target:
            entity_id: input_datetime.daniels_next_alarm
          alias: Set Daniel's Next Alarm 10min before kids' alarm
          action: input_datetime.set_datetime
    default:
    - data:
        time: '{{ states(''input_datetime.daniels_work_day_alarm'') }}'
      target:
        entity_id: input_datetime.daniels_next_alarm
      alias: Set Daniel's Next Alarm to Daniel's Work Day Alarm
      action: input_datetime.set_datetime
  mode: single
  max_exceeded: silent
- id: '1735296274500'
  alias: Grace's Next Alarm
  description: Set the date and time for Grace's next alarm
  triggers:
  - alias: When Grace's Next Alarm has fired
    value_template: '{{ now() > as_datetime(states(''input_datetime.graces_next_alarm'')).astimezone(now().tzinfo)
      + timedelta(minutes = 6) }}'
    id: alarm_fired
    trigger: template
  - entity_id:
    - calendar.grace_work_days
    - calendar.elena_school_days
    - calendar.eli_school_days
    id: calendar_changed
    trigger: state
  - entity_id:
    - input_datetime.eca_day_alarm
    - input_datetime.elenas_school_day_alarm
    - input_datetime.elis_school_day_alarm
    - input_datetime.graces_work_day_alarm
    id: childrens_alarms_changed
    trigger: state
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - alarm_fired
    then:
    - data:
        start_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
          = 9, minute = 30) }}'
        end_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
          = 12, minute = 0) }}'
      target:
        entity_id: calendar.grace_work_days
      response_variable: work_days
      alias: List Grace's morning work days occurring on Grace's Next Alarm
      action: calendar.get_events
    - data:
        start_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
          = 0, minute = 0) }}'
        end_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
          = 0, minute = 0) + timedelta(days = 1) }}'
      target:
        entity_id:
        - calendar.eli_school_days
        - calendar.elena_school_days
      response_variable: school_days
      alias: List school days occurring on Grace's Next Alarm
      action: calendar.get_events
    - repeat:
        until:
        - alias: Alarm day is in the future
          condition: template
          value_template: '{{ now().date() < as_datetime(states(''input_datetime.graces_next_alarm'')).date()
            }}'
        - condition: or
          conditions:
          - alias: Grace has a work day
            condition: template
            value_template: '{{ work_days[''calendar.grace_work_days''].events | length
              > 0 }}'
          - alias: Eli has a school day and it is on Mon or Fri
            condition: template
            value_template: "{% set output = false %} {% if school_days['calendar.eli_school_days'].events
              | length > 0 %}\n  {% if as_datetime(school_days['calendar.eli_school_days'].events[0].start).weekday()
              in [0,4] %}\n    {% set output = true %}\n  {% endif %}\n{% endif %}
              {{ output }}"
          - alias: Elena has a school day and it is on Tue, Wed, Thu or Sat
            condition: template
            value_template: "{% set output = false %} {% if school_days['calendar.elena_school_days'].events
              | length > 0 %}\n  {% if as_datetime(school_days['calendar.elena_school_days'].events[0].start).weekday()
              in [1,2,3,5] %}\n    {% set output = true %}\n  {% endif %}\n{% endif
              %} {{ output }}"
        sequence:
        - data:
            date: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).date()
              + timedelta(days = 1) }}'
          target:
            entity_id: input_datetime.graces_next_alarm
          alias: Increment alarm by 1 day
          action: input_datetime.set_datetime
        - data:
            start_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
              = 9, minute = 30) }}'
            end_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
              = 12, minute = 0) }}'
          target:
            entity_id: calendar.grace_work_days
          response_variable: work_days
          alias: List Grace's morning work days occurring on Grace's Next Alarm
          action: calendar.get_events
        - data:
            start_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
              = 0, minute = 0) }}'
            end_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
              = 0, minute = 0) + timedelta(days = 1) }}'
          target:
            entity_id:
            - calendar.eli_school_days
            - calendar.elena_school_days
          response_variable: school_days
          alias: List school days occurring on Grace's Next Alarm
          action: calendar.get_events
  - data:
      start_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
        = 0, minute = 0) }}'
      end_date_time: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).replace(hour
        = 0, minute = 0) + timedelta(days = 1) }}'
    target:
      entity_id:
      - calendar.eli_school_days
      - calendar.elena_school_days
    response_variable: school_days
    alias: List school days occurring on Grace's Next Alarm
    action: calendar.get_events
  - choose:
    - conditions:
      - alias: If Elena has school on Tue, Wed, Thu or Sat
        condition: template
        value_template: "{% set output = false %}\n{% if school_days['calendar.elena_school_days'].events
          | length > 0 %}\n  {% if as_datetime(school_days['calendar.elena_school_days'].events[0].start).weekday()
          in [1,2,3,5] %}\n    {% set output = true %}\n  {% endif %}\n{% endif %}\n{{
          output }}"
      sequence:
      - if:
        - alias: Alarm is on a weekday
          condition: template
          value_template: '{{ as_datetime(states(''input_datetime.graces_next_alarm'')).weekday()
            < 5 }}'
        then:
        - data:
            time: '{{ states(''input_datetime.elenas_school_day_alarm'') }}'
          target:
            entity_id: input_datetime.graces_next_alarm
          alias: Set Grace's Next Alarm to Elena's School Day Alarm
          action: input_datetime.set_datetime
        - data:
            datetime: '{{ as_datetime(states(''input_datetime.graces_next_alarm''))
              - timedelta(minutes = 5) }}'
          target:
            entity_id: input_datetime.graces_next_alarm
          alias: Set Grace's Next Alarm 5min before Elena's alarm
          action: input_datetime.set_datetime
        else:
        - data:
            time: '{{ states(''input_datetime.eca_day_alarm'') }}'
          target:
            entity_id: input_datetime.graces_next_alarm
          alias: Set Grace's Next Alarm to ECA Day Alarm
          action: input_datetime.set_datetime
        - data:
            datetime: '{{ as_datetime(states(''input_datetime.graces_next_alarm''))
              - timedelta(minutes = 10) }}'
          target:
            entity_id: input_datetime.graces_next_alarm
          alias: Set Grace's Next Alarm 10min before kids' alarm
          action: input_datetime.set_datetime
    - conditions:
      - alias: If Eli has school on Mon or Fri
        condition: template
        value_template: "{% set output = false %} \n{% if school_days['calendar.eli_school_days'].events
          | length > 0 %}\n  {% if as_datetime(school_days['calendar.eli_school_days'].events[0].start).weekday()
          in [0,4] %}\n    {% set output = true %}\n  {% endif %}\n{% endif %} \n{{
          output }}"
      sequence:
      - data:
          time: '{{ states(''input_datetime.elis_school_day_alarm'') }}'
        target:
          entity_id: input_datetime.graces_next_alarm
        alias: Set Grace's Next Alarm to Eli's School Day Alarm
        action: input_datetime.set_datetime
      - data:
          datetime: '{{ as_datetime(states(''input_datetime.graces_next_alarm''))
            - timedelta(minutes = 10) }}'
        target:
          entity_id: input_datetime.graces_next_alarm
        alias: Set Grace's Next Alarm 10min before Eli's alarm
        action: input_datetime.set_datetime
    default:
    - data:
        time: '{{ states(''input_datetime.graces_work_day_alarm'') }}'
      target:
        entity_id: input_datetime.graces_next_alarm
      alias: Set Grace's Next Alarm to Grace's Work Day Alarm
      action: input_datetime.set_datetime
  mode: single
  max_exceeded: silent
- id: '1735634631542'
  alias: Elena's Room Controller
  description: Control Elena's Room Lights, Fan, AC and Curtain
  use_blueprint:
    path: EPMatt/ikea_e2001_e2002.yaml
    input:
      integration: ZHA
      controller_device: bcfa3b3429c3ad745cc8299a3d74e3d3
      helper_last_controller_event: input_text.zz_elena_s_room_lights_controller_last_event
      action_button_up_short:
      - if:
        - condition: state
          entity_id: light.elenas_room_lights
          state: 'off'
        then:
        - action: script.lights_controller
          metadata: {}
          data:
            lights:
            - light.elenas_room_lights
            command: lights_on
        else:
        - action: script.lights_controller
          metadata: {}
          data:
            lights:
            - light.elenas_room_lights
            command: lights_off
      action_button_up_long:
      - if:
        - condition: numeric_state
          entity_id: light.elenas_room_lights
          attribute: brightness
          above: 127
        then:
        - repeat:
            sequence:
            - action: script.lights_controller
              metadata: {}
              data:
                lights:
                - light.elenas_room_lights
                command: lights_darken
            - delay: 1
            while:
            - condition: template
              value_template: '{{ ''move'' in states(''input_text.zz_elena_s_room_lights_controller_last_event'')
                }}'
        else:
        - repeat:
            sequence:
            - action: script.lights_controller
              metadata: {}
              data:
                lights:
                - light.elenas_room_lights
                command: lights_brighten
            - delay: 1
            while:
            - condition: template
              value_template: '{{ ''move'' in states(''input_text.zz_elena_s_room_lights_controller_last_event'')
                }}'
      action_button_down_short:
      - choose:
        - conditions:
          - condition: state
            entity_id: cover.elenas_room_curtains
            state:
            - closed
            - closing
          sequence:
          - action: script.cover_controller
            metadata: {}
            data:
              cover: cover.elenas_room_curtains
              command: cover_open
        - conditions:
          - condition: state
            entity_id: cover.elenas_room_curtains
            state:
            - opening
          sequence:
          - action: script.cover_controller
            metadata: {}
            data:
              cover: cover.elenas_room_curtains
              command: cover_close
        default:
        - if:
          - condition: numeric_state
            entity_id: cover.elenas_room_curtains
            attribute: current_position
            above: 50.5
          then:
          - action: script.cover_controller
            metadata: {}
            data:
              cover: cover.elenas_room_curtains
              command: cover_close
          else:
          - action: script.cover_controller
            metadata: {}
            data:
              cover: cover.elenas_room_curtains
              command: cover_open
      action_button_down_long:
      - if:
        - condition: state
          entity_id: automation.elenas_room_curtains_auto_control
          state: 'off'
        then:
        - action: script.cover_controller
          metadata: {}
          data:
            command: cover_auto_control
            cover: cover.elenas_room_curtains
        else:
        - action: script.cover_controller
          metadata: {}
          data:
            command: cover_manual_control
            cover: cover.elenas_room_curtains
      button_up_long_loop: false
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: false
      button_down_long_max_loop_repeats: 50
      action_button_left_short:
      - if:
        - condition: state
          entity_id: fan.elenas_room_fan
          state: 'off'
        then:
        - action: script.fan_controller
          metadata: {}
          data:
            fan: fan.elenas_room_fan
            command: fan_on
        else:
        - action: script.fan_controller
          metadata: {}
          data:
            fan: fan.elenas_room_fan
            command: fan_off
      action_button_left_long:
      - if:
        - condition: numeric_state
          entity_id: fan.elenas_room_fan
          attribute: percentage
          above: 51
        then:
        - repeat:
            sequence:
            - action: script.fan_controller
              metadata: {}
              data:
                fan: fan.elenas_room_fan
                command: fan_slow_down
            - delay: 2
            while:
            - condition: template
              value_template: '{{ ''hold'' in states(''input_text.zz_elena_s_room_lights_controller_last_event'')
                }}'
        else:
        - repeat:
            sequence:
            - action: script.fan_controller
              metadata: {}
              data:
                fan: fan.elenas_room_fan
                command: fan_speed_up
            - delay: 2
            while:
            - condition: template
              value_template: '{{ ''hold'' in states(''input_text.zz_elena_s_room_lights_controller_last_event'')
                }}'
      action_button_right_short:
      - if:
        - condition: state
          entity_id: climate.elenas_room_ac
          state: 'off'
        then:
        - action: script.ac_controller
          metadata: {}
          data:
            ac: climate.elenas_room_ac
            command: ac_on
        else:
        - action: script.ac_controller
          metadata: {}
          data:
            ac: climate.elenas_room_ac
            command: ac_off
      action_button_right_long:
      - if:
        - condition: numeric_state
          entity_id: climate.elenas_room_ac
          attribute: temperature
          above: 25.4
        then:
        - repeat:
            sequence:
            - action: script.ac_controller
              metadata: {}
              data:
                ac: climate.elenas_room_ac
                command: ac_colder
            - delay: 2
            while:
            - condition: template
              value_template: '{{ ''hold'' in states(''input_text.zz_elena_s_room_lights_controller_last_event'')
                }}'
        else:
        - repeat:
            sequence:
            - action: script.ac_controller
              metadata: {}
              data:
                ac: climate.elenas_room_ac
                command: ac_warmer
            - delay: 2
            while:
            - condition: template
              value_template: '{{ ''hold'' in states(''input_text.zz_elena_s_room_lights_controller_last_event'')
                }}'
      button_left_long_loop: false
      button_left_long_max_loop_repeats: 50
      button_right_long_loop: false
      button_right_long_max_loop_repeats: 50
      action_button_up_double:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.elenas_room_lights
          command: set_recommended_room_scene
      action_button_down_double:
      - action: script.lights_controller
        metadata: {}
        data:
          lights:
          - light.elenas_room_lights
          command: turn_off_room
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
      action_button_left_double:
      - if:
        - condition: state
          entity_id: fan.elenas_room_fan
          attribute: direction
          state: forward
        then:
        - action: script.fan_controller
          metadata: {}
          data:
            fan: fan.elenas_room_fan
            command: fan_reverse
        else:
        - action: script.fan_controller
          metadata: {}
          data:
            fan: fan.elenas_room_fan
            command: fan_forward
      action_button_right_double:
      - if:
        - condition: state
          entity_id: automation.elenas_room_fan_auto_control
          state: 'on'
        then:
        - action: script.ac_controller
          metadata: {}
          data:
            ac: climate.elenas_room_ac
            command: cooling_manual_control
        else:
        - action: script.ac_controller
          metadata: {}
          data:
            ac: climate.elenas_room_ac
            command: cooling_auto_control
      button_left_double_press: true
      button_right_double_press: true
