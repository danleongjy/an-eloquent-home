- id: '1643640720985'
  alias: Dining Room Lights Controller 1
  description: Control the Dining Room Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 0df2cd0b0fa9112188778c56db622911
      helper_last_controller_event: input_text.zz_dining_room_lights_controller_1_last_event
      action_button_up_short:
      - if:
        - condition: state
          entity_id: input_boolean.away_mode
          state: 'on'
        then:
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.away_mode
        else:
        - service: script.set_recommended_scene_in_dining_room
          data: {}
        - service: script.set_recommended_scene_in_living_room
          data: {}
      action_button_up_long:
      - service: light.turn_on
        target:
          entity_id:
          - light.dining_room_lights
          - light.dining_room_pendant_light_entity
        data:
          brightness_step_pct: '{{ states(''input_number.light_brightness_change_step'')
            }}'
      action_button_down_short:
      - service: script.turn_off_living_room
        data: {}
      - service: script.turn_off_dining_room
        data: {}
      action_button_down_long:
      - service: light.turn_on
        target:
          entity_id:
          - light.dining_room_lights
          - light.dining_room_pendant_light_entity
        data:
          brightness_step_pct: -{{ states('input_number.light_brightness_change_step')
            }}
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
      action_button_down_double:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.away_mode
      button_down_double_press: true
      helper_double_press_delay: 500
- id: '1643641285314'
  alias: Dining Room Lights Controller 2
  description: Control the Dining Room Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: cea5083fc6a1972a0b57048ffa03cfd8
      helper_last_controller_event: input_text.zz_dining_room_lights_controller_2_last_event
      action_button_up_short:
      - choose:
        - conditions:
          - condition: time
            after: input_datetime.wind_down
          - condition: state
            entity_id: input_boolean.wind_down_lights
            state: 'on'
          sequence:
          - service: light.turn_on
            target:
              entity_id:
              - light.dining_room_lights
              - light.dining_room_pendant_light_entity
            data:
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
        - conditions:
          - condition: sun
            before: sunrise
          sequence:
          - service: light.turn_on
            target:
              entity_id:
              - light.dining_room_lights
              - light.dining_room_pendant_light_entity
            data:
              brightness_pct: '{{ states(''input_number.morning_light_brightness'')
                }}'
        default:
        - service: light.turn_on
          target:
            entity_id:
            - light.dining_room_lights
            - light.dining_room_pendant_light_entity
          data:
            brightness_pct: 100
      action_button_up_long:
      - service: light.turn_on
        target:
          entity_id:
          - light.dining_room_lights
          - light.dining_room_pendant_light_entity
        data:
          brightness_step_pct: '{{ states(''input_number.light_brightness_change_step'')
            }}'
      action_button_down_short:
      - service: light.turn_off
        target:
          entity_id:
          - light.dining_room_lights
          - light.dining_room_pendant_light_entity
        data: {}
      action_button_down_long:
      - service: light.turn_on
        target:
          entity_id:
          - light.dining_room_lights
          - light.dining_room_pendant_light_entity
        data:
          brightness_step_pct: -{{ states('input_number.light_brightness_change_step')
            }}
      button_up_long_max_loop_repeats: 50
      button_down_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_up_long_loop: true
      action_button_up_double:
      - service: script.set_recommended_scene_in_dining_room
        data: {}
      action_button_down_double:
      - service: script.turn_off_dining_room
        data: {}
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1643641631013'
  alias: Playroom Lights Controller
  description: Control the Playroom Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 867b78e6f7808ffcceb260be52b0c174
      helper_last_controller_event: input_text.zz_playroom_lights_controller_last_event
      action_button_up_short:
      - choose:
        - conditions:
          - condition: time
            after: input_datetime.wind_down
          - condition: state
            entity_id: input_boolean.wind_down_lights
            state: 'on'
          sequence:
          - service: light.turn_on
            target:
              entity_id:
              - light.playroom_lights
              - light.yard_light_entity
            data:
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
        - conditions:
          - condition: sun
            before: sunrise
          sequence:
          - service: light.turn_on
            target:
              entity_id:
              - light.playroom_lights
              - light.yard_light_entity
            data:
              brightness_pct: '{{ states(''input_number.morning_light_brightness'')
                }}'
        default:
        - service: light.turn_on
          target:
            entity_id:
            - light.playroom_lights
            - light.yard_light_entity
          data:
            brightness_pct: 100
      action_button_up_long:
      - service: light.turn_on
        target:
          entity_id:
          - light.playroom_lights
          - light.yard_light_entity
        data:
          brightness_step_pct: '{{ states(''input_number.light_brightness_change_step'')
            }}'
      action_button_down_short:
      - service: light.turn_off
        target:
          entity_id:
          - light.playroom_lights
          - light.yard_light_entity
        data: {}
      action_button_down_long:
      - service: light.turn_on
        target:
          entity_id:
          - light.playroom_lights
          - light.yard_light_entity
        data:
          brightness_step_pct: -{{ states('input_number.light_brightness_change_step')
            }}
      button_up_long_max_loop_repeats: 50
      button_down_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_up_long_loop: true
- id: '1643642651826'
  alias: Hallway Motion
  description: Control the Hallway Lights with motion
  trigger:
  - platform: state
    entity_id: binary_sensor.hallway_motion
    id: motion
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: binary_sensor.hallway_motion
    id: no_motion
    from: 'on'
    to: 'off'
  condition: []
  action:
  - if:
    - condition: trigger
      id: motion
    - condition: or
      conditions:
      - condition: numeric_state
        entity_id: sensor.hallway_lux
        below: input_number.minimum_lux
      - condition: state
        entity_id: light.dining_room_lights
        state: 'on'
      - condition: state
        entity_id: light.dining_room_pendant_light_entity
        state: 'on'
    then:
    - choose:
      - conditions:
        - condition: time
          after: input_datetime.elenas_wind_down
        - condition: state
          entity_id: input_boolean.wind_down_lights
          state: 'on'
        sequence:
        - service: light.turn_on
          data:
            brightness_pct: '{{ states(''input_number.night_light_brightness'') }}'
          target:
            entity_id: light.hallway_bulb_1_entity
      - conditions:
        - condition: time
          before: input_datetime.elenas_wind_down
        sequence:
        - if:
          - condition: sun
            before: sunrise
          then:
          - service: light.turn_on
            data:
              brightness_pct: '{{ states(''input_number.morning_light_brightness'')
                }}'
            target:
              entity_id: light.hallway_lights
          else:
          - service: light.turn_on
            data:
              brightness_pct: 100
            target:
              entity_id: light.hallway_lights
      default:
      - service: light.turn_on
        data:
          brightness_pct: 100
        target:
          entity_id: light.hallway_lights
    else:
    - service: light.turn_off
      target:
        entity_id: light.hallway_lights
      data: {}
  mode: single
- id: '1643643181661'
  alias: Dining Room AC Controller
  description: Control the Dining Room AC
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 6e3bab771f635d9d237ea94a56bbf115
      helper_last_controller_event: input_text.zz_dining_room_ac_controller_last_event
      action_button_up_short:
      - service: climate.turn_on
        data: {}
        target:
          entity_id: climate.dining_room_ac
      action_button_up_long:
      - service: climate.set_temperature
        target:
          entity_id: climate.dining_room_ac
        data:
          temperature: "{% if state_attr('climate.dining_room_ac', 'temperature')
            < 27 %}\n  {{ state_attr('climate.dining_room_ac', 'temperature') + 1
            }}\n{% else %}\n  27\n{% endif %}\n"
      action_button_down_short:
      - service: climate.turn_off
        data: {}
        target:
          entity_id: climate.dining_room_ac
      action_button_down_long:
      - service: climate.set_temperature
        target:
          entity_id: climate.dining_room_ac
        data:
          temperature: "{% if state_attr('climate.dining_room_ac', 'temperature')
            > 24 %}\n  {{ state_attr('climate.dining_room_ac', 'temperature') - 1
            }}\n{% else %}\n  24\n{% endif %}\n"
- id: '1643643631965'
  alias: Dining Room Fan Controller
  description: Control the Dining Room Fan
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 2c65aa31e07cc74bcef34dfa0d22d784
      helper_last_controller_event: input_text.zz_dining_room_fan_controller_last_event
      action_button_up_short:
      - service: fan.turn_on
        target:
          entity_id: fan.dining_room_fan
        data: {}
      action_button_down_short:
      - service: fan.turn_off
        target:
          entity_id: fan.dining_room_fan
        data: {}
      action_button_down_long:
      - choose:
        - conditions:
          - condition: numeric_state
            entity_id: fan.dining_room_fan
            attribute: percentage
            below: '20'
          sequence:
          - service: fan.turn_off
            data: {}
            target:
              entity_id: fan.dining_room_fan
        default:
        - service: fan.decrease_speed
          data: {}
          target:
            entity_id: fan.dining_room_fan
      action_button_up_long:
      - service: fan.increase_speed
        target:
          entity_id: fan.dining_room_fan
        data: {}
      action_button_up_double:
      - service: fan.set_direction
        data:
          direction: reverse
        target:
          entity_id: fan.dining_room_fan
      action_button_down_double:
      - service: fan.set_direction
        data:
          direction: forward
        target:
          entity_id: fan.dining_room_fan
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1643644178195'
  alias: Powder Room Lights Controller
  description: Control the Powder Room Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 8fd4f8715be89cc0f383c887c3fac892
      helper_last_controller_event: input_text.zz_powder_room_lights_controller_last_event
      action_button_up_short:
      - choose:
        - conditions:
          - condition: time
            after: input_datetime.wind_down
            before: input_datetime.sleep_hours_end
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.powder_room_pendant_light_entity
            data:
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
        - conditions:
          - condition: sun
            before: sunrise
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.powder_room_pendant_light_entity
            data:
              brightness_pct: '{{ states(''input_number.morning_light_brightness'')
                }}'
        default:
        - service: light.turn_on
          target:
            entity_id: light.powder_room_pendant_light_entity
          data:
            brightness_pct: 100
      action_button_up_long:
      - service: light.turn_on
        target:
          entity_id: light.powder_room_pendant_light_entity
        data:
          brightness_step_pct: '{{ states(''input_number.light_brightness_change_step'')
            }}'
      action_button_down_short:
      - service: light.turn_off
        target:
          entity_id: light.powder_room_pendant_light_entity
        data: {}
      action_button_down_long:
      - service: light.turn_on
        target:
          entity_id: light.powder_room_pendant_light_entity
        data:
          brightness_step_pct: -{{ states('input_number.light_brightness_change_step')
            }}
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
- id: '1643644997118'
  alias: Eli's Room Fan Controller
  description: Control Eli's Room Fan
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: f70176647fea31ee95539e565e16e9be
      helper_last_controller_event: input_text.zz_eli_s_room_fan_controller_last_event
      action_button_up_short:
      - service: fan.turn_on
        target:
          entity_id: fan.elis_room_fan
        data: {}
      action_button_up_long:
      - service: fan.increase_speed
        target:
          entity_id: fan.elis_room_fan
        data: {}
      action_button_down_short:
      - service: fan.turn_off
        target:
          entity_id: fan.elis_room_fan
        data: {}
      action_button_down_long:
      - choose:
        - conditions:
          - condition: numeric_state
            entity_id: fan.elis_room_fan
            attribute: percentage
            below: '20'
          sequence:
          - service: fan.turn_off
            data: {}
            target:
              entity_id: fan.elis_room_fan
        default:
        - service: fan.decrease_speed
          data: {}
          target:
            entity_id: fan.elis_room_fan
      action_button_up_double:
      - service: fan.set_direction
        data:
          direction: reverse
        target:
          entity_id: fan.elis_room_fan
      action_button_down_double:
      - service: fan.set_direction
        data:
          direction: forward
        target:
          entity_id: fan.elis_room_fan
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1643645339926'
  alias: Eli's Room AC Controller
  description: Control Eli's Room AC
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 729379c869fac5a454929998eba2f3d2
      action_button_up_short:
      - service: climate.turn_on
        target:
          entity_id: climate.elis_room_ac
        data: {}
      action_button_up_long:
      - service: climate.set_temperature
        target:
          entity_id: climate.elis_room_ac
        data:
          temperature: "{% if state_attr('climate.elis_room_ac', 'temperature') <
            27 %}\n  {{ state_attr('climate.elis_room_ac', 'temperature') + 1 }}\n{%
            else %}\n  27\n{% endif %}\n"
      action_button_down_short:
      - service: climate.turn_off
        target:
          entity_id: climate.elis_room_ac
        data: {}
      action_button_down_long:
      - service: climate.set_temperature
        target:
          entity_id: climate.elis_room_ac
        data:
          temperature: "{% if state_attr('climate.elis_room_ac', 'temperature') >
            24 %}\n  {{ state_attr('climate.elis_room_ac', 'temperature') - 1 }}\n{%
            else %}\n  24\n{% endif %}\n"
      helper_last_controller_event: input_text.zz_eli_s_room_ac_controller_last_event
      action_button_up_double:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.elis_room_ac_auto_control
      action_button_down_double:
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.elis_room_ac_auto_control
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1643645804516'
  alias: Elena's Room Fan Controller
  description: Control Elena's Room Fan
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: ea611248af61d7f5dc06e3a824288132
      helper_last_controller_event: input_text.zz_elena_s_room_fan_controller_last_event
      action_button_up_short:
      - service: fan.turn_on
        target:
          entity_id: fan.elenas_room_fan
        data: {}
      action_button_up_long:
      - service: fan.increase_speed
        target:
          entity_id: fan.elenas_room_fan
        data: {}
      action_button_down_short:
      - service: fan.turn_off
        target:
          entity_id: fan.elenas_room_fan
        data: {}
      action_button_down_long:
      - service: fan.decrease_speed
        data: {}
        target:
          entity_id: fan.elenas_room_fan
      action_button_up_double:
      - service: fan.set_direction
        data:
          direction: reverse
        target:
          entity_id: fan.elenas_room_fan
      action_button_down_double:
      - service: fan.set_direction
        data:
          direction: forward
        target:
          entity_id: fan.elenas_room_fan
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1643646541355'
  alias: Junior Bathroom Lights Controller
  description: Control the Junior Bathroom Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: f084f2e55c0800941585a50dd83e5f47
      helper_last_controller_event: input_text.zz_junior_bathroom_lights_controller_last_event
      action_button_up_short:
      - choose:
        - conditions:
          - condition: time
            after: input_datetime.elenas_bedtime
          - condition: state
            entity_id: input_boolean.wind_down_lights
            state: 'on'
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.junior_bathroom_lights
            data:
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
        - conditions:
          - condition: sun
            before: sunrise
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.junior_bathroom_lights
            data:
              brightness_pct: '{{ states(''input_number.morning_light_brightness'')
                }}'
        default:
        - service: light.turn_on
          target:
            entity_id: light.junior_bathroom_lights
          data:
            brightness_pct: 100
      action_button_up_long:
      - service: light.turn_on
        target:
          entity_id: light.junior_bathroom_lights
        data:
          brightness_step_pct: '{{ states(''input_number.light_brightness_change_step'')
            }}'
      action_button_down_short:
      - service: light.turn_off
        target:
          entity_id: light.junior_bathroom_lights
        data: {}
      action_button_down_long:
      - service: light.turn_on
        target:
          entity_id: light.junior_bathroom_lights
        data:
          brightness_step_pct: -{{ states('input_number.light_brightness_change_step')
            }}
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
- id: '1643721003621'
  alias: AC Auto Control at Night
  description: Turn on AC Auto Control at night in rooms where fans are on
  trigger:
  - platform: time
    id: start
    at: input_datetime.ac_auto_control_start
  - platform: time
    at: input_datetime.ac_auto_control_end
    id: end
  condition: []
  action:
  - if:
    - condition: trigger
      id: start
    then:
    - if:
      - condition: or
        conditions:
        - condition: state
          entity_id: fan.elenas_room_fan
          state: 'on'
        - condition: state
          entity_id: climate.elenas_room_ac
          state: cool
      then:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.elenas_room_ac_auto_control
    - if:
      - condition: or
        conditions:
        - condition: state
          entity_id: fan.elis_room_fan
          state: 'on'
        - condition: state
          entity_id: climate.elis_room_ac
          state: cool
      then:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.elis_room_ac_auto_control
    - if:
      - condition: or
        conditions:
        - condition: state
          entity_id: fan.parents_room_fan
          state: 'on'
        - condition: state
          entity_id: climate.parents_room_ac
          state: cool
      then:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.parents_room_ac_auto_control
    else:
    - service: automation.turn_off
      data: {}
      target:
        entity_id:
        - automation.elenas_room_ac_auto_control
        - automation.elis_room_ac_auto_control
        - automation.parents_room_ac_auto_control
    - service: climate.turn_off
      data: {}
      target:
        entity_id:
        - climate.elenas_room_ac
        - climate.elis_room_ac
        - climate.parents_room_ac
  mode: single
- id: '1643973685368'
  alias: Notify When Vacuum Undocked
  description: Send a persistent notification if the vacuum is undocked and idle and
    dismiss it when it stops being idle
  trigger:
  - platform: state
    entity_id: vacuum.pikachu
    id: idle
    to: idle
  - platform: state
    entity_id: vacuum.pikachu
    id: not_idle
    from: idle
  condition: []
  action:
  - if:
    - condition: trigger
      id: idle
    then:
    - service: notify.mobile_app_pixel_4a
      data:
        message: Vacuum not docked properly
        title: Please manually dock vacuum
        data:
          tag: vacuum_undocked
    - service: notify.mobile_app_grace
      data:
        message: Vacuum not docked properly
        title: Please manually dock vacuum
        data:
          tag: vacuum_undocked
    else:
    - service: notify.mobile_app_pixel_4a
      data:
        message: clear_notification
        data:
          tag: vacuum_undocked
    - service: notify.mobile_app_grace
      data:
        message: clear_notification
        data:
          tag: vacuum_undocked
  mode: single
- id: '1643979293415'
  alias: Notify When AC On With Doors Open
  description: Send a persistent notification when AC is on with doors open, and clear
    notification when no AC is on with doors open
  trigger:
  - platform: state
    entity_id: binary_sensor.ac_on_with_doors_open
    id: notify
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - platform: state
    entity_id: binary_sensor.ac_on_with_doors_open
    id: clear
    from: 'on'
    to: 'off'
  condition: []
  action:
  - if:
    - condition: trigger
      id: notify
    then:
    - service: notify.mobile_app_pixel_4a
      data:
        message: AC on with doors and windows open
        title: Please close the doors and windows
        data:
          tag: doors_open
    - service: notify.mobile_app_grace
      data:
        message: AC on with doors and windows open
        title: Please close the doors and windows
        data:
          tag: doors_open
    else:
    - service: notify.mobile_app_pixel_4a
      data:
        message: clear_notification
        data:
          tag: doors_open
    - service: notify.mobile_app_grace
      data:
        message: clear_notification
        data:
          tag: doors_open
  mode: single
- id: '1643979577174'
  alias: Notify When Wash Completed
  description: Send a persistent notification when washer is finished, and clear notification
    when washer is unloaded
  trigger:
  - platform: state
    entity_id:
    - input_boolean.washer_load_clean
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.washer_load_clean
      state: 'on'
    then:
    - service: notify.mobile_app_pixel_4a
      data:
        title: Please unload laundry
        message: Wash completed at {{ (now() | string)[11:16] }}
        data:
          tag: washer_load_clean
    - service: notify.mobile_app_grace
      data:
        title: Please unload laundry
        message: Wash completed at {{ (now() | string)[11:16] }}
        data:
          tag: washer_load_clean
    else:
    - service: notify.mobile_app_pixel_4a
      data:
        message: clear_notification
        data:
          tag: washer_load_clean
    - service: notify.mobile_app_grace
      data:
        message: clear_notification
        data:
          tag: washer_load_clean
  mode: single
- id: '1644145378905'
  alias: Powder Room Motion
  description: Control the Powder Room Lights with motion
  trigger:
  - platform: state
    entity_id:
    - input_boolean.powder_room_occupancy
    id: motion
    to: 'on'
  - platform: state
    entity_id:
    - input_boolean.powder_room_occupancy
    to: 'off'
  condition: []
  action:
  - if:
    - condition: trigger
      id: motion
    then:
    - if:
      - condition: time
        after: input_datetime.elenas_wind_down
      - condition: state
        entity_id: input_boolean.wind_down_lights
        state: 'on'
      then:
      - condition: state
        entity_id: light.powder_room_pendant_light_entity
        state: 'off'
        for:
          hours: 0
          minutes: 0
          seconds: 2
      - service: light.turn_on
        target:
          entity_id: light.powder_room_pendant_light_entity
        data:
          brightness_pct: '{{ states(''input_number.night_light_brightness'') }}'
      else:
      - condition: state
        entity_id: light.powder_room_pendant_light_entity
        state: 'off'
        for:
          hours: 0
          minutes: 0
          seconds: 2
      - if:
        - condition: sun
          before: sunrise
        then:
        - service: light.turn_on
          target:
            entity_id: light.powder_room_pendant_light_entity
          data:
            brightness_pct: '{{ states(''input_number.morning_light_brightness'')
              }}'
        else:
        - service: light.turn_on
          target:
            entity_id: light.powder_room_pendant_light_entity
          data:
            brightness_pct: 100
    else:
    - service: light.turn_off
      target:
        entity_id: light.powder_room_pendant_light_entity
      data: {}
  mode: single
- id: '1648699866610'
  alias: Notify When Vacuum Running with Doors Open
  description: Send a notification if the vacuum is cleaning when bathroom or main
    doors are open, pause the vacuum after 1min if doors are still open, and dismiss
    the notification when vacuum stops cleaning or bathroom doors are closed. If all
    doors are closed again while vacuum is paused, resume cleaning.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.vacuum_running_with_doors_open
    id: error_state
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.vacuum_running_with_doors_open
    id: error_cleared
    to: 'off'
  - platform: state
    entity_id:
    - binary_sensor.junior_bathroom_door
    - binary_sensor.powder_room_door
    - binary_sensor.master_bathroom_door
    - binary_sensor.main_door
    from: 'on'
    to: 'off'
    id: door_closed
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: error_cleared
      sequence:
      - service: notify.mobile_app_pixel_4a
        data:
          message: clear_notification
          data:
            tag: vacuum_running_with_bathroom_doors_open
      - service: notify.mobile_app_grace
        data:
          message: clear_notification
          data:
            tag: vacuum_running_with_bathroom_doors_open
    - conditions:
      - condition: trigger
        id: error_state
      sequence:
      - service: notify.mobile_app_pixel_4a
        data:
          message: Otherwise, vacuum will pause at {{ ((now() + timedelta(minutes
            = 1)).time() | string)[:5] }}.
          title: Please close bathroom/main doors
          data:
            tag: vacuum_running_with_bathroom_doors_open
      - service: notify.mobile_app_grace
        data:
          message: Otherwise, vacuum will pause at {{ ((now() + timedelta(minutes
            = 1)).time() | string)[:5] }}.
          title: Please close bathroom/main doors
          data:
            tag: vacuum_running_with_bathroom_doors_open
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - condition: state
        entity_id: binary_sensor.vacuum_running_with_doors_open
        state: 'on'
        for:
          hours: 0
          minutes: 0
          seconds: 0
      - service: vacuum.pause
        data: {}
        target:
          entity_id: vacuum.pikachu
    - conditions:
      - condition: trigger
        id: door_closed
      sequence:
      - condition: state
        entity_id:
        - binary_sensor.junior_bathroom_door
        - binary_sensor.powder_room_door
        - binary_sensor.main_door
        - binary_sensor.master_bathroom_door
        state: 'off'
      - condition: state
        entity_id: vacuum.pikachu
        state: paused
      - service: vacuum.start
        data: {}
        target:
          entity_id: vacuum.pikachu
  mode: parallel
- id: '1648784734226'
  alias: Notify When Dishwasher Cooldown Completed
  description: Send a persistent notification when dishwasher load is clean, and clear
    notification when dishwasher is unloaded
  trigger:
  - platform: state
    entity_id:
    - input_boolean.dishwasher_load_clean
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.dishwasher_load_clean
      state: 'on'
    then:
    - service: notify.mobile_app_pixel_4a
      data:
        message: Dishwasher cooled down at {{ (now().time()| string)[:5] }}.
        title: Please open dishwasher
        data:
          tag: dishwasher_load_clean
    - service: notify.mobile_app_grace
      data:
        title: Please open dishwasher
        message: Dishwasher cooled down at {{ (now().time()| string)[:5] }}.
        data:
          tag: dishwasher_load_clean
    else:
    - service: notify.mobile_app_pixel_4a
      data:
        message: clear_notification
        data:
          tag: dishwasher_load_clean
    - service: notify.mobile_app_grace
      data:
        message: clear_notification
        data:
          tag: dishwasher_load_clean
  mode: single
- id: '1648798677481'
  alias: Coming Home
  description: Set light, fan and AC levels in the Dining Room when coming home
  trigger:
  - platform: state
    entity_id: binary_sensor.main_door
    to: 'on'
  condition:
  - condition: state
    state: 'on'
    for:
      hours: 0
      minutes: 3
      seconds: 0
    entity_id: input_boolean.away_mode
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.away_mode
  - service: script.set_recommended_scene_in_dining_room
    data: {}
  - service: script.set_recommended_scene_in_living_room
    data: {}
  mode: single
- id: '1653105007378'
  alias: Notify When Raining With Windows Open
  description: Send a persistent notification if it is raining heavily with windows
    open, and dismiss it if the windows are closed or it is not raining heavily anymore
  trigger:
  - platform: state
    entity_id: sensor.raining_with_windows_open
    to:
  condition: []
  action:
  - if:
    - condition: state
      entity_id: sensor.raining_with_windows_open
      state: alert
    then:
    - service: notify.mobile_app_pixel_4a
      data:
        title: Please close windows
        message: Windows open in heavy rain
        data:
          tag: windows_open_raining
    - service: notify.mobile_app_grace
      data:
        message: Windows open in heavy rain
        title: Please close windows
        data:
          tag: windows_open_raining
    else:
    - service: notify.mobile_app_pixel_4a
      data:
        message: clear_notification
        data:
          tag: windows_open_raining
    - service: notify.mobile_app_grace
      data:
        message: clear_notification
        data:
          tag: windows_open_raining
  mode: single
  max_exceeded: silent
- id: '1653280933582'
  alias: Dishwasher Set State
  description: Set the state of the dishwasher based on its power consumption
  trigger:
  - platform: numeric_state
    entity_id: sensor.dishwasher_watts
    above: '4'
    id: washing
  - platform: numeric_state
    entity_id: sensor.dishwasher_watts
    above: '0'
    below: '5'
    id: idle
  - platform: state
    entity_id:
    - sensor.dishwasher_watts
    to: '0'
    id: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: washing
      sequence:
      - service: input_select.select_option
        data:
          option: Washing
        target:
          entity_id: input_select.dishwasher_status
    - conditions:
      - condition: trigger
        id: idle
      sequence:
      - if:
        - condition: state
          entity_id: input_select.dishwasher_status
          state: Washing
        then:
        - service: input_select.select_option
          data:
            option: Cooling
          target:
            entity_id: input_select.dishwasher_status
        else:
        - service: input_select.select_option
          data:
            option: Standby
          target:
            entity_id: input_select.dishwasher_status
    default:
    - service: input_select.select_option
      data:
        option: 'Off'
      target:
        entity_id: input_select.dishwasher_status
  mode: queued
- id: '1654959141053'
  alias: Water Heater Motion
  description: Turn on water heater if motion detected in Junior Shower
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.junior_shower_motion
    id: motion
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.junior_shower_motion
    id: no_motion
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - if:
    - condition: trigger
      id: motion
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.water_heater
    else:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.water_heater
  mode: single
- id: '1654959587265'
  alias: Junior Bathroom Motion
  description: Control the Junior Bathroom lights with motion
  trigger:
  - platform: state
    entity_id:
    - input_boolean.junior_bathroom_occupancy
    id: motion
    to: 'on'
  - platform: state
    entity_id:
    - input_boolean.junior_bathroom_occupancy
    to: 'off'
    id: no_motion
  condition: []
  action:
  - if:
    - condition: trigger
      id: motion
    then:
    - if:
      - condition: time
        after: input_datetime.elenas_wind_down
        weekday:
        - sun
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
      - condition: state
        entity_id: input_boolean.wind_down_lights
        state: 'on'
      then:
      - condition: state
        entity_id: light.junior_bathroom_lights
        state: 'off'
        for:
          hours: 0
          minutes: 0
          seconds: 2
      - service: light.turn_on
        target:
          entity_id: light.junior_bathroom_lights
        data:
          brightness_pct: '{{ states(''input_number.night_light_brightness'') }}'
      else:
      - condition: state
        entity_id: light.junior_bathroom_lights
        state: 'off'
        for:
          hours: 0
          minutes: 0
          seconds: 2
      - if:
        - condition: sun
          before: sunrise
        then:
        - service: light.turn_on
          data:
            brightness_pct: '{{ states(''input_number.morning_light_brightness'')
              }}'
          target:
            entity_id: light.junior_bathroom_lights
        else:
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id: light.junior_bathroom_lights
    else:
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.junior_bathroom_lights
  mode: single
- id: '1659250104695'
  alias: Living Room AC Controller
  description: Control the Living Room AC
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 4bce962ebfba9e2195a00baa98aeec85
      helper_last_controller_event: input_text.zz_living_room_ac_controller_last_event
      action_button_up_short:
      - service: climate.turn_on
        data: {}
        target:
          entity_id: climate.living_room_ac
      action_button_up_long:
      - service: climate.set_temperature
        target:
          entity_id: climate.living_room_ac
        data:
          temperature: "{% if state_attr('climate.living_room_ac', 'temperature')
            < 27 %}\n  {{ state_attr('climate.living_room_ac', 'temperature') + 1
            }}\n{% else %}\n  27\n{% endif %}\n"
      action_button_down_short:
      - service: climate.turn_off
        data: {}
        target:
          entity_id: climate.living_room_ac
      action_button_down_long:
      - service: climate.set_temperature
        target:
          entity_id: climate.living_room_ac
        data:
          temperature: "{% if state_attr('climate.living_room_ac', 'temperature')
            > 24 %}\n  {{ state_attr('climate.living_room_ac', 'temperature') - 1
            }}\n{% else %}\n  24\n{% endif %}\n"
- id: '1659250198010'
  alias: Living Room Fan Controller
  description: Control the Living Room Fan
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 8d71b8333a86c8df2acbb7522620127c
      helper_last_controller_event: input_text.zz_living_room_fan_controller_last_event
      action_button_up_short:
      - service: fan.turn_on
        data: {}
        target:
          entity_id: fan.living_room_fan
      action_button_down_short:
      - service: fan.turn_off
        data: {}
        target:
          entity_id: fan.living_room_fan
      action_button_down_long:
      - choose:
        - conditions:
          - condition: numeric_state
            entity_id: fan.living_room_fan
            attribute: percentage
            below: '20'
          sequence:
          - service: fan.turn_off
            data: {}
            target:
              entity_id: fan.living_room_fan
        default:
        - service: fan.decrease_speed
          data: {}
          target:
            entity_id: fan.living_room_fan
      action_button_up_long:
      - service: fan.increase_speed
        data: {}
        target:
          entity_id: fan.living_room_fan
      action_button_up_double:
      - service: fan.set_direction
        data:
          direction: reverse
        target:
          entity_id: fan.living_room_fan
      action_button_down_double:
      - service: fan.set_direction
        data:
          direction: forward
        target:
          entity_id: fan.living_room_fan
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1659250302488'
  alias: Living Room Lights Controller
  description: Control the Living Room Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: c5d9eb9905ea6ac1a19d209a6dd0965c
      helper_last_controller_event: input_text.zz_living_room_lights_controller_last_event
      action_button_up_short:
      - choose:
        - conditions:
          - condition: time
            after: input_datetime.wind_down
          - condition: state
            entity_id: input_boolean.wind_down_lights
            state: 'on'
          sequence:
          - service: light.turn_on
            data:
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
            target:
              entity_id: light.living_room_pendant_light_entity
        - conditions:
          - condition: sun
            before: sunrise
          sequence:
          - service: light.turn_on
            data:
              brightness_pct: '{{ states(''input_number.morning_light_brightness'')
                }}'
            target:
              entity_id: light.living_room_pendant_light_entity
        default:
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id:
            - light.living_room_lights
            - light.living_room_pendant_light_entity
      action_button_up_long:
      - service: light.turn_on
        data:
          brightness_step_pct: '{{ states(''input_number.light_brightness_change_step'')
            }}'
        target:
          entity_id:
          - light.living_room_lights
          - light.living_room_pendant_light_entity
      action_button_down_short:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.living_room_lights
          - light.living_room_pendant_light_entity
      action_button_down_long:
      - service: light.turn_on
        data:
          brightness_step_pct: -{{ states('input_number.light_brightness_change_step')
            }}
        target:
          entity_id:
          - light.living_room_lights
          - light.living_room_pendant_light_entity
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
      action_button_down_double:
      - service: script.turn_off_living_room
        data: {}
      button_down_double_press: true
      helper_double_press_delay: 700
      action_button_up_double:
      - service: script.set_recommended_scene_in_living_room
        data: {}
      button_up_double_press: true
- id: '1659251600711'
  alias: Study Room AC Controller
  description: Control the Study Room AC
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 0cc8a08d95a93a8b8053d4fa4abd5233
      helper_last_controller_event: input_text.zz_study_room_ac_controller_last_event
      action_button_up_short:
      - service: climate.turn_on
        data: {}
        target:
          entity_id: climate.study_room_ac
      action_button_up_long:
      - service: climate.set_temperature
        target:
          entity_id: climate.study_room_ac
        data:
          temperature: "{% if state_attr('climate.study_room_ac', 'temperature') <
            27 %}\n  {{ state_attr('climate.study_room_ac', 'temperature') + 1 }}\n{%
            else %}\n  27\n{% endif %}\n"
      action_button_down_short:
      - service: climate.turn_off
        data: {}
        target:
          entity_id: climate.study_room_ac
      action_button_down_long:
      - service: climate.set_temperature
        target:
          entity_id: climate.study_room_ac
        data:
          temperature: "{% if state_attr('climate.study_room_ac', 'temperature') >
            24 %}\n  {{ state_attr('climate.study_room_ac', 'temperature') - 1 }}\n{%
            else %}\n  24\n{% endif %}\n"
      action_button_up_release: []
      action_button_down_release: []
- id: '1659251701760'
  alias: Study Room Fan Controller
  description: Control the Study Room Fan
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 93ebf518c9fb9021ea174404b4fef28b
      helper_last_controller_event: input_text.zz_study_room_fan_controller_last_event
      action_button_up_short:
      - service: fan.turn_on
        data: {}
        target:
          entity_id: fan.study_room_fan
      action_button_down_short:
      - service: fan.turn_off
        data: {}
        target:
          entity_id: fan.study_room_fan
      action_button_down_long:
      - choose:
        - conditions:
          - condition: numeric_state
            entity_id: fan.study_room_fan
            attribute: percentage
            below: '20'
          sequence:
          - service: fan.turn_off
            data: {}
            target:
              entity_id: fan.study_room_fan
        default:
        - service: fan.decrease_speed
          data: {}
          target:
            entity_id: fan.study_room_fan
      action_button_up_long:
      - service: fan.increase_speed
        data: {}
        target:
          entity_id: fan.study_room_fan
      action_button_up_double:
      - service: fan.set_direction
        data:
          direction: reverse
        target:
          entity_id: fan.study_room_fan
      action_button_down_double:
      - service: fan.set_direction
        data:
          direction: forward
        target:
          entity_id: fan.study_room_fan
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1659251781155'
  alias: Study Room Lights Controller
  description: Control the Study Room Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: d6563b3c30e24806da5ef8823f3fcd03
      helper_last_controller_event: input_text.zz_study_room_lights_controller_last_event
      action_button_up_short:
      - choose:
        - conditions:
          - condition: time
            after: input_datetime.wind_down
            before: input_datetime.sleep_hours_end
            weekday:
            - mon
            - tue
            - wed
            - fri
            - thu
            - sat
            - sun
          sequence:
          - service: light.turn_on
            data:
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
            target:
              entity_id: light.study_room_lights
        - conditions:
          - condition: sun
            before: sunrise
          sequence:
          - service: light.turn_on
            data:
              brightness_pct: '{{ states(''input_number.morning_light_brightness'')
                }}'
            target:
              entity_id: light.study_room_lights
        default:
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id: light.study_room_lights
      action_button_up_long:
      - service: light.turn_on
        data:
          brightness_step_pct: '{{ states(''input_number.light_brightness_change_step'')
            }}'
        target:
          entity_id: light.study_room_lights
      action_button_down_short:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.study_room_lights
      action_button_down_long:
      - service: light.turn_on
        data:
          brightness_step_pct: -{{ states('input_number.light_brightness_change_step')
            }}
        target:
          entity_id: light.study_room_lights
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
      action_button_down_double:
      - service: script.turn_off_study_room
        data: {}
      button_down_double_press: true
      helper_double_press_delay: 700
      action_button_up_double:
      - service: script.set_recommended_scene_in_study_room
        data: {}
      button_up_double_press: true
- id: '1659255925964'
  alias: Parents' Room AC Controller
  description: Control the Parents' Room AC
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 11472f5eb794fb176a43d64968632bd2
      helper_last_controller_event: input_text.zz_parents_room_ac_controller_last_event
      action_button_up_short:
      - service: climate.turn_on
        data: {}
        target:
          entity_id: climate.parents_room_ac
      action_button_up_long:
      - service: climate.set_temperature
        target:
          entity_id: climate.parents_room_ac
        data:
          temperature: "{% if state_attr('climate.parents_room_ac', 'temperature')
            < 27 %}\n  {{ state_attr('climate.parents_room_ac', 'temperature') + 1
            }}\n{% else %}\n  27\n{% endif %}\n"
      action_button_down_short:
      - service: climate.turn_off
        data: {}
        target:
          entity_id: climate.parents_room_ac
      action_button_down_long:
      - service: climate.set_temperature
        target:
          entity_id: climate.parents_room_ac
        data:
          temperature: "{% if state_attr('climate.parents_room_ac', 'temperature')
            > 24 %}\n  {{ state_attr('climate.parents_room_ac', 'temperature') - 1
            }}\n{% else %}\n  24\n{% endif %}\n"
      action_button_up_double:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.parents_room_ac_auto_control
      action_button_down_double:
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.parents_room_ac_auto_control
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1659255996501'
  alias: Parents' Room Fan Controller
  description: Control the Parents' Room Fan
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: dd5c0569a797b382b5f99e3db5c5ded2
      helper_last_controller_event: input_text.zz_parents_room_fan_controller_last_event
      action_button_up_short:
      - service: fan.turn_on
        data: {}
        target:
          entity_id: fan.parents_room_fan
      action_button_down_short:
      - service: fan.turn_off
        data: {}
        target:
          entity_id: fan.parents_room_fan
      action_button_down_long:
      - choose:
        - conditions:
          - condition: numeric_state
            entity_id: fan.parents_room_fan
            attribute: percentage
            below: '20'
          sequence:
          - service: fan.turn_off
            data: {}
            target:
              entity_id: fan.parents_room_fan
        default:
        - service: fan.decrease_speed
          data: {}
          target:
            entity_id: fan.parents_room_fan
      action_button_up_long:
      - service: fan.increase_speed
        data: {}
        target:
          entity_id: fan.parents_room_fan
      action_button_up_double:
      - service: fan.set_direction
        data:
          direction: reverse
        target:
          entity_id: fan.parents_room_fan
      action_button_down_double:
      - service: fan.set_direction
        data:
          direction: forward
        target:
          entity_id: fan.parents_room_fan
      helper_double_press_delay: 700
      button_up_double_press: true
      button_down_double_press: true
- id: '1659256072000'
  alias: Parents' Room Lights Controller
  description: Control the Parents' Room Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 2d7882ce6b51a89dbc5b012417d00c40
      helper_last_controller_event: input_text.zz_parents_room_lights_controller_last_event
      action_button_up_short:
      - choose:
        - conditions:
          - condition: time
            after: input_datetime.wind_down
            before: input_datetime.sleep_hours_end
            weekday:
            - mon
            - tue
            - wed
            - thu
            - fri
            - sat
            - sun
          sequence:
          - service: light.turn_on
            data:
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
            target:
              entity_id: light.parents_room_lights
        - conditions:
          - condition: sun
            before: sunrise
          sequence:
          - service: light.turn_on
            data:
              brightness_pct: '{{ states(''input_number.morning_light_brightness'')
                }}'
            target:
              entity_id: light.parents_room_lights
        default:
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id: light.parents_room_lights
      action_button_up_long:
      - service: light.turn_on
        data:
          brightness_step_pct: '{{ states(''input_number.light_brightness_change_step'')
            }}'
        target:
          entity_id: light.parents_room_lights
      action_button_down_short:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.parents_room_lights
      action_button_down_long:
      - service: light.turn_on
        data:
          brightness_step_pct: -{{ states('input_number.light_brightness_change_step')
            }}
        target:
          entity_id: light.parents_room_lights
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
      action_button_down_double:
      - service: script.turn_off_parents_room
        data: {}
      button_down_double_press: true
      helper_double_press_delay: 700
      action_button_up_double:
      - service: script.set_recommended_scene_in_parents_room
        data: {}
      button_up_double_press: true
- id: '1659256178839'
  alias: Master Bathroom Lights Controller
  description: Control the Master Bathroom Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 75fe391df20feec2911c6bf08707c353
      helper_last_controller_event: input_text.zz_master_bathroom_lights_controller_last_event
      action_button_up_short:
      - choose:
        - conditions:
          - condition: time
            after: input_datetime.wind_down
            before: input_datetime.sleep_hours_end
          sequence:
          - service: light.turn_on
            data:
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
            target:
              entity_id: light.master_bathroom_lights
        - conditions:
          - condition: sun
            before: sunrise
          sequence:
          - service: light.turn_on
            data:
              brightness_pct: '{{ states(''input_number.morning_light_brightness'')
                }}'
            target:
              entity_id: light.master_bathroom_lights
        default:
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id: light.master_bathroom_lights
      action_button_up_long:
      - service: light.turn_on
        data:
          brightness_step_pct: '{{ states(''input_number.light_brightness_change_step'')
            }}'
        target:
          entity_id: light.master_bathroom_lights
      action_button_down_short:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.master_bathroom_lights
      action_button_down_long:
      - service: light.turn_on
        data:
          brightness_step_pct: -{{ states('input_number.light_brightness_change_step')
            }}
        target:
          entity_id: light.master_bathroom_lights
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
- id: '1659256881015'
  alias: Kitchen Blinds Controller
  description: Control the Kitchen Blinds
  use_blueprint:
    path: EPMatt/ikea_e1766.yaml
    input:
      integration: ZHA
      controller_device: 63ca2b52933039d3f01175d8c06dd220
      helper_last_controller_event: input_text.zz_kitchen_blinds_controller_last_event
      action_button_up_short:
      - if:
        - condition: state
          entity_id: cover.kitchen_blinds
          state: closing
        then:
        - service: cover.stop_cover
          data: {}
          target:
            entity_id: cover.kitchen_blinds
        else:
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.kitchen_blinds
      action_button_down_short:
      - if:
        - condition: state
          entity_id: cover.kitchen_blinds
          state: opening
        then:
        - service: cover.stop_cover
          data: {}
          target:
            entity_id: cover.kitchen_blinds
        else:
        - service: cover.close_cover
          data: {}
          target:
            entity_id: cover.kitchen_blinds
      action_button_up_double:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.kitchen_blinds_auto_control
      action_button_down_double:
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.kitchen_blinds_auto_control
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 500
- id: '1659256970314'
  alias: Kitchen Lights Controller
  description: Control the Kitchen Lights
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 13c989b42cc6640ec074b9c74df4101c
      helper_last_controller_event: input_text.zz_kitchen_lights_controller_last_event
      action_button_up_short:
      - choose:
        - conditions:
          - condition: time
            after: input_datetime.wind_down
          - condition: state
            entity_id: input_boolean.wind_down_lights
            state: 'on'
          sequence:
          - service: light.turn_on
            data:
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
            target:
              entity_id: light.kitchen_lights
        - conditions:
          - condition: sun
            before: sunrise
          sequence:
          - service: light.turn_on
            data:
              brightness_pct: '{{ states(''input_number.morning_light_brightness'')
                }}'
            target:
              entity_id: light.kitchen_lights
        default:
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id: light.kitchen_lights
      action_button_up_long:
      - service: light.turn_on
        data:
          brightness_step_pct: '{{ states(''input_number.light_brightness_change_step'')
            }}'
        target:
          entity_id: light.kitchen_lights
      action_button_down_short:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.kitchen_lights
      action_button_down_long:
      - service: light.turn_on
        data:
          brightness_step_pct: -{{ states('input_number.light_brightness_change_step')
            }}
        target:
          entity_id: light.kitchen_lights
      button_up_long_max_loop_repeats: 50
      button_down_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_up_long_loop: true
- id: '1659366431475'
  alias: Master Bathroom Light Motion
  description: Control the Master Bathroom Light with motion
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.master_bathroom_motion
    from: 'off'
    to: 'on'
    id: motion
  - platform: state
    entity_id:
    - input_boolean.master_bathroom_occupancy
    to: 'off'
    id: no_motion
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: motion
      sequence:
      - if:
        - condition: time
          after: input_datetime.wind_down
          before: input_datetime.sleep_hours_end
          weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
          - sat
          - sun
        then:
        - service: light.turn_on
          data:
            brightness_pct: '{{ states(''input_number.night_light_brightness'') }}'
          target:
            entity_id: light.master_bathroom_light_entity
        else:
        - if:
          - condition: sun
            before: sunrise
          then:
          - service: light.turn_on
            data:
              brightness_pct: '{{ states(''input_number.morning_light_brightness'')
                }}'
            target:
              entity_id: light.master_bathroom_light_entity
          else:
          - service: light.turn_on
            data:
              brightness_pct: 100
            target:
              entity_id: light.master_bathroom_light_entity
    default:
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.master_bathroom_light_entity
  mode: single
- id: '1659402429592'
  alias: Master Bathroom Pendant Light Motion
  description: Control the Master Bathroom Pendant Light with motion
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.master_shower_motion
    from: 'off'
    to: 'on'
    id: motion
  - platform: state
    entity_id:
    - input_boolean.master_bathroom_occupancy
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: motion
      sequence:
      - if:
        - condition: time
          after: input_datetime.wind_down
          before: input_datetime.sleep_hours_end
          weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
          - sat
          - sun
        then:
        - service: light.turn_on
          data:
            brightness_pct: '{{ states(''input_number.night_light_brightness'') }}'
          target:
            entity_id: light.master_bathroom_pendant_light_entity
        else:
        - if:
          - condition: sun
            before: sunrise
          then:
          - service: light.turn_on
            data:
              brightness_pct: '{{ states(''input_number.morning_light_brightness'')
                }}'
            target:
              entity_id: light.master_bathroom_pendant_light_entity
          else:
          - service: light.turn_on
            data:
              brightness_pct: 100
            target:
              entity_id: light.master_bathroom_pendant_light_entity
    default:
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.master_bathroom_pendant_light_entity
  mode: single
- id: '1659743502956'
  alias: Elena's Room AC Controller
  description: Control Elena's Room AC
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 4992a43f1eecbf448ac02a3c2601ab36
      action_button_up_short:
      - service: climate.turn_on
        data: {}
        target:
          entity_id: climate.elenas_room_ac
      action_button_up_long:
      - service: climate.set_temperature
        target:
          entity_id: climate.elenas_room_ac
        data:
          temperature: "{% if state_attr('climate.elenas_room_ac', 'temperature')
            < 27 %}\n  {{ state_attr('climate.elenas_room_ac', 'temperature') + 1
            }}\n{% else %}\n  27\n{% endif %}\n"
      action_button_down_short:
      - service: climate.turn_off
        data: {}
        target:
          entity_id: climate.elenas_room_ac
      action_button_down_long:
      - service: climate.set_temperature
        target:
          entity_id: climate.elenas_room_ac
        data:
          temperature: "{% if state_attr('climate.elenas_room_ac', 'temperature')
            > 24 %}\n  {{ state_attr('climate.elenas_room_ac', 'temperature') - 1
            }}\n{% else %}\n  24\n{% endif %}\n"
      helper_last_controller_event: input_text.zz_elena_s_room_ac_controller_last_event
      action_button_up_double:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.elenas_room_ac_auto_control
      action_button_down_double:
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.elenas_room_ac_auto_control
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1659777667257'
  alias: Kitchen Blinds Auto Control
  description: Close the Kitchen Blinds if raining, in the mornings or AC is on
  trigger:
  - platform: template
    value_template: "{{ (states('sensor.local_rainfall') | int > 1)\n   or ('Thunder'
      in states('sensor.local_two_hour_forecast'))\n   or ('Rain' in states('sensor.local_two_hour_forecast'))\n
      \  or ('Shower' in states('sensor.local_two_hour_forecast'))\n   or ('Wind'
      in states('sensor.local_two_hour_forecast')) }}"
  - platform: state
    entity_id:
    - climate.living_room_ac
    to: cool
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: '65'
    enabled: true
  - platform: state
    entity_id:
    - switch.stove_main_power
    - switch.rice_cooker
    not_from:
    - unavailable
    - unknown
    not_to:
    - unavailable
    - unknown
  - platform: state
    entity_id:
    - binary_sensor.gas_water_heater
    from: 'off'
    to: 'on'
  - platform: template
    value_template: "{{ (states('sensor.local_rainfall') | int <= 1) and ('Thunder'
      not in\n   states('sensor.local_two_hour_forecast')) }}"
  - platform: state
    entity_id:
    - sun.sun
    attribute: rising
    to: false
    enabled: true
  - platform: state
    entity_id:
    - sensor.kitchen_lux
  condition: []
  action:
  - if:
    - condition: or
      conditions:
      - condition: template
        value_template: "{{ (states('sensor.local_rainfall') | int > 1)\n   or ('Thunder'
          in states('sensor.local_two_hour_forecast'))\n   or ('Rain' in states('sensor.local_two_hour_forecast'))\n
          \  or ('Shower' in states('sensor.local_two_hour_forecast'))\n   or ('Wind'
          in states('sensor.local_two_hour_forecast')) }}"
      - condition: state
        entity_id: climate.living_room_ac
        state: cool
      - condition: numeric_state
        entity_id:
        - sensor.kitchen_lux
        above: input_number.maximum_lux
    - condition: not
      conditions:
      - condition: state
        entity_id:
        - switch.stove_main_power
        - switch.rice_cooker
        - binary_sensor.gas_water_heater
        state: 'on'
    then:
    - condition: template
      value_template: '{{ now() - states[''cover.kitchen_blinds''].last_changed >
        timedelta(minutes = states(''input_number.blinds_auto_control_debounce'')
        | int(0)) }}'
    - service: cover.close_cover
      data: {}
      target:
        entity_id: cover.kitchen_blinds
    else:
    - condition: and
      conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: sun.sun
          attribute: rising
          state: false
          enabled: true
        - condition: numeric_state
          entity_id: sun.sun
          above: '65'
          attribute: elevation
          enabled: true
        - condition: state
          entity_id: switch.stove_main_power
          state: 'on'
        - condition: state
          entity_id: binary_sensor.gas_water_heater
          state: 'on'
        - condition: numeric_state
          entity_id: sensor.kitchen_lux
          value_template: '{{ state.state | int(1000) - (states(''input_number.minimum_lux'')
            | int + 300) }}'
          below: 0
        - condition: state
          entity_id: switch.rice_cooker
          state: 'on'
      - condition: not
        conditions:
        - condition: template
          value_template: "{{ (states('sensor.local_rainfall') | int > 1)\n   or ('Thunder'
            in states('sensor.local_two_hour_forecast'))\n   or ('Rain' in states('sensor.local_two_hour_forecast'))\n
            \  or ('Shower' in states('sensor.local_two_hour_forecast'))\n   or ('Wind'
            in states('sensor.local_two_hour_forecast')) }}"
    - condition: template
      value_template: '{{ now() - states[''cover.kitchen_blinds''].last_changed >
        timedelta(minutes = states(''input_number.blinds_auto_control_debounce'')
        | int(0)) }}'
    - service: cover.open_cover
      data: {}
      target:
        entity_id: cover.kitchen_blinds
  mode: single
- id: '1660034693952'
  alias: Master Bathroom Blind Auto Control
  description: Control the Master Bathroom Blind based on whether there is motion
    in the Master Shower and whether doors are open at Parents Room and Master Bathroom
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.master_shower_motion
    to: 'on'
    from: 'off'
    id: motion
  - platform: state
    entity_id:
    - binary_sensor.master_shower_motion
    - binary_sensor.master_bathroom_motion
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 10
      seconds: 0
    id: no_motion
  - platform: time
    at: input_datetime.sleep_hours_start
    id: sleep_hours_start
  - platform: state
    entity_id:
    - binary_sensor.parents_room_door
    - binary_sensor.master_bathroom_door
    from: 'off'
    to: 'on'
    id: door_open
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: motion
      sequence:
      - condition: and
        conditions:
        - condition: state
          entity_id: binary_sensor.parents_room_door
          state: 'on'
        - condition: state
          entity_id: binary_sensor.master_bathroom_door
          state: 'off'
      - service: cover.close_cover
        data: {}
        target:
          entity_id: cover.master_bathroom_blind
    - conditions:
      - condition: trigger
        id: no_motion
      sequence:
      - condition: and
        conditions:
        - condition: state
          entity_id: binary_sensor.master_bathroom_motion
          state: 'off'
          for:
            hours: 0
            minutes: 10
            seconds: 0
        - condition: state
          state: 'off'
          entity_id: binary_sensor.master_shower_motion
          for:
            hours: 0
            minutes: 10
            seconds: 0
        - condition: time
          after: input_datetime.sleep_hours_end
          before: input_datetime.sleep_hours_start
          weekday:
          - sun
          - fri
          - sat
          - thu
          - wed
          - tue
          - mon
        - condition: state
          entity_id: climate.parents_room_ac
          state: 'off'
        - condition: state
          entity_id: fan.parents_room_fan
          state: 'off'
      - service: cover.open_cover
        data: {}
        target:
          entity_id: cover.master_bathroom_blind
    - conditions:
      - condition: trigger
        id: sleep_hours_start
      sequence:
      - service: cover.close_cover
        data: {}
        target:
          entity_id: cover.master_bathroom_blind
    - conditions:
      - condition: trigger
        id: door_open
      sequence:
      - condition: and
        conditions:
        - condition: time
          after: input_datetime.sleep_hours_end
          weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
          - sat
          - sun
          before: input_datetime.sleep_hours_start
        - condition: state
          entity_id: binary_sensor.master_shower_motion
          state: 'off'
          for:
            hours: 0
            minutes: 10
            seconds: 0
        - condition: state
          entity_id: climate.parents_room_ac
          state: 'off'
        - condition: state
          entity_id: fan.parents_room_fan
          state: 'off'
      - service: cover.open_cover
        data: {}
        target:
          entity_id: cover.master_bathroom_blind
    default: []
  mode: restart
- id: '1660480730988'
  alias: Master Bathroom Blind Controller
  description: Control the Master Bathroom Blind
  use_blueprint:
    path: EPMatt/ikea_e1766.yaml
    input:
      integration: ZHA
      controller_device: 92725db1f0698cbe535382e777d98b52
      helper_last_controller_event: input_text.zz_master_bathroom_blind_controller_last_event
      action_button_up_short:
      - if:
        - condition: state
          entity_id: cover.master_bathroom_blind
          state: closing
        then:
        - service: cover.stop_cover
          data: {}
          target:
            entity_id: cover.master_bathroom_blind
        else:
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.master_bathroom_blind
      action_button_down_short:
      - if:
        - condition: state
          entity_id: cover.master_bathroom_blind
          state: opening
        then:
        - service: cover.stop_cover
          data: {}
          target:
            entity_id: cover.master_bathroom_blind
        else:
        - service: cover.close_cover
          data: {}
          target:
            entity_id: cover.master_bathroom_blind
- id: '1661152935817'
  alias: Elena's Room Lights Controller
  description: Control Elena's Room Lights
  use_blueprint:
    path: EPMatt/ikea_e2001_e2002.yaml
    input:
      integration: ZHA
      controller_device: bcfa3b3429c3ad745cc8299a3d74e3d3
      helper_last_controller_event: input_text.zz_elena_s_room_lights_controller_last_event
      action_button_up_short:
      - choose:
        - conditions:
          - condition: time
            after: input_datetime.elenas_wind_down
            before: input_datetime.sleep_hours_end
            weekday:
            - sun
            - sat
            - fri
            - thu
            - wed
            - tue
            - mon
          sequence:
          - service: light.turn_on
            data:
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
            target:
              entity_id: light.elenas_room_lights
        - conditions:
          - condition: sun
            before: sunrise
          sequence:
          - service: light.turn_on
            data:
              brightness_pct: '{{ states(''input_number.morning_light_brightness'')
                }}'
            target:
              entity_id: light.elenas_room_lights
        default:
        - service: light.turn_on
          data:
            brightness_pct: 100
          target:
            entity_id: light.elenas_room_lights
      action_button_up_long:
      - service: light.turn_on
        data:
          brightness_step_pct: '{{ states(''input_number.light_brightness_change_step'')
            }}'
        target:
          entity_id: light.elenas_room_lights
      action_button_down_short:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.elenas_room_lights
      action_button_down_long:
      - service: light.turn_on
        data:
          brightness_step_pct: -{{ states('input_number.light_brightness_change_step')
            }}
        target:
          entity_id: light.elenas_room_lights
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
      action_button_left_short:
      - if:
        - condition: state
          entity_id: light.elenas_room_lights
          state: 'on'
        then:
        - service: light.turn_on
          data:
            color_temp: "{% if state_attr('light.elenas_room_lights', 'color_temp')
              - 20 < state_attr('light.elenas_room_lights', 'min_mireds') %}\n  {{
              state_attr('light.elenas_room_lights', 'min_mireds') }}\n{% else %}\n
              \ {{ state_attr('light.elenas_room_lights', 'color_temp') - 20 }}\n{%
              endif %}\n"
          target:
            entity_id: light.elenas_room_lights
      action_button_left_long:
      - if:
        - condition: state
          entity_id: light.elenas_room_lights
          state: 'on'
        then:
        - service: light.turn_on
          data:
            color_temp: "{% if state_attr('light.elenas_room_lights', 'color_temp')
              - 20 < state_attr('light.elenas_room_lights', 'min_mireds') %}\n  {{
              state_attr('light.elenas_room_lights', 'min_mireds') }}\n{% else %}\n
              \ {{ state_attr('light.elenas_room_lights', 'color_temp') - 20 }}\n{%
              endif %}\n"
          target:
            entity_id: light.elenas_room_lights
      action_button_right_short:
      - if:
        - condition: state
          entity_id: light.elenas_room_lights
          state: 'on'
        then:
        - service: light.turn_on
          data:
            color_temp: "{% if state_attr('light.elenas_room_lights', 'color_temp')
              + 20 > state_attr('light.elenas_room_lights', 'max_mireds') %}\n  {{
              state_attr('light.elenas_room_lights', 'max_mireds') }}\n{% else %}\n
              \ {{ state_attr('light.elenas_room_lights', 'color_temp') + 20 }}\n{%
              endif %}\n"
          target:
            entity_id: light.elenas_room_lights
      action_button_right_long:
      - if:
        - condition: state
          entity_id: light.elenas_room_lights
          state: 'on'
        then:
        - service: light.turn_on
          data:
            color_temp: "{% if state_attr('light.elenas_room_lights', 'color_temp')
              + 20 > state_attr('light.elenas_room_lights', 'max_mireds') %}\n  {{
              state_attr('light.elenas_room_lights', 'max_mireds') }}\n{% else %}\n
              \ {{ state_attr('light.elenas_room_lights', 'color_temp') + 20 }}\n{%
              endif %}\n"
          target:
            entity_id: light.elenas_room_lights
      button_left_long_loop: true
      button_left_long_max_loop_repeats: 50
      button_right_long_loop: true
      button_right_long_max_loop_repeats: 50
      action_button_up_double:
      - service: script.set_recommended_scene_in_elenas_room
        data: {}
      action_button_down_double:
      - service: script.turn_off_elenas_room
        data: {}
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1661601576517'
  alias: Washer Load Clean
  description: Indicate when the washer load is clean and needs unloading
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.washer_wash_completed
    to: 'on'
    id: finished
    from: 'off'
  - platform: state
    entity_id:
    - binary_sensor.washer_door
    from: 'off'
    to: 'on'
    id: opened
  condition: []
  action:
  - if:
    - condition: trigger
      id: finished
    then:
    - service: input_datetime.set_datetime
      data:
        datetime: '{{ now().strftime(''%Y-%m-%d %H:%M:%S'') }}'
      target:
        entity_id: input_datetime.washer_last_wash_complete
    - condition: state
      entity_id: binary_sensor.washer_door
      state: 'off'
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.washer_load_clean
    else:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.washer_load_clean
  mode: single
- id: '1661612907662'
  alias: Dishwasher Load Clean
  description: Indicate when the dishwasher load is clean and needs unloading
  trigger:
  - platform: state
    entity_id:
    - input_select.dishwasher_status
    id: finished
    from: Cooling
    to: 'Off'
  - platform: state
    entity_id:
    - binary_sensor.dishwasher_door
    from: 'off'
    to: 'on'
    id: opened
  condition: []
  action:
  - if:
    - condition: trigger
      id: finished
    then:
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: input_boolean.dishwasher_load_clean
    else:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: input_boolean.dishwasher_load_clean
  mode: single
- id: '1662778610362'
  alias: Eli's Room Lights Controller
  description: Control Eli's Room Lights
  use_blueprint:
    path: EPMatt/ikea_e1524_e1810.yaml
    input:
      integration: ZHA
      controller_device: 4f9d115057150510080b9cde7008bb35
      helper_last_controller_event: input_text.zz_eli_s_room_lights_controller_last_event
      action_button_left_short:
      - if:
        - condition: state
          entity_id: light.elis_room_lights
          state: 'on'
        then:
        - service: light.turn_on
          data:
            color_temp: "{% if state_attr('light.elis_room_lights', 'color_temp')
              - 20 > state_attr('light.elis_room_lights', 'min_mireds') %}\n  {{ state_attr('light.elis_room_lights',
              'color_temp') - 20}}\n{% else %}\n  {{ state_attr('light.elis_room_lights',
              'min_mireds') }}\n{% endif %}\n"
          target:
            entity_id: light.elis_room_lights
      action_button_left_long:
      - if:
        - condition: state
          entity_id: light.elis_room_lights
          state: 'on'
        then:
        - service: light.turn_on
          data:
            color_temp: "{% if state_attr('light.elis_room_lights', 'color_temp')
              - 20 > state_attr('light.elis_room_lights', 'min_mireds') %}\n  {{ state_attr('light.elis_room_lights',
              'color_temp') - 20 }}\n{% else %}\n  {{ state_attr('light.elis_room_lights',
              'min_mireds') }}\n{% endif %}\n"
          target:
            entity_id: light.elis_room_lights
      action_button_right_short:
      - if:
        - condition: state
          entity_id: light.elis_room_lights
          state: 'on'
        then:
        - service: light.turn_on
          data:
            color_temp: "{% if state_attr('light.elis_room_lights', 'color_temp')
              + 20 < state_attr('light.elis_room_lights', 'max_mireds') %}\n  {{ state_attr('light.elis_room_lights',
              'color_temp') + 20}}\n{% else %}\n  {{ state_attr('light.elis_room_lights',
              'max_mireds') }}\n{% endif %}\n"
          target:
            entity_id: light.elis_room_lights
      action_button_right_long:
      - if:
        - condition: state
          entity_id: light.elis_room_lights
          state: 'on'
        then:
        - service: light.turn_on
          data:
            color_temp: "{% if state_attr('light.elis_room_lights', 'color_temp')
              + 20 < state_attr('light.elis_room_lights', 'max_mireds') %}\n  {{ state_attr('light.elis_room_lights',
              'color_temp') + 20 }}\n{% else %}\n  {{ state_attr('light.elis_room_lights',
              'max_mireds') }}\n{% endif %}\n"
          target:
            entity_id: light.elis_room_lights
      action_button_up_short:
      - service: light.turn_on
        data:
          brightness_step_pct: '{{ states(''input_number.light_brightness_change_step'')
            }}'
        target:
          entity_id: light.elis_room_lights
      action_button_up_long:
      - service: light.turn_on
        data:
          brightness_step_pct: '{{ states(''input_number.light_brightness_change_step'')
            }}'
        target:
          entity_id: light.elis_room_lights
      action_button_down_short:
      - service: light.turn_on
        data:
          brightness_step_pct: -{{ states('input_number.light_brightness_change_step')
            }}
        target:
          entity_id: light.elis_room_lights
      action_button_down_long:
      - service: light.turn_on
        data:
          brightness_step_pct: -{{ states('input_number.light_brightness_change_step')
            }}
        target:
          entity_id: light.elis_room_lights
      action_button_center_short:
      - if:
        - condition: state
          entity_id: light.elis_room_lights
          state: 'on'
        then:
        - service: light.turn_off
          data: {}
          target:
            entity_id: light.elis_room_lights
        else:
        - choose:
          - conditions:
            - condition: time
              after: input_datetime.wind_down
              before: input_datetime.sleep_hours_end
              weekday:
              - mon
              - tue
              - wed
              - thu
              - fri
              - sat
              - sun
            sequence:
            - service: light.turn_on
              data:
                brightness_pct: '{{ states(''input_number.night_light_brightness'')
                  }}'
              target:
                entity_id: light.elis_room_lights
          - conditions:
            - condition: sun
              before: sunrise
            sequence:
            - service: light.turn_on
              data:
                brightness_pct: '{{ states(''input_number.morning_light_brightness'')
                  }}'
              target:
                entity_id: light.elis_room_lights
          default:
          - service: light.turn_on
            data:
              brightness_pct: 100
            target:
              entity_id: light.elis_room_lights
      button_left_long_loop: true
      button_left_long_max_loop_repeats: 50
      button_right_long_loop: true
      button_right_long_max_loop_repeats: 50
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 50
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 50
      action_button_up_double:
      - service: script.set_recommended_scene_in_elis_room
        data: {}
      action_button_down_double:
      - service: script.turn_off_elis_room
        data: {}
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 700
- id: '1664539716957'
  alias: Stove Set State
  description: Set the state of the stove according to input_helpers
  trigger:
  - platform: state
    entity_id:
    - select.stove_current_burner_power
    id: select
  - platform: state
    entity_id:
    - input_number.stove_current_burner_power_slider
    id: slider
  - platform: state
    entity_id:
    - input_boolean.stove_select_left_burner
    id: left_burner
  - platform: state
    entity_id:
    - input_boolean.stove_select_right_burner
    id: right_burner
  - platform: state
    entity_id:
    - select.stove_current_burner
    id: burner
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: select
      sequence:
      - service: input_number.set_value
        data:
          value: '{{ states(''select.stove_current_burner_power'') }}'
        target:
          entity_id: input_number.stove_current_burner_power_slider
    - conditions:
      - condition: trigger
        id: slider
      sequence:
      - service: select.select_option
        data:
          option: '{{ states(''input_number.stove_current_burner_power_slider'') |
            int(0) }}'
        target:
          entity_id: select.stove_current_burner_power
    - conditions:
      - condition: trigger
        id: left_burner
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.stove_select_left_burner
          state: 'on'
        then:
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.stove_select_right_burner
        - service: select.select_option
          data:
            option: left
          target:
            entity_id: select.stove_current_burner
        else:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.stove_select_right_burner
        - service: select.select_option
          data:
            option: right
          target:
            entity_id: select.stove_current_burner
    - conditions:
      - condition: trigger
        id: right_burner
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.stove_select_right_burner
          state: 'on'
        then:
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.stove_select_left_burner
        - service: select.select_option
          data:
            option: right
          target:
            entity_id: select.stove_current_burner
        else:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.stove_select_left_burner
        - service: select.select_option
          data:
            option: left
          target:
            entity_id: select.stove_current_burner
    - conditions:
      - condition: trigger
        id: burner
      sequence:
      - if:
        - condition: state
          entity_id: select.stove_current_burner
          state: left
        then:
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.stove_select_right_burner
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.stove_select_left_burner
        else:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.stove_select_right_burner
        - service: input_boolean.turn_off
          data: {}
          target:
            entity_id: input_boolean.stove_select_left_burner
  - delay:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 10
  mode: single
  max_exceeded: silent
- id: '1664612965128'
  alias: Dishwasher Last Use
  description: Track the start and end times of the last run of the dishwasher
  trigger:
  - platform: state
    entity_id:
    - input_select.dishwasher_status
    to: Washing
    from:
    - Standby
    - 'Off'
    id: washing_start
  - platform: state
    entity_id:
    - input_select.dishwasher_status
    from: Cooling
    to: 'Off'
    id: washing_end
  condition: []
  action:
  - if:
    - condition: trigger
      id: washing_start
    then:
    - service: input_datetime.set_datetime
      data:
        datetime: '{{ now().strftime(''%Y-%m-%d %H:%M:%S'') }}'
      target:
        entity_id: input_datetime.dishwasher_last_run_start
    else:
    - service: input_datetime.set_datetime
      data:
        datetime: '{{ now().strftime(''%Y-%m-%d %H:%M:%S'') }}'
      target:
        entity_id: input_datetime.dishwasher_last_run_end
  mode: single
- id: '1667350498199'
  alias: Away Mode
  description: Set automated controls and devices for away mode
  trigger:
  - platform: state
    entity_id:
    - input_boolean.away_mode
  condition: []
  action:
  - if:
    - condition: state
      entity_id: input_boolean.away_mode
      state: 'on'
    then:
    - service: cover.open_cover
      data: {}
      target:
        entity_id: cover.master_bathroom_blind
    - service: cover.close_cover
      data: {}
      target:
        entity_id: cover.kitchen_blinds
    - service: switch.turn_off
      data: {}
      target:
        entity_id:
        - switch.stove_main_power
        - switch.water_heater
        - switch.rice_cooker
    - service: script.turn_off_all
      data: {}
    - service: automation.turn_off
      data:
        stop_actions: true
      target:
        entity_id:
        - automation.ac_auto_control_at_night
        - automation.elenas_room_ac_auto_control
        - automation.elis_room_ac_auto_control
        - automation.parents_room_ac_auto_control
        - automation.hallway_motion
        - automation.junior_bathroom_motion_2
        - automation.kitchen_blinds_auto_control
        - automation.master_bathroom_blind_auto_control
        - automation.master_bathroom_light_motion
        - automation.master_bathroom_pendant_light_motion
        - automation.powder_room_motion
        - automation.water_heater_motion
        - automation.south_facing_blinds_auto_control
        - automation.lights_for_wind_down
        - automation.lights_for_elena_s_bedtime
        - automation.lights_for_sleep_hours_start
        - automation.elis_school_day_alarm
        - automation.parents_room_school_day_alarm
        - automation.parents_room_motion_ac
        - automation.parents_room_motion_fan
        - automation.parents_room_motion_lights
        - automation.parents_room_motion_timeout
        - automation.elenas_room_motion_ac
        - automation.elenas_room_motion_fan
        - automation.elenas_room_motion_lights
        - automation.elenas_room_motion_timeout
        - automation.elis_room_motion_ac
        - automation.elis_room_motion_fan
        - automation.elis_room_motion_lights
        - automation.elis_room_motion_timeout
        - automation.kitchen_motion_lights
        - automation.kitchen_motion_timeout
        - automation.study_walkway_motion_light
        - automation.study_walkway_motion_timeout
        - automation.playroom_motion_lights
        - automation.playroom_motion_timeout
        - automation.yard_motion_light
        - automation.yard_motion_timeout
        - automation.dining_room_motion_fan
        - automation.dining_room_motion_lights
        - automation.dining_room_motion_pendant_light
        - automation.dining_room_motion_timeout
        - automation.living_room_motion_fan
        - automation.living_room_motion_lights
        - automation.living_room_motion_pendant_light
        - automation.living_room_motion_timeout
    - repeat:
        for_each:
        - cover.living_room_left_blind
        - cover.living_room_right_blind
        - cover.dining_room_left_blind
        - cover.dining_room_right_blind
        sequence:
        - service: cover.close_cover
          target:
            entity_id: '{{ repeat.item }}'
        - delay: 1.5
    else:
    - service: automation.turn_on
      data: {}
      target:
        entity_id:
        - automation.ac_auto_control_at_night
        - automation.hallway_motion
        - automation.junior_bathroom_motion_2
        - automation.kitchen_blinds_auto_control
        - automation.master_bathroom_blind_auto_control
        - automation.master_bathroom_light_motion
        - automation.master_bathroom_pendant_light_motion
        - automation.powder_room_motion
        - automation.water_heater_motion
        - automation.south_facing_blinds_auto_control
        - automation.lights_for_wind_down
        - automation.lights_for_elena_s_bedtime
        - automation.lights_for_sleep_hours_start
        - automation.elis_school_day_alarm
        - automation.parents_room_school_day_alarm
        - automation.parents_room_motion_ac
        - automation.parents_room_motion_fan
        - automation.parents_room_motion_lights
        - automation.parents_room_motion_timeout
        - automation.elenas_room_motion_ac
        - automation.elenas_room_motion_fan
        - automation.elenas_room_motion_lights
        - automation.elenas_room_motion_timeout
        - automation.elis_room_motion_ac
        - automation.elis_room_motion_fan
        - automation.elis_room_motion_lights
        - automation.elis_room_motion_timeout
        - automation.kitchen_motion_lights
        - automation.kitchen_motion_timeout
        - automation.study_walkway_motion_light
        - automation.study_walkway_motion_timeout
        - automation.playroom_motion_lights
        - automation.playroom_motion_timeout
        - automation.yard_motion_light
        - automation.yard_motion_timeout
        - automation.dining_room_motion_fan
        - automation.dining_room_motion_lights
        - automation.dining_room_motion_pendant_light
        - automation.dining_room_motion_timeout
        - automation.living_room_motion_fan
        - automation.living_room_motion_lights
        - automation.living_room_motion_pendant_light
        - automation.living_room_motion_timeout
    - service: automation.trigger
      data:
        skip_condition: false
      target:
        entity_id:
        - automation.kitchen_blinds_auto_control
    - service: automation.trigger
      data:
        skip_condition: false
      target:
        entity_id: automation.south_facing_blinds_auto_control
  mode: single
- id: '1668861685616'
  alias: Living Room Motion
  description: Set up the Living Room Lights, Fan and AC according to motion
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.living_room_motion
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: '{{ states(''input_number.motion_timeout'') | int(30) }}'
      seconds: 0
  - platform: template
    value_template: '{{ states(''sensor.living_room_lux'') | float(0) < states(''input_number.minimum_lux'')
      | float(0) and is_state(''binary_sensor.living_room_motion'', ''on'') }}'
    id: setup
  condition: []
  action:
  - if:
    - condition: trigger
      id: setup
    then:
    - condition: time
      after: input_datetime.sleep_hours_end
      before: input_datetime.elenas_wind_down
    - condition: state
      entity_id:
      - light.living_room_lights
      - light.living_room_pendant_light_entity
      state: 'off'
    - if:
      - condition: numeric_state
        entity_id: binary_sensor.recommended_scene_in_living_room
        attribute: lights_level
        above: 0
      then:
      - service: light.turn_on
        data:
          brightness_pct: '{{ state_attr(''binary_sensor.recommended_scene_in_living_room'',
            ''lights_level'') }}'
        target:
          entity_id: light.living_room_lights
    - if:
      - condition: numeric_state
        entity_id: binary_sensor.recommended_scene_in_living_room
        attribute: pendant_light_level
        above: 0
      then:
      - service: light.turn_on
        data:
          brightness_pct: '{{ state_attr(''binary_sensor.recommended_scene_in_living_room'',
            ''pendant_light_level'') }}'
        target:
          entity_id: light.living_room_pendant_light_entity
    else:
    - condition: state
      entity_id: input_boolean.wind_down_lights
      state: 'on'
    - service: script.turn_off_living_room
      data: {}
      enabled: true
  mode: single
- id: '1668861754600'
  alias: Dining Room Motion
  description: Set up the Dining Room Lights, Fan and AC according to motion
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.dining_room_motion
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: '{{ states(''input_number.motion_timeout'') | int(30) }}'
      seconds: 0
  - platform: template
    value_template: '{{ states(''sensor.dining_room_lux'') | float(0) < states(''input_number.minimum_lux'')
      | float(0) and is_state(''binary_sensor.dining_room_motion'', ''on'') }}'
    id: setup
  condition: []
  action:
  - if:
    - condition: trigger
      id: setup
    then:
    - condition: time
      after: input_datetime.sleep_hours_end
      before: input_datetime.elenas_wind_down
    - condition: state
      entity_id:
      - light.dining_room_lights
      - light.dining_room_pendant_light_entity
      state: 'off'
    - if:
      - condition: numeric_state
        entity_id: binary_sensor.recommended_scene_in_dining_room
        attribute: lights_level
        above: 0
      then:
      - service: light.turn_on
        data:
          brightness_pct: '{{ state_attr(''binary_sensor.recommended_scene_in_dining_room'',
            ''lights_level'') }}'
        target:
          entity_id: light.dining_room_lights
    - if:
      - condition: numeric_state
        entity_id: binary_sensor.recommended_scene_in_dining_room
        attribute: pendant_light_level
        above: 0
      then:
      - service: light.turn_on
        data:
          brightness_pct: '{{ state_attr(''binary_sensor.recommended_scene_in_dining_room'',
            ''pendant_light_level'') }}'
        target:
          entity_id: light.dining_room_pendant_light_entity
    else:
    - condition: state
      entity_id: input_boolean.wind_down_lights
      state: 'on'
    - service: script.turn_off_dining_room
      data: {}
      enabled: true
  mode: single
- id: '1669620569638'
  alias: Kitchen Blinds Set Known Position
  description: Set the Kitchen Blind to open or closed based on contact sensor
  trigger:
  - platform: state
    entity_id:
    - cover.kitchen_blinds
    from:
    - closing
    - opening
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: binary_sensor.kitchen_blinds_closed
      state:
      - unavailable
      - unknown
    enabled: true
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.kitchen_blinds_closed
        state: 'off'
      - condition: state
        entity_id: cover.kitchen_blinds
        state: open
      sequence:
      - service: cover_rf_time_based.set_known_position
        data:
          entity_id: cover.kitchen_blinds
          position: 0
          position_type: current
          confident: true
    - conditions:
      - condition: state
        entity_id: binary_sensor.kitchen_blinds_closed
        state: 'on'
      - condition: state
        entity_id: cover.kitchen_blinds
        state: closed
      sequence:
      - service: cover_rf_time_based.set_known_position
        data:
          entity_id: cover.kitchen_blinds
          position: 100
          position_type: current
          confident: true
  mode: single
- id: '1670833166536'
  alias: Vacuum Last Use
  description: Track the start and end times of the last run of the vacuum
  trigger:
  - platform: state
    entity_id:
    - vacuum.pikachu
    to: cleaning
    id: start
    from:
    - docked
    - idle
  - platform: state
    entity_id:
    - vacuum.pikachu
    from:
    - cleaning
    - error
    to:
    - docked
    - idle
    id: stop
  condition: []
  action:
  - if:
    - condition: trigger
      id: start
    then:
    - service: input_datetime.set_datetime
      data:
        datetime: '{{ now().strftime(''%Y-%m-%d %H:%M:%S'') }}'
      target:
        entity_id: input_datetime.vacuum_last_run_start
    else:
    - service: input_datetime.set_datetime
      data:
        datetime: '{{ now().strftime(''%Y-%m-%d %H:%M:%S'') }}'
      target:
        entity_id: input_datetime.vacuum_last_run_end
  mode: single
- id: '1670838907474'
  alias: Housekeeping
  description: Daily housekeeping tasks executed at 2am, including generating Watchman
    report and README.md
  trigger:
  - platform: time
    at: 02:00:00
  condition: []
  action:
  - service: watchman.report
    data: {}
  - service: readme.generate
    data: {}
  - service: automation.turn_on
    data: {}
    target:
      entity_id:
      - automation.south_facing_blinds_auto_control
      - automation.kitchen_blinds_auto_control
      - automation.notify_when_vacuum_running_with_doors_open
  mode: single
- id: '1672302011128'
  alias: South-Facing Blinds Auto Control
  description: Open or close the south-facing blinds based on sun position
  trigger:
  - platform: state
    entity_id:
    - sun.sun
    attribute: rising
    to: false
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: 65
  - platform: numeric_state
    entity_id:
    - sensor.dining_room_lux
    - sensor.living_room_lux
    above: input_number.maximum_lux
  - platform: numeric_state
    entity_id:
    - sensor.dining_room_lux
    - sensor.living_room_lux
    below: input_number.comfortable_lux
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: numeric_state
          entity_id: sensor.dining_room_lux
          above: input_number.maximum_lux
        - condition: numeric_state
          entity_id: sensor.living_room_lux
          above: input_number.maximum_lux
      - condition: template
        value_template: '{{ now() - (states | selectattr(''entity_id'', ''in'', [''cover.dining_room_blinds'',
          ''cover.living_room_blinds'']) | map(attribute = ''last_changed'') | list
          | sort)[-1] > timedelta(minutes = states(''input_number.blinds_auto_control_debounce'')
          | int(0)) }}'
      sequence:
      - repeat:
          for_each:
          - cover.living_room_left_blind
          - cover.living_room_right_blind
          - cover.dining_room_left_blind
          - cover.dining_room_right_blind
          sequence:
          - service: cover.close_cover
            target:
              entity_id: '{{ repeat.item }}'
          - delay: 1.5
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: sun.sun
          attribute: rising
          state: false
        - condition: numeric_state
          entity_id: sun.sun
          attribute: elevation
          above: 65.1
        - condition: numeric_state
          entity_id: sensor.dining_room_lux
          value_template: '{{ state.state | int(1000) - (states(''input_number.minimum_lux'')
            | int + 300) }}'
          below: 0
        - condition: numeric_state
          entity_id: sensor.living_room_lux
          value_template: '{{ state.state | int(1000) - (states(''input_number.minimum_lux'')
            | int + 300) }}'
          below: 0
      - condition: template
        value_template: '{{ now() - (states | selectattr(''entity_id'', ''in'', [''cover.dining_room_blinds'',
          ''cover.living_room_blinds'']) | map(attribute = ''last_changed'') | list
          | sort)[-1] > timedelta(minutes = states(''input_number.blinds_auto_control_debounce'')
          | int(0)) }}'
      sequence:
      - repeat:
          for_each:
          - cover.living_room_left_blind
          - cover.living_room_right_blind
          - cover.dining_room_left_blind
          - cover.dining_room_right_blind
          sequence:
          - service: cover.open_cover
            target:
              entity_id: '{{ repeat.item }}'
          - delay: 1.5
  mode: single
- id: '1672314137246'
  alias: Dining Room Blinds Controller
  description: Control the Dining Room Blinds
  use_blueprint:
    path: EPMatt/ikea_e1766.yaml
    input:
      integration: ZHA
      controller_device: 68f01f6ac156c53b78eb226a0e60ea51
      helper_last_controller_event: input_text.zz_dining_room_blinds_controller_last_event
      action_button_up_short:
      - if:
        - condition: state
          entity_id: cover.dining_room_blinds
          state: closing
        then:
        - service: cover.stop_cover
          data: {}
          target:
            entity_id: cover.dining_room_blinds
        else:
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.dining_room_blinds
      action_button_down_short:
      - if:
        - condition: state
          entity_id: cover.dining_room_blinds
          state: opening
        then:
        - service: cover.stop_cover
          data: {}
          target:
            entity_id: cover.dining_room_blinds
        else:
        - service: cover.close_cover
          data: {}
          target:
            entity_id: cover.dining_room_blinds
      action_button_up_double:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.south_facing_blinds_auto_control
      action_button_down_double:
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.south_facing_blinds_auto_control
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 500
- id: '1672314269486'
  alias: Living Room Blinds Controller
  description: Control the Living Room Blinds
  use_blueprint:
    path: EPMatt/ikea_e1766.yaml
    input:
      integration: ZHA
      controller_device: 0981862e96a5579d41b0f56bff674bc1
      helper_last_controller_event: input_text.zz_living_room_blinds_controller_last_event
      action_button_up_short:
      - if:
        - condition: state
          entity_id: cover.living_room_blinds
          state: closing
        then:
        - service: cover.stop_cover
          data: {}
          target:
            entity_id: cover.living_room_blinds
        else:
        - service: cover.open_cover
          data: {}
          target:
            entity_id: cover.living_room_blinds
      action_button_down_short:
      - if:
        - condition: state
          entity_id: cover.living_room_blinds
          state: opening
        then:
        - service: cover.stop_cover
          data: {}
          target:
            entity_id: cover.living_room_blinds
        else:
        - service: cover.close_cover
          data: {}
          target:
            entity_id: cover.living_room_blinds
      action_button_up_double:
      - service: automation.turn_on
        data: {}
        target:
          entity_id: automation.south_facing_blinds_auto_control
      action_button_down_double:
      - service: automation.turn_off
        data: {}
        target:
          entity_id: automation.south_facing_blinds_auto_control
      button_up_double_press: true
      button_down_double_press: true
      helper_double_press_delay: 500
- id: '1672722028985'
  alias: Rice Cooker Auto Control
  description: Turn on or off the rice cooker based on lid state and idle time
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.rice_cooker_lid
    to: 'off'
    id: lid_closed
  - platform: template
    value_template: '{{ is_state(''switch.rice_cooker'',''on'') and states(''sensor.rice_cooker_watts'')
      | float(0) <= 1 }}'
    for:
      minutes: 2
    id: idle
  condition: []
  action:
  - if:
    - condition: trigger
      id: lid_closed
    then:
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.rice_cooker
    else:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.rice_cooker
  mode: single
- id: '1672734021271'
  alias: Rice Cooker Set State
  description: Set the state of the rice cooker based on power consumption
  trigger:
  - platform: numeric_state
    entity_id: sensor.rice_cooker_watts_recent_max
    above: 200
    id: cooking
  - platform: numeric_state
    entity_id: sensor.rice_cooker_watts_recent_max
    above: 60
    below: 140
    id: warming
  - platform: state
    entity_id:
    - sensor.rice_cooker_watts
    to: '1'
    for:
      hours: 0
      minutes: 1
      seconds: 0
    id: standby
  - platform: state
    entity_id:
    - switch.rice_cooker
    not_from:
    - unavailable
    - unknown
    not_to:
    - unavailable
    - unknown
    id: power
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: cooking
      sequence:
      - service: input_select.select_option
        data:
          option: Cooking
        target:
          entity_id: input_select.rice_cooker_status
    - conditions:
      - condition: trigger
        id: warming
      sequence:
      - service: input_select.select_option
        data:
          option: Warming
        target:
          entity_id: input_select.rice_cooker_status
    - conditions:
      - condition: trigger
        id: standby
      sequence:
      - service: input_select.select_option
        data:
          option: Standby
        target:
          entity_id: input_select.rice_cooker_status
    - conditions:
      - condition: trigger
        id: power
      sequence:
      - if:
        - condition: state
          entity_id: switch.rice_cooker
          state: 'on'
        then:
        - service: input_select.select_option
          data:
            option: Standby
          target:
            entity_id: input_select.rice_cooker_status
        else:
        - service: input_select.select_option
          data:
            option: 'Off'
          target:
            entity_id: input_select.rice_cooker_status
    default: []
  mode: single
- id: '1672735031886'
  alias: Rice Cooker Last Use
  description: Track the start and end times of the last run of the rice cooker
  trigger:
  - platform: state
    entity_id:
    - input_select.rice_cooker_status
    from:
    - 'Off'
    - Standby
    to: Cooking
    id: cooking_start
  - platform: state
    entity_id:
    - input_select.rice_cooker_status
    from: Cooking
    to: Warming
    id: cooking_end
  condition: []
  action:
  - if:
    - condition: trigger
      id: cooking_start
    then:
    - service: input_datetime.set_datetime
      data:
        datetime: '{{ now().strftime(''%Y-%m-%d %H:%M:%S'') }}'
      target:
        entity_id: input_datetime.rice_cooker_last_run_start
    else:
    - service: input_datetime.set_datetime
      data:
        datetime: '{{ now().strftime(''%Y-%m-%d %H:%M:%S'') }}'
      target:
        entity_id: input_datetime.rice_cooker_last_run_end
  mode: single
- id: '1672879233289'
  alias: Lights Auto Turn Off
  description: Turn off the lights when lux is sufficient
  trigger:
  - platform: numeric_state
    entity_id: sensor.elenas_room_lux
    id: elenas_room
    above: input_number.comfortable_lux
  - platform: numeric_state
    entity_id: sensor.elis_room_lux
    id: elis_room
    above: input_number.comfortable_lux
  - platform: numeric_state
    entity_id: sensor.yard_lux
    id: yard
    above: input_number.comfortable_lux
  - platform: numeric_state
    entity_id: sensor.dining_room_lux
    id: dining_room
    above: input_number.comfortable_lux
  - platform: numeric_state
    entity_id: sensor.living_room_lux
    id: living_room
    above: input_number.comfortable_lux
  - platform: numeric_state
    entity_id: sensor.kitchen_lux
    id: kitchen
    above: input_number.comfortable_lux
  - platform: numeric_state
    entity_id: sensor.study_walkway_lux
    id: study_room
    above: input_number.comfortable_lux
  - platform: numeric_state
    entity_id: sensor.parents_room_lux
    id: parents_room
    above: input_number.comfortable_lux
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - elenas_room
        - elis_room
        - study_room
        - parents_room
        - kitchen
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.{{ trigger.id }}_lights
    - conditions:
      - condition: trigger
        id: yard
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.yard_light_entity
          - light.playroom_lights
    - conditions:
      - condition: trigger
        id: dining_room
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.dining_room_lights
          - light.dining_room_pendant_light_entity
    - conditions:
      - condition: trigger
        id: living_room
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.living_room_lights
          - light.living_room_pendant_light_entity
  mode: single
- id: '1672881185286'
  alias: Lights for Elena's Bedtime
  description: Set light brightness for Elena's Bedtime
  trigger:
  - platform: time
    at: input_datetime.elenas_bedtime
  condition: []
  action:
  - if:
    - condition: state
      entity_id: light.elenas_room_lights
      state: 'on'
    then:
    - repeat:
        for_each:
        - light.elenas_room_bulb_1_entity
        - light.elenas_room_bulb_2_entity
        - light.elenas_room_bulb_3_entity
        sequence:
        - service: light.turn_on
          target:
            entity_id: '{{ repeat.item }}'
          data:
            transition: 10
            brightness_pct: '{{ states(''input_number.night_light_brightness'') }}'
        - delay: 2
  mode: single
- id: '1672898689403'
  alias: Lights for Wind Down
  description: Set house lights for wind down
  trigger:
  - platform: time
    at: input_datetime.wind_down
  - platform: state
    entity_id:
    - input_boolean.wind_down_lights
    from: 'off'
    to: 'on'
  condition:
  - condition: template
    value_template: '{{ now() > today_at(states(''input_datetime.wind_down'')) - timedelta(minutes
      = 1) }}'
  - condition: state
    entity_id: input_boolean.wind_down_lights
    state: 'on'
  action:
  - parallel:
    - if:
      - condition: or
        conditions:
        - condition: state
          entity_id: light.yard_light_entity
          state: 'on'
        - condition: state
          entity_id: light.playroom_lights
          state: 'on'
      then:
      - repeat:
          for_each:
          - light.yard_light_entity
          - light.playroom_bulb_1_entity
          - light.playroom_bulb_2_entity
          - light.playroom_bulb_3_entity
          sequence:
          - service: light.turn_on
            target:
              entity_id: '{{ repeat.item }}'
            data:
              transition: 10
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
          - delay: 2
    - if:
      - condition: state
        entity_id: light.kitchen_lights
        state: 'on'
      then:
      - repeat:
          for_each:
          - light.kitchen_ceiling_light_entity
          - light.kitchen_bulb_1_entity
          - light.kitchen_bulb_2_entity
          - light.kitchen_bulb_3_entity
          sequence:
          - service: light.turn_on
            target:
              entity_id: '{{ repeat.item }}'
            data:
              transition: 10
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
          - delay: 2
    - if:
      - condition: state
        entity_id: light.study_room_lights
        state: 'on'
      - condition: state
        entity_id: device_tracker.grace_harbourvest_laptop_ethernet
        state: not_home
      then:
      - repeat:
          for_each:
          - light.study_room_bulb_1_entity
          - light.study_room_bulb_2_entity
          - light.study_room_bulb_3_entity
          - light.study_room_bulb_4_entity
          sequence:
          - service: light.turn_on
            target:
              entity_id: '{{ repeat.item }}'
            data:
              transition: 10
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
          - delay: 2
  - if:
    - condition: state
      entity_id: light.living_room_lights
      state: 'on'
    then:
    - repeat:
        for_each:
        - light.living_room_bulb_1_entity
        - light.living_room_bulb_2_entity
        - light.living_room_bulb_3_entity
        - light.living_room_bulb_4_entity
        - light.living_room_bulb_5_entity
        sequence:
        - service: light.turn_off
          target:
            entity_id: '{{ repeat.item }}'
          data:
            transition: 10
        - delay: 2
  - if:
    - condition: state
      entity_id: light.living_room_pendant_light_entity
      state: 'on'
    then:
    - service: light.turn_on
      data:
        brightness_pct: '{{ states(''input_number.night_light_brightness'') }}'
        transition: 10
      target:
        entity_id: light.living_room_pendant_light_entity
  - if:
    - condition: state
      entity_id: light.dining_room_lights
      state: 'on'
    then:
    - repeat:
        for_each:
        - light.dining_room_bulb_1_entity
        - light.dining_room_bulb_2_entity
        - light.dining_room_bulb_3_entity
        - light.dining_room_bulb_4_entity
        sequence:
        - service: light.turn_off
          target:
            entity_id: '{{ repeat.item }}'
        - delay: 2
  - if:
    - condition: state
      entity_id: light.dining_room_pendant_light_entity
      state: 'on'
    then:
    - service: light.turn_on
      data:
        transition: 10
        brightness_pct: '{{ states(''input_number.night_light_brightness'') }}'
      target:
        entity_id: light.dining_room_pendant_light_entity
  - if:
    - condition: state
      entity_id: light.hallway_lights
      state: 'on'
    then:
    - repeat:
        for_each:
        - light.hallway_bulb_1_entity
        - light.hallway_bulb_2_entity
        sequence:
        - service: light.turn_on
          target:
            entity_id: '{{ repeat.item }}'
          data:
            transition: 10
            brightness_pct: '{{ states(''input_number.night_light_brightness'') }}'
        - delay: 2
  - parallel:
    - if:
      - condition: state
        entity_id: light.powder_room_pendant_light_entity
        state: 'on'
      then:
      - service: light.turn_on
        data:
          transition: 10
          brightness_pct: '{{ states(''input_number.night_light_brightness'') }}'
        target:
          entity_id: light.powder_room_pendant_light_entity
    - if:
      - condition: state
        entity_id: light.junior_bathroom_lights
        state: 'on'
      then:
      - repeat:
          for_each:
          - light.junior_bathroom_ceiling_light_entity
          - light.junior_bathroom_pendant_light_entity
          sequence:
          - service: light.turn_on
            target:
              entity_id: '{{ repeat.item }}'
            data:
              transition: 10
              brightness_pct: '{{ states(''input_number.night_light_brightness'')
                }}'
          - delay: 2
  mode: single
- id: '1674045954399'
  alias: Lights for Sleep Hours Start
  description: Set the lights for Sleep Hours Start
  trigger:
  - platform: time
    at: input_datetime.sleep_hours_start
  condition: []
  action:
  - if:
    - condition: state
      entity_id: light.elis_room_lights
      state: 'on'
    then:
    - repeat:
        for_each:
        - light.elis_room_bulb_1_entity
        - light.elis_room_bulb_2_entity
        - light.elis_room_bulb_3_entity
        sequence:
        - service: light.turn_on
          target:
            entity_id: '{{ repeat.item }}'
          data:
            transition: 10
            brightness_pct: '{{ states(''input_number.night_light_brightness'') }}'
        - delay: 2
  mode: single
- id: '1675045598043'
  alias: Junior Bathroom Occupancy
  description: Track occupancy in the Junior Bathroom based on Wasp in a Box logic
  use_blueprint:
    path: AlexanderBabel/occupancy.yaml
    input:
      door_sensor: binary_sensor.junior_bathroom_door
      motion_sensor: binary_sensor.junior_bathroom_motion_sensors
      occupancy_helper: input_boolean.junior_bathroom_occupancy
      last_motion_helper: input_datetime.junior_bathroom_last_motion_detected
      turn_off_delay: 90
- id: '1675045768564'
  alias: Powder Room Occupancy
  description: Track occupancy in the Powder Room based on Wasp in a Box logic
  use_blueprint:
    path: AlexanderBabel/occupancy.yaml
    input:
      door_sensor: binary_sensor.powder_room_door
      motion_sensor: binary_sensor.powder_room_motion
      occupancy_helper: input_boolean.powder_room_occupancy
      last_motion_helper: input_datetime.powder_room_last_motion_detected
- id: '1675045803046'
  alias: Master Bathroom Occupancy
  description: Track occupancy in the Master Bathroom based on Wasp in a Box logic
  use_blueprint:
    path: AlexanderBabel/occupancy.yaml
    input:
      door_sensor: binary_sensor.master_bathroom_door
      motion_sensor: binary_sensor.master_bathroom_motion_sensors
      occupancy_helper: input_boolean.master_bathroom_occupancy
      last_motion_helper: input_datetime.master_bathroom_last_motion_detected
      turn_off_delay: 90
- id: '1675047268231'
  alias: Study Table Controller
  description: Control the house devices for working at home
  use_blueprint:
    path: EPMatt/ikea_e1743.yaml
    input:
      integration: ZHA
      controller_device: 43f2d52bfecdf388c86e9f919d45e359
      helper_last_controller_event: input_text.zz_study_table_controller_last_event
      action_button_up_short:
      - service: script.set_recommended_scene_in_study_room
        data: {}
      action_button_up_long:
      - service: light.turn_on
        data:
          brightness_step_pct: '{{ states(''input_number.light_brightness_change_step'')
            }}'
        target:
          entity_id: light.study_room_lights
      action_button_down_short:
      - service: script.turn_off_study_room
        data: {}
      action_button_down_long:
      - service: light.turn_on
        data:
          brightness_step_pct: '-{{ states(''input_number.light_brightness_change_step'')
            }}

            '
        target:
          entity_id: light.study_room_lights
      action_button_down_double:
      - service: script.turn_off_junior_bathroom
        data: {}
      - service: script.turn_off_powder_room
        data: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - service: script.turn_off_elenas_room
        data: {}
      - service: script.turn_off_elis_room
        data: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - service: script.turn_off_playroom
        data: {}
      - service: script.turn_off_hallway
        data: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - service: script.turn_off_kitchen
        data: {}
      - service: script.turn_off_master_bathroom
        data: {}
      - service: script.turn_off_parents_room
        data: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 300
      - service: script.turn_off_dining_room
        data: {}
      - service: script.turn_off_living_room
        data: {}
      button_up_long_loop: true
      button_up_long_max_loop_repeats: 20
      button_down_long_loop: true
      button_down_long_max_loop_repeats: 20
      button_down_double_press: true
      helper_double_press_delay: 500
- id: '1675597759060'
  alias: Eli's School Day Alarm
  description: Wake up Eli on school days
  trigger:
  - platform: time
    at: input_datetime.elis_school_day_alarm
  condition:
  - condition: time
    after: 00:01:00
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  - condition: state
    entity_id:
    - calendar.public_holidays
    - calendar.elis_school_holidays
    state: 'off'
  - condition: state
    entity_id: input_boolean.elis_school_day_alarm_enabled
    state: 'on'
  action:
  - service: script.elis_school_day_alarm
    data: {}
  mode: single
- id: '1675606538755'
  alias: Parents' Room School Day Alarm
  description: Wake up parents on school days
  trigger:
  - platform: time
    at: input_datetime.elenas_school_day_alarm
    id: Elena
  - platform: time
    at: input_datetime.elis_school_day_alarm
    id: Eli
  condition:
  - condition: time
    after: 00:01:00
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  - condition: state
    entity_id: calendar.public_holidays
    state: 'off'
  action:
  - if:
    - condition: trigger
      id: Eli
    then:
    - condition: state
      entity_id: binary_sensor.pixel_4a_is_charging
      state: 'off'
    - condition: state
      entity_id: calendar.elis_school_holidays
      state: 'off'
    - condition: state
      entity_id: input_boolean.elis_school_day_alarm_enabled
      state: 'on'
    - service: script.parents_room_school_day_alarm
      data: {}
    else:
    - condition: state
      entity_id: binary_sensor.pixel_4a_is_charging
      state: 'on'
    - condition: state
      entity_id: calendar.elenas_school_holidays
      state: 'off'
    - condition: state
      entity_id: input_boolean.elenas_school_day_alarm_enabled
      state: 'on'
    - service: script.parents_room_school_day_alarm
      data: {}
  mode: single
- id: '1676814581353'
  alias: Notify When Holiday Upcoming
  description: Send notifications to apps when school or public holidays are upcoming
  trigger:
  - platform: template
    value_template: '{{ (state_attr(''calendar.elenas_school_holidays'',''start_time'').split()[0]
      | as_datetime).date() - now().date() <= timedelta(days = states(''input_number.holiday_advance_reminder'')
      | int(7)) }}'
    alias: When Elena's next school holiday is less than time threshold for advance
      reminder
    id: calendar.elenas_school_holidays
  - platform: template
    value_template: '{{ (state_attr(''calendar.elenas_school_holidays'',''start_time'').split()[0]
      | as_datetime).date() - now().date() <= timedelta(days = 1) }}'
    alias: When Elena's next school holiday is tomorrow
    id: calendar.elenas_school_holidays
  - platform: template
    value_template: '{{ (state_attr(''calendar.elis_school_holidays'',''start_time'').split()[0]
      | as_datetime).date() - now().date() <= timedelta(days = states(''input_number.holiday_advance_reminder'')
      | int(7)) }}'
    alias: When Eli's next school holiday is less than time threshold for advance
      reminder
    id: calendar.elis_school_holidays
  - platform: template
    value_template: '{{ (state_attr(''calendar.elis_school_holidays'',''start_time'').split()[0]
      | as_datetime).date() - now().date() <= timedelta(days = 1) }}'
    id: calendar.elis_school_holidays
    alias: When Eli's next school holiday is tomorrow
  - platform: template
    value_template: '{{ (state_attr(''calendar.public_holidays'',''start_time'').split()[0]
      | as_datetime).date() - now().date() <= timedelta(days = states(''input_number.holiday_advance_reminder'')
      | int(7)) }}'
    id: calendar.public_holidays
    alias: When the next public holiday is less than time threshold for advance reminder
  - platform: template
    value_template: '{{ (state_attr(''calendar.public_holidays'',''start_time'').split()[0]
      | as_datetime).date() - now().date() <= timedelta(days = 1) }}'
    id: calendar.public_holidays
    alias: When the next public holiday is tomorrow
  condition: []
  action:
  - service: notify.mobile_app_grace
    data:
      title: "{% set start_date = (state_attr(trigger.id,'start_time').split()[0]
        | as_datetime).date() %} {% set end_date = (state_attr(trigger.id,'end_time').split()[0]
        | as_datetime - timedelta(days=1)).date() %} {% if start_date == end_date
        %}\n  {{ start_date.strftime('%a %d %b %Y') }}\n{% else %}\n  {{ start_date.strftime('%a
        %d %b %Y') }} to {{ end_date.strftime('%a %d %b %Y') }}\n{% endif %}"
      message: '{% set preamble = {''calendar.elenas_school_holidays'': ''Elena has
        no school'', ''calendar.elis_school_holidays'': ''Eli has no school'', ''calendar.public_holidays'':
        ''Public holiday''} %} {{ preamble[trigger.id] }} due to {{ state_attr(trigger.id,''message'')
        }}.'
  - service: notify.mobile_app_pixel_4a
    data:
      title: "{% set start_date = (state_attr(trigger.id,'start_time').split()[0]
        | as_datetime).date() %} {% set end_date = (state_attr(trigger.id,'end_time').split()[0]
        | as_datetime - timedelta(days=1)).date() %} {% if start_date == end_date
        %}\n  {{ start_date.strftime('%a %d %b %Y') }}\n{% else %}\n  {{ start_date.strftime('%a
        %d %b %Y') }} to {{ end_date.strftime('%a %d %b %Y') }}\n{% endif %}"
      message: '{% set preamble = {''calendar.elenas_school_holidays'': ''Elena has
        no school'', ''calendar.elis_school_holidays'': ''Eli has no school'', ''calendar.public_holidays'':
        ''Public holiday''} %} {{ preamble[trigger.id] }} due to {{ state_attr(trigger.id,''message'')
        }}.'
  mode: parallel
- id: '1676870988942'
  alias: Dining Room AC Set State
  description: Set the Dining Room AC power and temperature
  use_blueprint:
    path: danleongjy/ac_set_state.yaml
    input:
      ac: climate.dining_room_ac
- id: '1676871017133'
  alias: Living Room AC Set State
  description: Set the Living Room AC power and temperature
  use_blueprint:
    path: danleongjy/ac_set_state.yaml
    input:
      ac: climate.living_room_ac
- id: '1676871038656'
  alias: Study Room AC Set State
  description: Set the Study Room AC power and temperature
  use_blueprint:
    path: danleongjy/ac_set_state.yaml
    input:
      ac: climate.study_room_ac
- id: '1676871060575'
  alias: Parents' Room AC Set State
  description: Set the Parents' Room AC power and temperature
  use_blueprint:
    path: danleongjy/ac_set_state.yaml
    input:
      ac: climate.parents_room_ac
- id: '1676871171509'
  alias: Elena's Room AC Set State
  description: Set Elena's Room AC power and temperature
  use_blueprint:
    path: danleongjy/ac_set_state.yaml
    input:
      ac: climate.elenas_room_ac
- id: '1676871202756'
  alias: Eli's Room AC Set State
  description: Set Eli's Room AC power and temperature
  use_blueprint:
    path: danleongjy/ac_set_state.yaml
    input:
      ac: climate.elis_room_ac
- id: '1676873827127'
  alias: Elena's Room AC Auto Control
  description: Automatically turn on or off Elena's Room AC to keep Elena's Room Temperature
    within +0.7 and +0 degC of the AC target temperature
  use_blueprint:
    path: danleongjy/ac_auto_control.yaml
    input:
      ac: climate.elenas_room_ac
      temp_sensor: sensor.elenas_room_temperature
- id: '1676873914630'
  alias: Eli's Room AC Auto Control
  description: Automatically turn on or off Eli's Room AC to keep Eli's Room Temperature
    within +1.2 and +0.2 degC of the AC target temperature
  use_blueprint:
    path: danleongjy/ac_auto_control.yaml
    input:
      ac: climate.elis_room_ac
      temp_sensor: sensor.elis_room_temperature
      min_temp_offset: 0.2
      max_temp_offset: 1.2
- id: '1676891025656'
  alias: Study Room Fan Set State
  description: Set the Study Room Fan speed and power
  use_blueprint:
    path: danleongjy/fan_set_state.yaml
    input:
      fan: fan.study_room_fan
      recommended_scene_sensor: binary_sensor.recommended_scene_in_study_room
- id: '1676891156966'
  alias: Parents' Room Fan Set State
  description: Set the Parents' Room Fan speed and power
  use_blueprint:
    path: danleongjy/fan_set_state.yaml
    input:
      fan: fan.parents_room_fan
      recommended_scene_sensor: binary_sensor.recommended_scene_in_parents_room
- id: '1676891386490'
  alias: Parents' Room AC Auto Control
  description: Automatically turn of or off Parents' Room AC to keep Parents' Room
    Temperature within +1.2 and +0.2 degC of the AC target temperature
  use_blueprint:
    path: danleongjy/ac_auto_control.yaml
    input:
      ac: climate.parents_room_ac
      temp_sensor: sensor.parents_room_temperature
      min_temp_offset: 0.2
      max_temp_offset: 1.2
- id: '1676891440581'
  alias: Living Room Fan Set State
  description: Set the Living Room Fan speed and power
  use_blueprint:
    path: danleongjy/fan_set_state.yaml
    input:
      fan: fan.living_room_fan
      recommended_scene_sensor: binary_sensor.recommended_scene_in_living_room
- id: '1676891485025'
  alias: Dining Room Fan Set State
  description: Set the Dining Room Fan speed and power
  use_blueprint:
    path: danleongjy/fan_set_state.yaml
    input:
      fan: fan.dining_room_fan
      recommended_scene_sensor: binary_sensor.recommended_scene_in_dining_room
- id: '1676891528260'
  alias: Elena's Room Fan Set State
  description: Set Elena's Room Fan speed and power
  use_blueprint:
    path: danleongjy/fan_set_state.yaml
    input:
      fan: fan.elenas_room_fan
      recommended_scene_sensor: binary_sensor.recommended_scene_in_elenas_room
- id: '1676891580168'
  alias: Eli's Room Fan Set State
  description: Set Eli's Room Fan speed and power
  use_blueprint:
    path: danleongjy/fan_set_state.yaml
    input:
      fan: fan.elis_room_fan
      recommended_scene_sensor: binary_sensor.recommended_scene_in_elis_room
- id: '1677851042764'
  alias: Parents' Room Motion Timeout
  description: Turn off the Parents' Room Lights, Fan, AC and AC Auto Control if no
    motion is detected for timeout period
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor: binary_sensor.parents_room_motion
      number_of_minutes: input_number.motion_timeout
      doors_list:
      - binary_sensor.parents_room_door
      - binary_sensor.master_bathroom_door
      turnoff_entities_list:
      - light.parents_room_lights
      - fan.parents_room_fan
      - climate.parents_room_ac
      - automation.parents_room_ac_auto_control
- id: '1677899246051'
  alias: Parents' Room Motion Fan
  description: Turn on the Parents' Room Fan depending on whether the doors are open
  use_blueprint:
    path: danleongjy/motion_fan.yaml
    input:
      motion_sensor: binary_sensor.parents_room_motion
      fan: fan.parents_room_fan
      fan_speed_door_closed: input_number.fans_po_eco_speed_when_ac_on
      fan_speed_door_open: input_number.fans_po_eco_speed_when_ac_off
      entities_list:
      - light.parents_room_lights
      - fan.parents_room_fan
      - climate.parents_room_ac
      doors_list:
      - binary_sensor.parents_room_door
      - binary_sensor.master_bathroom_door
- id: '1677902645887'
  alias: Parents' Room Motion AC
  description: Control the Parents' Room AC when motion is detected depending on whether
    the doors are open
  use_blueprint:
    path: danleongjy/motion_ac.yaml
    input:
      motion_sensor: binary_sensor.parents_room_motion
      ac: climate.parents_room_ac
      ac_auto_control: automation.parents_room_ac_auto_control
      ac_auto_control_start: input_datetime.ac_auto_control_start
      ac_auto_control_end: input_datetime.ac_auto_control_end
      entities_list:
      - light.parents_room_lights
      - fan.parents_room_fan
      - climate.parents_room_ac
      doors_list:
      - binary_sensor.parents_room_door
      - binary_sensor.master_bathroom_door
- id: '1677905626060'
  alias: Parents' Room Motion Lights
  description: Set the Parents' Room Lights when motion is detected, at least one
    door is open and no devices are on, depending on lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.parents_room_lights
      motion_sensor: binary_sensor.parents_room_motion
      lux_sensor: sensor.parents_room_lux
      sufficient_lux: input_number.comfortable_lux
      insufficient_lux: input_number.minimum_lux
      blackout_hours_start: input_datetime.sleep_hours_start
      blackout_hours_end: input_datetime.sleep_hours_end
      dim_hours_start: input_datetime.wind_down
      dim_light_brightness: input_number.night_light_brightness
      morning_light_brightness: input_number.morning_light_brightness
      entities_list:
      - light.parents_room_lights
      - fan.parents_room_fan
      - climate.parents_room_ac
      doors_list:
      - binary_sensor.parents_room_door
      - binary_sensor.master_bathroom_door
- id: '1677909386904'
  alias: Elena's Room Motion AC
  description: Control Elena's Room AC when motion is detected depending on whether
    the doors are open
  use_blueprint:
    path: danleongjy/motion_ac.yaml
    input:
      motion_sensor: binary_sensor.elenas_room_motion
      ac: climate.elenas_room_ac
      ac_auto_control: automation.elenas_room_ac_auto_control
      ac_auto_control_start: input_datetime.ac_auto_control_start
      ac_auto_control_end: input_datetime.ac_auto_control_end
      entities_list:
      - light.elenas_room_lights
      - fan.elenas_room_fan
      - climate.elenas_room_ac
      doors_list:
      - binary_sensor.elenas_room_door
- id: '1677909480401'
  alias: Elena's Room Motion Fan
  description: Turn on Elena's Room Fan depending on whether the doors are open
  use_blueprint:
    path: danleongjy/motion_fan.yaml
    input:
      motion_sensor: binary_sensor.elenas_room_motion
      fan: fan.elenas_room_fan
      fan_speed_door_closed: input_number.fans_po_eco_speed_when_ac_on
      fan_speed_door_open: input_number.fans_po_eco_speed_when_ac_off
      entities_list:
      - light.elenas_room_lights
      - fan.elenas_room_fan
      - climate.elenas_room_ac
      doors_list:
      - binary_sensor.elenas_room_door
- id: '1677909588511'
  alias: Elena's Room Motion Lights
  description: Set Elena's Room Lights when motion is detected, at least one door
    is open and no devices are on, depending on lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.elenas_room_lights
      motion_sensor: binary_sensor.elenas_room_motion
      lux_sensor: sensor.elenas_room_lux
      sufficient_lux: input_number.comfortable_lux
      insufficient_lux: input_number.minimum_lux
      blackout_hours_start: input_datetime.elenas_bedtime
      blackout_hours_end: input_datetime.sleep_hours_end
      dim_hours_start: input_datetime.elenas_wind_down
      dim_light_brightness: input_number.night_light_brightness
      morning_light_brightness: input_number.morning_light_brightness
      entities_list:
      - light.elenas_room_lights
      - fan.elenas_room_fan
      - climate.elenas_room_ac
      doors_list:
      - binary_sensor.elenas_room_door
- id: '1677909662437'
  alias: Elena's Room Motion Timeout
  description: Turn off Elena's Room Lights, Fan, AC and AC Auto Control if no motion
    is detected for timeout period
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor: binary_sensor.elenas_room_motion
      number_of_minutes: input_number.motion_timeout
      doors_list:
      - binary_sensor.elenas_room_door
      turnoff_entities_list:
      - light.elenas_room_lights
      - fan.elenas_room_fan
      - climate.elenas_room_ac
      - automation.elenas_room_ac_auto_control
- id: '1677909834890'
  alias: Eli's Room Motion AC
  description: Control Eli's Room AC when motion is detected depending on whether
    the doors are open
  use_blueprint:
    path: danleongjy/motion_ac.yaml
    input:
      motion_sensor: binary_sensor.elis_room_motion
      ac: climate.elis_room_ac
      ac_auto_control: automation.elis_room_ac_auto_control
      ac_auto_control_start: input_datetime.ac_auto_control_start
      ac_auto_control_end: input_datetime.ac_auto_control_end
      entities_list:
      - light.elis_room_lights
      - fan.elis_room_fan
      - climate.elis_room_ac
      doors_list:
      - binary_sensor.elis_room_door
- id: '1677909930165'
  alias: Eli's Room Motion Fan
  description: Turn on Eli's Room Fan depending on whether the doors are open
  use_blueprint:
    path: danleongjy/motion_fan.yaml
    input:
      motion_sensor: binary_sensor.elis_room_motion
      fan: fan.elis_room_fan
      fan_speed_door_closed: input_number.fans_po_eco_speed_when_ac_on
      fan_speed_door_open: input_number.fans_po_eco_speed_when_ac_off
      entities_list:
      - light.elis_room_lights
      - fan.elis_room_fan
      - climate.elis_room_ac
      doors_list:
      - binary_sensor.elis_room_door
- id: '1677910041263'
  alias: Eli's Room Motion Lights
  description: Set Eli's Room Lights when motion is detected, at least one door is
    open and no devices are on, depending on lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.elis_room_lights
      motion_sensor: binary_sensor.elis_room_motion
      lux_sensor: sensor.elis_room_lux
      sufficient_lux: input_number.comfortable_lux
      insufficient_lux: input_number.minimum_lux
      blackout_hours_start: input_datetime.sleep_hours_start
      blackout_hours_end: input_datetime.sleep_hours_end
      dim_hours_start: input_datetime.wind_down
      dim_light_brightness: input_number.night_light_brightness
      morning_light_brightness: input_number.morning_light_brightness
      entities_list:
      - light.elis_room_lights
      - fan.elis_room_fan
      - climate.elis_room_ac
      doors_list:
      - binary_sensor.elis_room_door
- id: '1677910111088'
  alias: Eli's Room Motion Timeout
  description: Turn off Eli's Room Lights, Fan, AC and AC Auto Control if no motion
    is detected for timeout period
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor: binary_sensor.elis_room_motion
      number_of_minutes: input_number.motion_timeout
      doors_list:
      - binary_sensor.elis_room_door
      turnoff_entities_list:
      - light.elis_room_lights
      - fan.elis_room_fan
      - climate.elis_room_ac
      - automation.elis_room_ac_auto_control
- id: '1677927683160'
  alias: Kitchen Motion Lights
  description: Set Kitchen Lights when motion is detected, depending on lux level
    and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.kitchen_lights
      motion_sensor: binary_sensor.kitchen_motion_sensors
      lux_sensor: sensor.kitchen_lux
      sufficient_lux: input_number.comfortable_lux
      insufficient_lux: input_number.minimum_lux
      blackout_hours_start: input_datetime.sleep_hours_end
      blackout_hours_end: input_datetime.sleep_hours_end
      dim_hours_start: input_datetime.wind_down
      dim_light_brightness: input_number.night_light_brightness
      morning_light_brightness: input_number.morning_light_brightness
- id: '1677927981807'
  alias: Kitchen Motion Timeout
  description: Turn off Kitchen Lights when no motion is detected for a certain amount
    of time.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor: binary_sensor.kitchen_motion_sensors
      number_of_minutes: input_number.motion_short_timeout
      turnoff_entities_list:
      - light.kitchen_lights
- id: '1678321703771'
  alias: Study Walkway Motion Light
  description: Control Study Room Bulb 4 when motion is detected, depending on lux
    level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.study_room_bulb_4_entity
      motion_sensor: binary_sensor.study_walkway_motion
      lux_sensor: sensor.study_walkway_lux
      sufficient_lux: input_number.comfortable_lux
      insufficient_lux: input_number.minimum_lux
      dim_hours_start: input_datetime.wind_down
      blackout_hours_start: input_datetime.sleep_hours_end
      blackout_hours_end: input_datetime.sleep_hours_end
      dim_light_brightness: input_number.night_light_brightness
      morning_light_brightness: input_number.morning_light_brightness
      entities_list:
      - light.study_room_bulb_1_entity
      - light.study_room_bulb_2_entity
      - light.study_room_bulb_3_entity
- id: '1678322492101'
  alias: Study Walkway Motion Timeout
  description: Turn off Study Room Bulb 4 when no motion is detected for a certain
    amount of time.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor: binary_sensor.study_walkway_motion
      number_of_minutes: input_number.motion_short_timeout
      entities_list:
      - light.study_room_bulb_1_entity
      - light.study_room_bulb_2_entity
      - light.study_room_bulb_3_entity
      turnoff_entities_list:
      - light.study_room_bulb_4_entity
- id: '1678322978006'
  alias: Playroom Motion Lights
  description: Control the Playroom Lights when motion is detected, depending on lux
    level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.playroom_lights
      motion_sensor: binary_sensor.playroom_motion
      lux_sensor: sensor.yard_lux
      sufficient_lux: input_number.comfortable_lux
      insufficient_lux: input_number.minimum_lux
      dim_hours_start: input_datetime.wind_down
      blackout_hours_start: input_datetime.sleep_hours_start
      blackout_hours_end: input_datetime.sleep_hours_end
      dim_light_brightness: input_number.night_light_brightness
      morning_light_brightness: input_number.morning_light_brightness
- id: '1678323081528'
  alias: Playroom Motion Timeout
  description: Turn off Playroom Lights when no motion is detected for a certain amount
    of time.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor: binary_sensor.playroom_motion
      number_of_minutes: input_number.motion_timeout
      turnoff_entities_list:
      - light.playroom_lights
- id: '1678323204367'
  alias: Yard Motion Light
  description: Control the Yard Light when motion is detected, depending on lux level
    and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.yard_light_entity
      motion_sensor: binary_sensor.yard_motion
      lux_sensor: sensor.yard_lux
      sufficient_lux: input_number.comfortable_lux
      insufficient_lux: input_number.minimum_lux
      dim_hours_start: input_datetime.wind_down
      blackout_hours_start: input_datetime.sleep_hours_end
      blackout_hours_end: input_datetime.sleep_hours_end
      dim_light_brightness: input_number.night_light_brightness
      morning_light_brightness: input_number.morning_light_brightness
- id: '1678323253914'
  alias: Yard Motion Timeout
  description: Turn off the Yard Light when no motion is detected for a certain amount
    of time.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor: binary_sensor.yard_motion
      number_of_minutes: input_number.motion_short_timeout
      turnoff_entities_list:
      - light.yard_light_entity
- id: '1679619343225'
  alias: Living Room Motion Lights
  description: Control the Living Room Lights when motion is detected, depending on
    lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.living_room_lights
      motion_sensor: binary_sensor.living_room_motion
      lux_sensor: sensor.living_room_lux
      sufficient_lux: input_number.comfortable_lux
      insufficient_lux: input_number.minimum_lux
      dim_hours_start: input_datetime.wind_down
      blackout_hours_start: input_datetime.wind_down
      blackout_hours_end: input_datetime.sleep_hours_end
      dim_light_brightness: input_number.night_light_brightness
      morning_light_brightness: input_number.morning_light_brightness
- id: '1679619511575'
  alias: Living Room Motion Pendant Light
  description: Control the Living Room Pendant Light when motion is detected, depending
    on lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.living_room_pendant_light_entity
      motion_sensor: binary_sensor.living_room_motion
      lux_sensor: sensor.living_room_lux
      sufficient_lux: input_number.comfortable_lux
      insufficient_lux: input_number.minimum_lux
      dim_hours_start: input_datetime.wind_down
      blackout_hours_start: input_datetime.sleep_hours_end
      blackout_hours_end: input_datetime.sleep_hours_end
      dim_light_brightness: input_number.night_light_brightness
      morning_light_brightness: input_number.morning_light_brightness
- id: '1679619704393'
  alias: Living Room Motion Timeout
  description: Turn off lights, fan and AC in the Living Room when no motion is detected
    for the long timeout.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor: binary_sensor.living_room_motion
      number_of_minutes: input_number.motion_timeout
      turnoff_entities_list:
      - light.living_room_lights
      - light.living_room_pendant_light_entity
      - climate.living_room_ac
      - fan.living_room_fan
- id: '1679619826696'
  alias: Dining Room Motion Lights
  description: Control the Dining Room Lights when motion is detected, depending on
    lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.dining_room_lights
      motion_sensor: binary_sensor.dining_room_motion
      lux_sensor: sensor.dining_room_lux
      sufficient_lux: input_number.comfortable_lux
      insufficient_lux: input_number.minimum_lux
      dim_hours_start: input_datetime.wind_down
      blackout_hours_start: input_datetime.wind_down
      blackout_hours_end: input_datetime.sleep_hours_end
      dim_light_brightness: input_number.night_light_brightness
      morning_light_brightness: input_number.morning_light_brightness
- id: '1679619906548'
  alias: Dining Room Motion Pendant Light
  description: Control the Dining Room Pendant Light when motion is detected, depending
    on lux level and time.
  use_blueprint:
    path: danleongjy/motion_lights.yaml
    input:
      lights_list:
      - light.dining_room_pendant_light_entity
      motion_sensor: binary_sensor.dining_room_motion
      lux_sensor: sensor.dining_room_lux
      sufficient_lux: input_number.comfortable_lux
      insufficient_lux: input_number.minimum_lux
      dim_hours_start: input_datetime.wind_down
      blackout_hours_start: input_datetime.sleep_hours_end
      blackout_hours_end: input_datetime.sleep_hours_end
      dim_light_brightness: input_number.night_light_brightness
      morning_light_brightness: input_number.morning_light_brightness
- id: '1679619971749'
  alias: Dining Room Motion Timeout
  description: Turn off lights, fan and AC in the Dining Room when no motion is detected
    for the long timeout.
  use_blueprint:
    path: danleongjy/motion_timeout.yaml
    input:
      motion_sensor: binary_sensor.dining_room_motion
      number_of_minutes: input_number.motion_timeout
      turnoff_entities_list:
      - light.dining_room_lights
      - light.dining_room_pendant_light_entity
      - climate.dining_room_ac
      - fan.dining_room_fan
- id: '1679620287237'
  alias: Living Room Motion Fan
  description: Control the Living Room Fan when motion is detected, depending on whether
    the doors are open.
  use_blueprint:
    path: danleongjy/motion_fan.yaml
    input:
      motion_sensor: binary_sensor.living_room_motion
      fan: fan.living_room_fan
      fan_speed_door_closed: input_number.fans_lucci_speed_when_ac_on
      fan_speed_door_open: input_number.fans_lucci_speed_when_ac_off
- id: '1679620425571'
  alias: Dining Room Motion Fan
  description: Control the Dining Room Fan when motion is detected, depending on whether
    the doors are open.
  use_blueprint:
    path: danleongjy/motion_fan.yaml
    input:
      motion_sensor: binary_sensor.dining_room_motion
      fan: fan.dining_room_fan
      fan_speed_door_closed: input_number.fans_po_eco_speed_when_ac_on
      fan_speed_door_open: input_number.fans_po_eco_speed_when_ac_off
