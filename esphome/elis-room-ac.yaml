substitutions:
  name: elis_room_ac
  friendly_name: "Eli's Room AC"
  min_temp: 16
  max_temp: 29
  tx: 17
  rx: 18
  external_temp_sensor: sensor.elis_room_core_temperature
  external_hum_sensor: sensor.elis_room_core_humidity

esphome:
  name: elis-room-ac
  friendly_name: Eli's Room AC

esp32:
  board: nodemcu-32s
  framework:
    type: esp-idf

# Enable Home Assistant API
api:
  encryption:
    key: !secret elis_room_ac_api_key

ota:
  - platform: esphome
    password: !secret elis_room_ac_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: 192.168.18.63
    gateway: 192.168.18.1
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Eli's Room AC"
    password: !secret ap_password

captive_portal:
  
# Default logging level
logger:
  level: INFO

uart:
  id: HP_UART
  baud_rate: 2400
  tx_pin: ${tx}
  rx_pin: ${rx}

# External component reference
external_components:
  - source: github://echavet/MitsubishiCN105ESPHome

climate:
  - platform: cn105
    id: ac
    name: AC
    update_interval: 4s # update interval can be adjusted after a first run and logs monitoring
    supports:
      mode: ["OFF", COOL, FAN_ONLY, DRY]
      fan_mode: [AUTO, QUIET, LOW, MEDIUM, HIGH]
      swing_mode: ["OFF", VERTICAL]
    visual:
      min_temperature: 16
      max_temperature: 30
      temperature_step:
        target_temperature: 1
        current_temperature: 0.5
    remote_temperature_timeout: 30min
    vertical_vane_select:
      name: Vertical Vane
sensor:
  - platform: uptime
    name: Uptime
  - platform: homeassistant
    id: remote_temp_sensor
    entity_id: ${external_temp_sensor}
    internal: true
    device_class: temperature
    state_class: measurement
    unit_of_measurement: "Â°C"
    filters:
      # Uncomment the lambda line to convert F to C on incoming temperature
      #  - lambda: return (x - 32) * (5.0/9.0);
      - clamp: # Limits values to range accepted by Mitsubishi units
          min_value: 1
          max_value: 40
          ignore_out_of_range: true
      # - throttle: 30s
      - heartbeat: 30s
          
    on_value:
      then:
        - lambda: "id(ac).set_remote_temperature(x);"
