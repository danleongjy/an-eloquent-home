substitutions:
  core_room: study_room
  hostname_room: study-room
  capitalised_room_name: Study Room
  alarm_room: parents_room
  blinds_entity: cover.study_room_blinds
  blinds_auto_control_automation: automation.south_facing_blinds_auto_control
  display_rotation: 270Â°
  volume: "0.003" # 0.005 generally loud enough
  
esp32:
  board: esp32dev
  framework:
    type: arduino
    
esphome:
  name: ${hostname_room}-core
  friendly_name: ${capitalised_room_name} Core

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "zWKpL7mXSOOs0IxjaQyLT6LqlNd8GpZtk6+HWvY2f6U="

ota:
  - platform: esphome
    password: "0db07cbca96c027ecaa08d3bab77a931"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: 192.168.18.17
    gateway: 192.168.18.1
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Study-Room-Core Fallback Hotspot"
    password: "wgvG2Ifd6sZp"

captive_portal:

packages:
  core: !include packages/room_core.yaml
  study_room_blinds: !include packages/room_blinds.yaml

light:
  - id: !remove led_strips

i2c: !remove

sensor:  
  - platform: homeassistant
    id: room_temp
    entity_id: sensor.${core_room}_temperature
  - platform: homeassistant
    id: room_hum
    entity_id: sensor.${core_room}_humidity
  - id: !extend room_lux
    entity_id: sensor.study_room_radar_lux_calibrated

display:
  - id: !extend interface_display
    on_page_change:
      - to: blinds
        then:
          lambda: 'id(current_view).publish_state("blinds");'
    pages:
      - id: !extend lights
        lambda: |-
          // tabs
          it.image(id(width) * 0.375, id(height) * 0.825, id(tab_fan), ImageAlign::CENTER);
          it.image(id(width) * 0.625, id(height) * 0.825, id(tab_ac), ImageAlign::CENTER);
          it.image(id(width) * 0.875, id(height) * 0.825, id(tab_blinds), ImageAlign::CENTER);

          id(draw_display_borders).execute();
          id(draw_display_bottom_status_bar).execute();
          id(draw_display_main_lights).execute();
      - id: !extend fan
        lambda: |-
          // tabs
          it.image(id(width) * 0.375, id(height) * 0.825, id(tab_ac), ImageAlign::CENTER);
          it.image(id(width) * 0.625, id(height) * 0.825, id(tab_blinds), ImageAlign::CENTER);
          it.image(id(width) * 0.875, id(height) * 0.825, id(tab_current_time), ImageAlign::CENTER);

          id(draw_display_borders).execute();
          id(draw_display_bottom_status_bar).execute();
          id(draw_display_main_fan).execute();
      - id: !extend ac
        lambda: |-
          // tabs
          it.image(id(width) * 0.375, id(height) * 0.825, id(tab_blinds), ImageAlign::CENTER);
          it.image(id(width) * 0.625, id(height) * 0.825, id(tab_current_time), ImageAlign::CENTER);
          it.image(id(width) * 0.875, id(height) * 0.825, id(tab_lights), ImageAlign::CENTER);

          id(draw_display_borders).execute();
          id(draw_display_bottom_status_bar).execute();
          id(draw_display_main_ac).execute();
      - id: blinds
        lambda: |-
          // tabs
          it.image(id(width) * 0.375, id(height) * 0.825, id(tab_current_time), ImageAlign::CENTER);
          it.image(id(width) * 0.625, id(height) * 0.825, id(tab_lights), ImageAlign::CENTER);
          it.image(id(width) * 0.875, id(height) * 0.825, id(tab_fan), ImageAlign::CENTER);

          id(draw_display_borders).execute();
          id(draw_display_bottom_status_bar).execute();
          id(draw_display_main_blinds).execute();