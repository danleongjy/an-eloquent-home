substitutions:
  core_room: parents_room
  hostname_room: parents-room
  capitalised_room_name: Parents' Room
  alarm_room: parents_room
  blinds_entity: cover.master_bathroom_blind
  blinds_auto_control_automation: automation.master_bathroom_blind_auto_control
  display_rotation: 270Â°
  volume: "0.001" # 0.005 generally loud enough

esp32:
  board: m5stack-fire
  flash_size: 16MB
  framework:
    type: arduino
    
esphome:
  name: ${hostname_room}-core
  friendly_name: ${capitalised_room_name} Core

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "3NQFmL4Y0QyJt7MFvqt9s3Wjq5nLpHTSIcG6mdgFYOM="

ota:
  - platform: esphome
    password: "1aaafe04f74a3080a6d01d10b4280023"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: 192.168.18.14
    gateway: 192.168.18.1
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${hostname_room}-core"
    password: "IyN9nZcVuCzJ"

captive_portal:
    
packages:
  core: !include packages/room_core.yaml
  env3: !include packages/env3.yaml
  master_bathroom_blind: !include packages/room_blinds.yaml
  
display:
  - id: !extend interface_display
    on_page_change:
      - to: blinds
        then:
          lambda: 'id(current_view).publish_state("blinds");'
    pages:
      - id: !extend lights
        lambda: |-
          // tabs
          it.image(id(width) * 0.375, id(height) * 0.825, id(tab_fan), ImageAlign::CENTER);
          it.image(id(width) * 0.625, id(height) * 0.825, id(tab_ac), ImageAlign::CENTER);
          it.image(id(width) * 0.875, id(height) * 0.825, id(tab_blinds), ImageAlign::CENTER);

          id(draw_display_borders).execute();
          id(draw_display_bottom_status_bar).execute();
          id(draw_display_main_lights).execute();
      - id: !extend fan
        lambda: |-
          // tabs
          it.image(id(width) * 0.375, id(height) * 0.825, id(tab_ac), ImageAlign::CENTER);
          it.image(id(width) * 0.625, id(height) * 0.825, id(tab_blinds), ImageAlign::CENTER);
          it.image(id(width) * 0.875, id(height) * 0.825, id(tab_current_time), ImageAlign::CENTER);

          id(draw_display_borders).execute();
          id(draw_display_bottom_status_bar).execute();
          id(draw_display_main_fan).execute();
      - id: !extend ac
        lambda: |-
          // tabs
          it.image(id(width) * 0.375, id(height) * 0.825, id(tab_blinds), ImageAlign::CENTER);
          it.image(id(width) * 0.625, id(height) * 0.825, id(tab_current_time), ImageAlign::CENTER);
          it.image(id(width) * 0.875, id(height) * 0.825, id(tab_lights), ImageAlign::CENTER);

          id(draw_display_borders).execute();
          id(draw_display_bottom_status_bar).execute();
          id(draw_display_main_ac).execute();
      - id: blinds
        lambda: |-
          it.image(id(width) * 0.375, id(height) * 0.825, id(tab_current_time), ImageAlign::CENTER);
          it.image(id(width) * 0.625, id(height) * 0.825, id(tab_lights), ImageAlign::CENTER);
          it.image(id(width) * 0.875, id(height) * 0.825, id(tab_fan), ImageAlign::CENTER);

          id(draw_display_borders).execute();
          id(draw_display_bottom_status_bar).execute();
          id(draw_display_main_blinds).execute();